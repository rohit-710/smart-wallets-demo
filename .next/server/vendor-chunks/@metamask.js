"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@metamask";
exports.ids = ["vendor-chunks/@metamask"];
exports.modules = {

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/abi.js":
/*!******************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/abi.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// ESLint gets confused by the nested list and tables in the docs, so we disable\n// the rule for this file.\n/* eslint-disable jsdoc/check-indentation, jsdoc/match-description */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeSingle = exports.decode = exports.encodePacked = exports.encodeSingle = exports.encode = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst packer_1 = __webpack_require__(/*! ./packer */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/packer.js\");\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types.\n *\n * This will attempt to parse the values into the correct types. For example,\n * if you pass in a hex string for a `uint256`, it will be parsed into a\n * `bigint`. Regular strings are interpreted as UTF-8 strings. If you want to\n * pass in a hex string, you must pass it in as a `Uint8Array`, or use the\n * \"0x\"-prefix.\n *\n * It will also attempt to infer the types of the values. For example, if you\n * pass in a string for a `uint256`, it will result in a TypeScript compile-time\n * error. This does not work for all types, however. For example, if you use\n * nested arrays or tuples, the type will be inferred as `unknown`.\n *\n * The following types are supported:\n *\n * - `address`: A 20-byte Ethereum address.\n *   - As a 40-character-long hexadecimal string, starting with \"0x\".\n *   - As a 20-byte-long byte array, i.e., `Uint8Array`.\n * - `bool`: A boolean value.\n *   - As a boolean literal, i.e., `true` or `false`.\n *   - As the strings \"true\" or \"false\".\n * - `bytes(n)`: A dynamic byte array.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n *   - As a regular string, which will be interpreted as UTF-8.\n * - `function`: A Solidity function.\n *   - As a 48-character-long hexadecimal string, starting with \"0x\".\n *   - As a 24-byte-long byte array, i.e., `Uint8Array`.\n *   - As a {@link SolidityFunction} object.\n * - `int(n)`: A signed integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n * - `string`: A dynamic UTF-8 string.\n *   - As a regular string.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n * - `tuple`: A tuple of values.\n *   - As an array of values.\n * - `uint(n)`: An unsigned integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html\n * @param types - The types to encode.\n * @param values - The values to encode. This array must have the same length as\n * the types array.\n * @param packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param tight - Whether to pack the values tightly. When enabled, the values\n * will be packed without any padding. This matches the behaviour of\n * `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nconst encode = (types, values, packed, tight) => {\n    try {\n        return (0, packer_1.pack)({ types, values, packed, tight });\n    }\n    catch (error) {\n        if (error instanceof errors_1.ParserError) {\n            throw new errors_1.ParserError(`Unable to encode value: ${error.message}`, error);\n        }\n        throw new errors_1.ParserError(`An unexpected error occurred: ${(0, errors_1.getErrorMessage)(error)}`, error);\n    }\n};\nexports.encode = encode;\n/**\n * Encode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to encode.\n * @param value - The value to encode.\n * @returns The ABI encoded bytes.\n */\nconst encodeSingle = (type, value) => {\n    return (0, exports.encode)([type], [value]);\n};\nexports.encodeSingle = encodeSingle;\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types. This is similar to {@link encode}, but the values are encoded in\n * the non-standard packed mode. This differs from the standard encoding in the\n * following ways:\n *\n * - Most values are packed tightly, without alignment padding.\n *   - The exception is array values, which are padded to 32 bytes.\n * - Values are still padded to their full size, i.e., `uint16` values are still\n *  padded to 2 bytes, regardless of the length of the value.\n * - The encoding of dynamic types (`bytes`, `string`) is different. The length\n * of the dynamic type is not included in the encoding, and the dynamic type is\n * not padded to a multiple of 32 bytes.\n * - All values are encoded in-place, without any offsets.\n *\n * The encoding of this is ambiguous as soon as there is more than one dynamic\n * type. That means that these values cannot be decoded with {@link decode} or\n * Solidity's `abi.decode` function.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodePacked } from '@metamask/abi-utils';\n *\n * const encoded = encodePacked(['uint8'], [42]);\n *\n * console.log(encoded); // `Uint8Array [ 42 ]`\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#non-standard-packed-mode\n * @param types - The types to encode.\n * @param values - The values to encode.\n * @param tight - Whether to pack the values tightly. When enabled, `bytesN`\n * values in arrays will be packed without any padding. This matches the\n * behaviour of `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nconst encodePacked = (types, values, tight) => {\n    return (0, exports.encode)(types, values, true, tight);\n};\nexports.encodePacked = encodePacked;\n/**\n * Decode an ABI encoded buffer with the specified types. The types must be\n * valid Solidity ABI types.\n *\n * This will attempt to infer the output types from the input types. For\n * example, if you use `uint256` as an input type, the output type will be\n * `bigint`. This does not work for all types, however. For example, if you use\n * nested array types or tuple types, the output type will be `unknown`.\n *\n * The resulting types of the values will be as follows:\n *\n * | Contract ABI Type | Resulting JavaScript Type |\n * | ----------------- | ------------------------- |\n * | `address`         | `string`                  |\n * | `bool`            | `boolean`                 |\n * | `bytes(n)`        | `Uint8Array`              |\n * | `function`        | {@link SolidityFunction}  |\n * | `int(n)`          | `bigint`                  |\n * | `string`          | `string`                  |\n * | `tuple`           | `Array`                   |\n * | `array`           | `Array`                   |\n * | `uint(n)`         | `bigint`                  |\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param types - The types to decode the bytes with.\n * @param value - The bytes-like value to decode.\n * @returns The decoded values as array.\n */\nconst decode = (types, value) => {\n    const bytes = (0, utils_1.createBytes)(value);\n    try {\n        return (0, packer_1.unpack)(types, bytes);\n    }\n    catch (error) {\n        if (error instanceof errors_1.ParserError) {\n            throw new errors_1.ParserError(`Unable to decode value: ${error.message}`, error);\n        }\n        throw new errors_1.ParserError(`An unexpected error occurred: ${(0, errors_1.getErrorMessage)(error)}`, error);\n    }\n};\nexports.decode = decode;\n/**\n * Decode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link decode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to decode.\n * @param value - The bytes-like value to decode.\n * @returns The decoded value.\n */\nconst decodeSingle = (type, value) => {\n    const result = (0, exports.decode)([type], value);\n    (0, utils_1.assert)(result.length === 1, new errors_1.ParserError('Decoded value array has unexpected length.'));\n    return result[0];\n};\nexports.decodeSingle = decodeSingle;\n//# sourceMappingURL=abi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/abi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/errors.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParserError = exports.getErrorStack = exports.getErrorMessage = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\n/**\n * Attempt to get an error message from a value.\n *\n * - If the value is an error, the error's message is returned.\n * - If the value is an object with a `message` property, the value of that\n * property is returned.\n * - If the value is a string, the value is returned.\n * - Otherwise, \"Unknown error.\" is returned.\n *\n * @param error - The value to get an error message from.\n * @returns The error message.\n * @internal\n */\nconst getErrorMessage = (error) => {\n    if (typeof error === 'string') {\n        return error;\n    }\n    if (error instanceof Error) {\n        return error.message;\n    }\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'message') &&\n        typeof error.message === 'string') {\n        return error.message;\n    }\n    return 'Unknown error.';\n};\nexports.getErrorMessage = getErrorMessage;\n/**\n * Get the error stack from a value. If the value is an error, the error's stack\n * is returned. Otherwise, it returns `undefined`.\n *\n * @param error - The value to get an error stack from.\n * @returns The error stack, or `undefined` if the value is not an error.\n * @internal\n */\nconst getErrorStack = (error) => {\n    if (error instanceof Error) {\n        return error.stack;\n    }\n    return undefined;\n};\nexports.getErrorStack = getErrorStack;\n/**\n * An error that is thrown when the ABI encoder or decoder encounters an\n * issue.\n */\nclass ParserError extends Error {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'ParserError';\n        const originalStack = (0, exports.getErrorStack)(originalError);\n        if (originalStack) {\n            this.stack = originalStack;\n        }\n    }\n}\nexports.ParserError = ParserError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxxQkFBcUIsR0FBRyx1QkFBdUI7QUFDckUsZ0JBQWdCLG1CQUFPLENBQUMsMkVBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L2Vycm9ycy5qcz9hYzFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QYXJzZXJFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JTdGFjayA9IGV4cG9ydHMuZ2V0RXJyb3JNZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbWV0YW1hc2svdXRpbHNcIik7XG4vKipcbiAqIEF0dGVtcHQgdG8gZ2V0IGFuIGVycm9yIG1lc3NhZ2UgZnJvbSBhIHZhbHVlLlxuICpcbiAqIC0gSWYgdGhlIHZhbHVlIGlzIGFuIGVycm9yLCB0aGUgZXJyb3IncyBtZXNzYWdlIGlzIHJldHVybmVkLlxuICogLSBJZiB0aGUgdmFsdWUgaXMgYW4gb2JqZWN0IHdpdGggYSBgbWVzc2FnZWAgcHJvcGVydHksIHRoZSB2YWx1ZSBvZiB0aGF0XG4gKiBwcm9wZXJ0eSBpcyByZXR1cm5lZC5cbiAqIC0gSWYgdGhlIHZhbHVlIGlzIGEgc3RyaW5nLCB0aGUgdmFsdWUgaXMgcmV0dXJuZWQuXG4gKiAtIE90aGVyd2lzZSwgXCJVbmtub3duIGVycm9yLlwiIGlzIHJldHVybmVkLlxuICpcbiAqIEBwYXJhbSBlcnJvciAtIFRoZSB2YWx1ZSB0byBnZXQgYW4gZXJyb3IgbWVzc2FnZSBmcm9tLlxuICogQHJldHVybnMgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgZ2V0RXJyb3JNZXNzYWdlID0gKGVycm9yKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH1cbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICByZXR1cm4gZXJyb3IubWVzc2FnZTtcbiAgICB9XG4gICAgaWYgKCgwLCB1dGlsc18xLmlzT2JqZWN0KShlcnJvcikgJiZcbiAgICAgICAgKDAsIHV0aWxzXzEuaGFzUHJvcGVydHkpKGVycm9yLCAnbWVzc2FnZScpICYmXG4gICAgICAgIHR5cGVvZiBlcnJvci5tZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZXJyb3IubWVzc2FnZTtcbiAgICB9XG4gICAgcmV0dXJuICdVbmtub3duIGVycm9yLic7XG59O1xuZXhwb3J0cy5nZXRFcnJvck1lc3NhZ2UgPSBnZXRFcnJvck1lc3NhZ2U7XG4vKipcbiAqIEdldCB0aGUgZXJyb3Igc3RhY2sgZnJvbSBhIHZhbHVlLiBJZiB0aGUgdmFsdWUgaXMgYW4gZXJyb3IsIHRoZSBlcnJvcidzIHN0YWNrXG4gKiBpcyByZXR1cm5lZC4gT3RoZXJ3aXNlLCBpdCByZXR1cm5zIGB1bmRlZmluZWRgLlxuICpcbiAqIEBwYXJhbSBlcnJvciAtIFRoZSB2YWx1ZSB0byBnZXQgYW4gZXJyb3Igc3RhY2sgZnJvbS5cbiAqIEByZXR1cm5zIFRoZSBlcnJvciBzdGFjaywgb3IgYHVuZGVmaW5lZGAgaWYgdGhlIHZhbHVlIGlzIG5vdCBhbiBlcnJvci5cbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBnZXRFcnJvclN0YWNrID0gKGVycm9yKSA9PiB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yLnN0YWNrO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmV4cG9ydHMuZ2V0RXJyb3JTdGFjayA9IGdldEVycm9yU3RhY2s7XG4vKipcbiAqIEFuIGVycm9yIHRoYXQgaXMgdGhyb3duIHdoZW4gdGhlIEFCSSBlbmNvZGVyIG9yIGRlY29kZXIgZW5jb3VudGVycyBhblxuICogaXNzdWUuXG4gKi9cbmNsYXNzIFBhcnNlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9yaWdpbmFsRXJyb3IpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdQYXJzZXJFcnJvcic7XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsU3RhY2sgPSAoMCwgZXhwb3J0cy5nZXRFcnJvclN0YWNrKShvcmlnaW5hbEVycm9yKTtcbiAgICAgICAgaWYgKG9yaWdpbmFsU3RhY2spIHtcbiAgICAgICAgICAgIHRoaXMuc3RhY2sgPSBvcmlnaW5hbFN0YWNrO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5QYXJzZXJFcnJvciA9IFBhcnNlckVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./abi */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/abi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/types/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxtRUFBTztBQUM1QixhQUFhLG1CQUFPLENBQUMseUVBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLDZFQUFTO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9hYmktdXRpbHMvZGlzdC9pbmRleC5qcz8zOWQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWJpXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcnJvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/iterator.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.iterate = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\n/**\n * Iterate over a buffer with the specified size. This will yield a part of the\n * buffer starting at an increment of the specified size, until the end of the\n * buffer is reached.\n *\n * Calling the `skip` function will make it skip the specified number of bytes.\n *\n * @param buffer - The buffer to iterate over.\n * @param size - The number of bytes to iterate with.\n * @returns An iterator that yields the parts of the byte array.\n * @yields The parts of the byte array.\n */\nconst iterate = function* (buffer, size = 32) {\n    for (let pointer = 0; pointer < buffer.length; pointer += size) {\n        const skip = (length) => {\n            (0, utils_1.assert)(length >= 0, 'Cannot skip a negative number of bytes.');\n            (0, utils_1.assert)(length % size === 0, 'Length must be a multiple of the size.');\n            pointer += length;\n        };\n        const value = buffer.subarray(pointer);\n        yield { skip, value };\n    }\n    return {\n        skip: () => undefined,\n        value: new Uint8Array(),\n    };\n};\nexports.iterate = iterate;\n//# sourceMappingURL=iterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L2l0ZXJhdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseUJBQXlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L2l0ZXJhdG9yLmpzPzNiMWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLml0ZXJhdGUgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBtZXRhbWFzay91dGlsc1wiKTtcbi8qKlxuICogSXRlcmF0ZSBvdmVyIGEgYnVmZmVyIHdpdGggdGhlIHNwZWNpZmllZCBzaXplLiBUaGlzIHdpbGwgeWllbGQgYSBwYXJ0IG9mIHRoZVxuICogYnVmZmVyIHN0YXJ0aW5nIGF0IGFuIGluY3JlbWVudCBvZiB0aGUgc3BlY2lmaWVkIHNpemUsIHVudGlsIHRoZSBlbmQgb2YgdGhlXG4gKiBidWZmZXIgaXMgcmVhY2hlZC5cbiAqXG4gKiBDYWxsaW5nIHRoZSBgc2tpcGAgZnVuY3Rpb24gd2lsbCBtYWtlIGl0IHNraXAgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgYnl0ZXMuXG4gKlxuICogQHBhcmFtIGJ1ZmZlciAtIFRoZSBidWZmZXIgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHNpemUgLSBUaGUgbnVtYmVyIG9mIGJ5dGVzIHRvIGl0ZXJhdGUgd2l0aC5cbiAqIEByZXR1cm5zIEFuIGl0ZXJhdG9yIHRoYXQgeWllbGRzIHRoZSBwYXJ0cyBvZiB0aGUgYnl0ZSBhcnJheS5cbiAqIEB5aWVsZHMgVGhlIHBhcnRzIG9mIHRoZSBieXRlIGFycmF5LlxuICovXG5jb25zdCBpdGVyYXRlID0gZnVuY3Rpb24qIChidWZmZXIsIHNpemUgPSAzMikge1xuICAgIGZvciAobGV0IHBvaW50ZXIgPSAwOyBwb2ludGVyIDwgYnVmZmVyLmxlbmd0aDsgcG9pbnRlciArPSBzaXplKSB7XG4gICAgICAgIGNvbnN0IHNraXAgPSAobGVuZ3RoKSA9PiB7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKGxlbmd0aCA+PSAwLCAnQ2Fubm90IHNraXAgYSBuZWdhdGl2ZSBudW1iZXIgb2YgYnl0ZXMuJyk7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKGxlbmd0aCAlIHNpemUgPT09IDAsICdMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIHRoZSBzaXplLicpO1xuICAgICAgICAgICAgcG9pbnRlciArPSBsZW5ndGg7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHZhbHVlID0gYnVmZmVyLnN1YmFycmF5KHBvaW50ZXIpO1xuICAgICAgICB5aWVsZCB7IHNraXAsIHZhbHVlIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHNraXA6ICgpID0+IHVuZGVmaW5lZCxcbiAgICAgICAgdmFsdWU6IG5ldyBVaW50OEFycmF5KCksXG4gICAgfTtcbn07XG5leHBvcnRzLml0ZXJhdGUgPSBpdGVyYXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXRlcmF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/packer.js":
/*!*********************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/packer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.unpack = exports.pack = exports.isDynamicParser = exports.getParser = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst iterator_1 = __webpack_require__(/*! ./iterator */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/iterator.js\");\nconst parsers_1 = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/index.js\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\");\n/**\n * Get the parser for the specified type.\n *\n * @param type - The type to get a parser for.\n * @returns The parser.\n * @throws If there is no parser for the specified type.\n */\nconst getParser = (type) => {\n    const parsers = {\n        address: parsers_1.address,\n        array: parsers_1.array,\n        bool: parsers_1.bool,\n        bytes: parsers_1.bytes,\n        fixedBytes: parsers_1.fixedBytes,\n        function: parsers_1.fn,\n        number: parsers_1.number,\n        string: parsers_1.string,\n        tuple: parsers_1.tuple,\n    };\n    const staticParser = parsers[type];\n    if (staticParser) {\n        return staticParser;\n    }\n    const parser = Object.values(parsers).find((value) => value.isType(type));\n    if (parser) {\n        return parser;\n    }\n    throw new errors_1.ParserError(`The type \"${type}\" is not supported.`);\n};\nexports.getParser = getParser;\n/**\n * Check if the specified parser is dynamic, for the provided types. This is\n * primarily used for parsing tuples, where a tuple can be dynamic based on the\n * types. For other parsers, it will simply use the set `isDynamic` value.\n *\n * @param parser - The parser to check.\n * @param type - The type to check the parser with.\n * @returns Whether the parser is dynamic.\n */\nconst isDynamicParser = (parser, type) => {\n    const { isDynamic } = parser;\n    if (typeof isDynamic === 'function') {\n        return isDynamic(type);\n    }\n    return isDynamic;\n};\nexports.isDynamicParser = isDynamicParser;\n/**\n * Pack the provided values in a buffer, encoded with the specified types. If a\n * buffer is specified, the resulting value will be concatenated with the\n * buffer.\n *\n * @param args - The arguments object.\n * @param args.types - The types of the values to pack.\n * @param args.values - The values to pack.\n * @param args.packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param args.arrayPacked - Whether to use the non-standard packed mode for\n * arrays. Defaults to `false`.\n * @param args.byteArray - The byte array to encode the values into. Defaults to\n * an empty array.\n * @param args.tight - Whether to use tight packing mode. Only applicable when\n * `packed` is true. When true, the packed mode will not add any padding bytes.\n * This matches the packing behaviour of `ethereumjs-abi`, but is not standard.\n * @returns The resulting encoded buffer.\n */\nconst pack = ({ types, values, packed = false, tight = false, arrayPacked = false, byteArray = new Uint8Array(), }) => {\n    (0, utils_1.assert)(types.length === values.length, new errors_1.ParserError(`The number of types (${types.length}) does not match the number of values (${values.length}).`));\n    const { staticBuffer, dynamicBuffer, pointers } = types.reduce(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ staticBuffer, dynamicBuffer, pointers }, type, index) => {\n        const parser = (0, exports.getParser)(type);\n        const value = values[index];\n        // If packed mode is enabled, we can skip the dynamic check, as all\n        // values are encoded in the static buffer.\n        if (packed || arrayPacked || !(0, exports.isDynamicParser)(parser, type)) {\n            return {\n                staticBuffer: parser.encode({\n                    buffer: staticBuffer,\n                    value,\n                    type,\n                    packed,\n                    tight,\n                }),\n                dynamicBuffer,\n                pointers,\n            };\n        }\n        const newStaticBuffer = (0, utils_1.concatBytes)([staticBuffer, new Uint8Array(32)]);\n        const newDynamicBuffer = parser.encode({\n            buffer: dynamicBuffer,\n            value,\n            type,\n            packed,\n            tight,\n        });\n        return {\n            staticBuffer: newStaticBuffer,\n            dynamicBuffer: newDynamicBuffer,\n            pointers: [\n                ...pointers,\n                { position: staticBuffer.length, pointer: dynamicBuffer.length },\n            ],\n        };\n    }, {\n        staticBuffer: new Uint8Array(),\n        dynamicBuffer: new Uint8Array(),\n        pointers: [],\n    });\n    // If packed mode is enabled, there shouldn't be any dynamic values.\n    (0, utils_1.assert)((!packed && !arrayPacked) || dynamicBuffer.length === 0, new errors_1.ParserError('Invalid pack state.'));\n    const dynamicStart = staticBuffer.length;\n    const updatedBuffer = pointers.reduce((target, { pointer, position }) => {\n        const offset = (0, utils_2.padStart)((0, utils_1.numberToBytes)(dynamicStart + pointer));\n        return (0, utils_2.set)(target, offset, position);\n    }, staticBuffer);\n    return (0, utils_1.concatBytes)([byteArray, updatedBuffer, dynamicBuffer]);\n};\nexports.pack = pack;\nconst unpack = (types, buffer) => {\n    const iterator = (0, iterator_1.iterate)(buffer);\n    return types.map((type) => {\n        const { value: { value, skip }, done, } = iterator.next();\n        (0, utils_1.assert)(!done, new errors_1.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse \"${type}\".`));\n        const parser = (0, exports.getParser)(type);\n        const isDynamic = (0, exports.isDynamicParser)(parser, type);\n        if (isDynamic) {\n            const pointer = (0, utils_1.bytesToNumber)(value.subarray(0, 32));\n            const target = buffer.subarray(pointer);\n            return parser.decode({ type, value: target, skip });\n        }\n        return parser.decode({ type, value, skip });\n    });\n};\nexports.unpack = unpack;\n//# sourceMappingURL=packer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/packer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/address.js":
/*!******************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/address.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.address = exports.getAddress = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\");\n/**\n * Normalize an address value. This accepts the address as:\n *\n * - A hex string starting with the `0x` prefix.\n * - A byte array (`Uint8Array` or `Buffer`).\n *\n * It checks that the address is 20 bytes long.\n *\n * @param value - The value to normalize.\n * @returns The normalized address as `Uint8Array`.\n */\nconst getAddress = (value) => {\n    const bytesValue = (0, utils_1.createBytes)(value);\n    (0, utils_1.assert)(bytesValue.length <= 20, new errors_1.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${bytesValue.length} bytes.`));\n    return (0, utils_2.padStart)(bytesValue, 20);\n};\nexports.getAddress = getAddress;\nexports.address = {\n    isDynamic: false,\n    /**\n     * Get if the given value is a valid address type. Since `address` is a simple\n     * type, this is just a check that the value is \"address\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a valid address type.\n     */\n    isType: (type) => type === 'address',\n    /**\n     * Get the byte length of an encoded address. Since `address` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual addresses are only 20 bytes long, but the encoding of\n     * the `address` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded address.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given address to a 32-byte-long byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The address to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded address added to it.\n     */\n    encode({ buffer, value, packed }) {\n        const addressValue = (0, exports.getAddress)(value);\n        // If we're using packed encoding, we can just add the address bytes to the\n        // byte array, without adding any padding.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, addressValue]);\n        }\n        const addressBuffer = (0, utils_2.padStart)(addressValue);\n        return (0, utils_1.concatBytes)([buffer, addressBuffer]);\n    },\n    /**\n     * Decode the given byte array to an address.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded address as a hexadecimal string, starting with the\n     * \"0x\"-prefix.\n     */\n    decode({ value }) {\n        return (0, utils_1.add0x)((0, utils_1.bytesToHex)(value.slice(12, 32)));\n    },\n};\n//# sourceMappingURL=address.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvYWRkcmVzcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsa0JBQWtCO0FBQ3BDLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFpQjtBQUN6QyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBVztBQUNwQyxnQkFBZ0IsbUJBQU8sQ0FBQyw4RUFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVKQUF1SixtQkFBbUI7QUFDMUs7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svYWJpLXV0aWxzL2Rpc3QvcGFyc2Vycy9hZGRyZXNzLmpzP2E3NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFkZHJlc3MgPSBleHBvcnRzLmdldEFkZHJlc3MgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBtZXRhbWFzay91dGlsc1wiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL2Vycm9yc1wiKTtcbmNvbnN0IHV0aWxzXzIgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG4vKipcbiAqIE5vcm1hbGl6ZSBhbiBhZGRyZXNzIHZhbHVlLiBUaGlzIGFjY2VwdHMgdGhlIGFkZHJlc3MgYXM6XG4gKlxuICogLSBBIGhleCBzdHJpbmcgc3RhcnRpbmcgd2l0aCB0aGUgYDB4YCBwcmVmaXguXG4gKiAtIEEgYnl0ZSBhcnJheSAoYFVpbnQ4QXJyYXlgIG9yIGBCdWZmZXJgKS5cbiAqXG4gKiBJdCBjaGVja3MgdGhhdCB0aGUgYWRkcmVzcyBpcyAyMCBieXRlcyBsb25nLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSB0byBub3JtYWxpemUuXG4gKiBAcmV0dXJucyBUaGUgbm9ybWFsaXplZCBhZGRyZXNzIGFzIGBVaW50OEFycmF5YC5cbiAqL1xuY29uc3QgZ2V0QWRkcmVzcyA9ICh2YWx1ZSkgPT4ge1xuICAgIGNvbnN0IGJ5dGVzVmFsdWUgPSAoMCwgdXRpbHNfMS5jcmVhdGVCeXRlcykodmFsdWUpO1xuICAgICgwLCB1dGlsc18xLmFzc2VydCkoYnl0ZXNWYWx1ZS5sZW5ndGggPD0gMjAsIG5ldyBlcnJvcnNfMS5QYXJzZXJFcnJvcihgSW52YWxpZCBhZGRyZXNzIHZhbHVlLiBFeHBlY3RlZCBhZGRyZXNzIHRvIGJlIDIwIGJ5dGVzIGxvbmcsIGJ1dCByZWNlaXZlZCAke2J5dGVzVmFsdWUubGVuZ3RofSBieXRlcy5gKSk7XG4gICAgcmV0dXJuICgwLCB1dGlsc18yLnBhZFN0YXJ0KShieXRlc1ZhbHVlLCAyMCk7XG59O1xuZXhwb3J0cy5nZXRBZGRyZXNzID0gZ2V0QWRkcmVzcztcbmV4cG9ydHMuYWRkcmVzcyA9IHtcbiAgICBpc0R5bmFtaWM6IGZhbHNlLFxuICAgIC8qKlxuICAgICAqIEdldCBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCBhZGRyZXNzIHR5cGUuIFNpbmNlIGBhZGRyZXNzYCBpcyBhIHNpbXBsZVxuICAgICAqIHR5cGUsIHRoaXMgaXMganVzdCBhIGNoZWNrIHRoYXQgdGhlIHZhbHVlIGlzIFwiYWRkcmVzc1wiLlxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGUgLSBUaGUgdHlwZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB0eXBlIGlzIGEgdmFsaWQgYWRkcmVzcyB0eXBlLlxuICAgICAqL1xuICAgIGlzVHlwZTogKHR5cGUpID0+IHR5cGUgPT09ICdhZGRyZXNzJyxcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGUgbGVuZ3RoIG9mIGFuIGVuY29kZWQgYWRkcmVzcy4gU2luY2UgYGFkZHJlc3NgIGlzIGEgc2ltcGxlXG4gICAgICogdHlwZSwgdGhpcyBhbHdheXMgcmV0dXJucyAzMi5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCBhY3R1YWwgYWRkcmVzc2VzIGFyZSBvbmx5IDIwIGJ5dGVzIGxvbmcsIGJ1dCB0aGUgZW5jb2Rpbmcgb2ZcbiAgICAgKiB0aGUgYGFkZHJlc3NgIHR5cGUgaXMgYWx3YXlzIDMyIGJ5dGVzIGxvbmcuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZSBsZW5ndGggb2YgYW4gZW5jb2RlZCBhZGRyZXNzLlxuICAgICAqL1xuICAgIGdldEJ5dGVMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiAzMjtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEVuY29kZSB0aGUgZ2l2ZW4gYWRkcmVzcyB0byBhIDMyLWJ5dGUtbG9uZyBieXRlIGFycmF5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBUaGUgZW5jb2RpbmcgYXJndW1lbnRzLlxuICAgICAqIEBwYXJhbSBhcmdzLmJ1ZmZlciAtIFRoZSBieXRlIGFycmF5IHRvIGFkZCB0by5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSBhZGRyZXNzIHRvIGVuY29kZS5cbiAgICAgKiBAcGFyYW0gYXJncy5wYWNrZWQgLSBXaGV0aGVyIHRvIHVzZSBwYWNrZWQgZW5jb2RpbmcuXG4gICAgICogQHJldHVybnMgVGhlIGJ5dGVzIHdpdGggdGhlIGVuY29kZWQgYWRkcmVzcyBhZGRlZCB0byBpdC5cbiAgICAgKi9cbiAgICBlbmNvZGUoeyBidWZmZXIsIHZhbHVlLCBwYWNrZWQgfSkge1xuICAgICAgICBjb25zdCBhZGRyZXNzVmFsdWUgPSAoMCwgZXhwb3J0cy5nZXRBZGRyZXNzKSh2YWx1ZSk7XG4gICAgICAgIC8vIElmIHdlJ3JlIHVzaW5nIHBhY2tlZCBlbmNvZGluZywgd2UgY2FuIGp1c3QgYWRkIHRoZSBhZGRyZXNzIGJ5dGVzIHRvIHRoZVxuICAgICAgICAvLyBieXRlIGFycmF5LCB3aXRob3V0IGFkZGluZyBhbnkgcGFkZGluZy5cbiAgICAgICAgaWYgKHBhY2tlZCkge1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmNvbmNhdEJ5dGVzKShbYnVmZmVyLCBhZGRyZXNzVmFsdWVdKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhZGRyZXNzQnVmZmVyID0gKDAsIHV0aWxzXzIucGFkU3RhcnQpKGFkZHJlc3NWYWx1ZSk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS5jb25jYXRCeXRlcykoW2J1ZmZlciwgYWRkcmVzc0J1ZmZlcl0pO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRGVjb2RlIHRoZSBnaXZlbiBieXRlIGFycmF5IHRvIGFuIGFkZHJlc3MuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYXJncyAtIFRoZSBkZWNvZGluZyBhcmd1bWVudHMuXG4gICAgICogQHBhcmFtIGFyZ3MudmFsdWUgLSBUaGUgYnl0ZSBhcnJheSB0byBkZWNvZGUuXG4gICAgICogQHJldHVybnMgVGhlIGRlY29kZWQgYWRkcmVzcyBhcyBhIGhleGFkZWNpbWFsIHN0cmluZywgc3RhcnRpbmcgd2l0aCB0aGVcbiAgICAgKiBcIjB4XCItcHJlZml4LlxuICAgICAqL1xuICAgIGRlY29kZSh7IHZhbHVlIH0pIHtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmFkZDB4KSgoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KSh2YWx1ZS5zbGljZSgxMiwgMzIpKSk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRyZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/array.js":
/*!****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.array = exports.getTupleType = exports.getArrayType = exports.isArrayType = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst packer_1 = __webpack_require__(/*! ../packer */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/packer.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\");\nconst fixed_bytes_1 = __webpack_require__(/*! ./fixed-bytes */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js\");\nconst tuple_1 = __webpack_require__(/*! ./tuple */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/tuple.js\");\nconst ARRAY_REGEX = /^(?<type>.*)\\[(?<length>\\d*?)\\]$/u;\nconst isArrayType = (type) => ARRAY_REGEX.test(type);\nexports.isArrayType = isArrayType;\n/**\n * Get the type of the array.\n *\n * @param type - The type to get the array type for.\n * @returns The array type.\n */\nconst getArrayType = (type) => {\n    const match = type.match(ARRAY_REGEX);\n    (0, utils_1.assert)(match?.groups?.type, new errors_1.ParserError(`Invalid array type. Expected an array type, but received \"${type}\".`));\n    return [\n        match.groups.type,\n        match.groups.length ? parseInt(match.groups.length, 10) : undefined,\n    ];\n};\nexports.getArrayType = getArrayType;\n/**\n * Get the type of the array as a tuple type. This is used for encoding fixed\n * length arrays, which are encoded as tuples.\n *\n * @param innerType - The type of the array.\n * @param length - The length of the array.\n * @returns The tuple type.\n */\nconst getTupleType = (innerType, length) => {\n    return `(${new Array(length).fill(innerType).join(',')})`;\n};\nexports.getTupleType = getTupleType;\nexports.array = {\n    /**\n     * Check if the array is dynamic. Arrays are dynamic if the array does not\n     * have a fixed length, or if the array type is dynamic.\n     *\n     * @param type - The type to check.\n     * @returns Whether the array is dynamic.\n     */\n    isDynamic(type) {\n        const [innerType, length] = (0, exports.getArrayType)(type);\n        return (\n        // `T[]` is dynamic for any `T`. `T[k]` is dynamic for any dynamic `T` and\n        // any `k >= 0`.\n        length === undefined || (0, packer_1.isDynamicParser)((0, packer_1.getParser)(innerType), innerType));\n    },\n    /**\n     * Check if a type is an array type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is an array type.\n     */\n    isType(type) {\n        return (0, exports.isArrayType)(type);\n    },\n    /**\n     * Get the byte length of an encoded array. If the array is dynamic, this\n     * returns 32, i.e., the length of the pointer to the array. If the array is\n     * static, this returns the byte length of the resulting tuple type.\n     *\n     * @param type - The type to get the byte length for.\n     * @returns The byte length of an encoded array.\n     */\n    getByteLength(type) {\n        (0, utils_1.assert)((0, exports.isArrayType)(type), new errors_1.ParserError(`Expected an array type, but received \"${type}\".`));\n        const [innerType, length] = (0, exports.getArrayType)(type);\n        if (!(0, packer_1.isDynamicParser)(this, type) && length !== undefined) {\n            return tuple_1.tuple.getByteLength((0, exports.getTupleType)(innerType, length));\n        }\n        return 32;\n    },\n    /**\n     * Encode the given array to a byte array. If the array is static, this uses\n     * the tuple encoder.\n     *\n     * @param args - The encoding arguments.\n     * @param args.type - The type of the array.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The array to encode.\n     * @param args.packed - Whether to use non-standard packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded array added to it.\n     */\n    encode({ type, buffer, value, packed, tight }) {\n        const [arrayType, fixedLength] = (0, exports.getArrayType)(type);\n        // Packed encoding does not support nested arrays.\n        (0, utils_1.assert)(!packed || !(0, exports.isArrayType)(arrayType), new errors_1.ParserError(`Cannot pack nested arrays.`));\n        // Tightly pack `T[]` where `T` is a dynamic type. This is not supported in\n        // Solidity, but is commonly used in the Ethereum ecosystem.\n        if (packed && (0, packer_1.isDynamicParser)((0, packer_1.getParser)(arrayType), arrayType)) {\n            return (0, packer_1.pack)({\n                types: new Array(value.length).fill(arrayType),\n                values: value,\n                byteArray: buffer,\n                packed,\n                arrayPacked: true,\n                tight,\n            });\n        }\n        if (fixedLength) {\n            (0, utils_1.assert)(fixedLength === value.length, new errors_1.ParserError(`Array length does not match type length. Expected a length of ${fixedLength}, but received ${value.length}.`));\n            // `T[k]` for any `T` and `k` is encoded as `(T[0], ..., T[k - 1])`.\n            return tuple_1.tuple.encode({\n                type: (0, exports.getTupleType)(arrayType, fixedLength),\n                buffer,\n                value,\n                // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n                // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n                // support to provide compatibility with it.\n                packed: fixed_bytes_1.fixedBytes.isType(arrayType) && tight,\n                tight,\n            });\n        }\n        // For packed encoding, we don't need to encode the length of the array,\n        // so we can just encode the values.\n        if (packed) {\n            return (0, packer_1.pack)({\n                types: new Array(value.length).fill(arrayType),\n                values: value,\n                byteArray: buffer,\n                // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n                // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n                // support to provide compatibility with it.\n                packed: fixed_bytes_1.fixedBytes.isType(arrayType) && tight,\n                arrayPacked: true,\n                tight,\n            });\n        }\n        // `T[]` with `k` elements is encoded as `k (T[0], ..., T[k - 1])`. That\n        // means that we just need to encode the length of the array, and then the\n        // array itself. The pointer is encoded by the {@link pack} function.\n        const arrayLength = (0, utils_2.padStart)((0, utils_1.numberToBytes)(value.length));\n        return (0, packer_1.pack)({\n            types: new Array(value.length).fill(arrayType),\n            values: value,\n            byteArray: (0, utils_1.concatBytes)([buffer, arrayLength]),\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode an array from the given byte array.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the array.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded array.\n     */\n    decode({ type, value, ...rest }) {\n        const [arrayType, fixedLength] = (0, exports.getArrayType)(type);\n        if (fixedLength) {\n            const result = tuple_1.tuple.decode({\n                type: (0, exports.getTupleType)(arrayType, fixedLength),\n                value,\n                ...rest,\n            });\n            (0, utils_1.assert)(result.length === fixedLength, new errors_1.ParserError(`Array length does not match type length. Expected a length of ${fixedLength}, but received ${result.length}.`));\n            return result;\n        }\n        const arrayLength = (0, utils_1.bytesToNumber)(value.subarray(0, 32));\n        return (0, packer_1.unpack)(new Array(arrayLength).fill(arrayType), value.subarray(32));\n    },\n};\n//# sourceMappingURL=array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvYXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLG9CQUFvQixHQUFHLG9CQUFvQixHQUFHLG1CQUFtQjtBQUNqRixnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQVc7QUFDcEMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQVc7QUFDcEMsZ0JBQWdCLG1CQUFPLENBQUMsOEVBQVU7QUFDbEMsc0JBQXNCLG1CQUFPLENBQUMsMkZBQWU7QUFDN0MsZ0JBQWdCLG1CQUFPLENBQUMsK0VBQVM7QUFDakM7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUlBQW1JLEtBQUs7QUFDeEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDRDQUE0QztBQUMzRDtBQUNBLG9CQUFvQjtBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SEFBOEgsS0FBSztBQUNuSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0NBQW9DO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx3SkFBd0osWUFBWSxpQkFBaUIsYUFBYTtBQUNsTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHlKQUF5SixZQUFZLGlCQUFpQixjQUFjO0FBQ3BNO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvYXJyYXkuanM/MTE3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXJyYXkgPSBleHBvcnRzLmdldFR1cGxlVHlwZSA9IGV4cG9ydHMuZ2V0QXJyYXlUeXBlID0gZXhwb3J0cy5pc0FycmF5VHlwZSA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG1ldGFtYXNrL3V0aWxzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi4vZXJyb3JzXCIpO1xuY29uc3QgcGFja2VyXzEgPSByZXF1aXJlKFwiLi4vcGFja2VyXCIpO1xuY29uc3QgdXRpbHNfMiA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbmNvbnN0IGZpeGVkX2J5dGVzXzEgPSByZXF1aXJlKFwiLi9maXhlZC1ieXRlc1wiKTtcbmNvbnN0IHR1cGxlXzEgPSByZXF1aXJlKFwiLi90dXBsZVwiKTtcbmNvbnN0IEFSUkFZX1JFR0VYID0gL14oPzx0eXBlPi4qKVxcWyg/PGxlbmd0aD5cXGQqPylcXF0kL3U7XG5jb25zdCBpc0FycmF5VHlwZSA9ICh0eXBlKSA9PiBBUlJBWV9SRUdFWC50ZXN0KHR5cGUpO1xuZXhwb3J0cy5pc0FycmF5VHlwZSA9IGlzQXJyYXlUeXBlO1xuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIGFycmF5LlxuICpcbiAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gZ2V0IHRoZSBhcnJheSB0eXBlIGZvci5cbiAqIEByZXR1cm5zIFRoZSBhcnJheSB0eXBlLlxuICovXG5jb25zdCBnZXRBcnJheVR5cGUgPSAodHlwZSkgPT4ge1xuICAgIGNvbnN0IG1hdGNoID0gdHlwZS5tYXRjaChBUlJBWV9SRUdFWCk7XG4gICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShtYXRjaD8uZ3JvdXBzPy50eXBlLCBuZXcgZXJyb3JzXzEuUGFyc2VyRXJyb3IoYEludmFsaWQgYXJyYXkgdHlwZS4gRXhwZWN0ZWQgYW4gYXJyYXkgdHlwZSwgYnV0IHJlY2VpdmVkIFwiJHt0eXBlfVwiLmApKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBtYXRjaC5ncm91cHMudHlwZSxcbiAgICAgICAgbWF0Y2guZ3JvdXBzLmxlbmd0aCA/IHBhcnNlSW50KG1hdGNoLmdyb3Vwcy5sZW5ndGgsIDEwKSA6IHVuZGVmaW5lZCxcbiAgICBdO1xufTtcbmV4cG9ydHMuZ2V0QXJyYXlUeXBlID0gZ2V0QXJyYXlUeXBlO1xuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIGFycmF5IGFzIGEgdHVwbGUgdHlwZS4gVGhpcyBpcyB1c2VkIGZvciBlbmNvZGluZyBmaXhlZFxuICogbGVuZ3RoIGFycmF5cywgd2hpY2ggYXJlIGVuY29kZWQgYXMgdHVwbGVzLlxuICpcbiAqIEBwYXJhbSBpbm5lclR5cGUgLSBUaGUgdHlwZSBvZiB0aGUgYXJyYXkuXG4gKiBAcGFyYW0gbGVuZ3RoIC0gVGhlIGxlbmd0aCBvZiB0aGUgYXJyYXkuXG4gKiBAcmV0dXJucyBUaGUgdHVwbGUgdHlwZS5cbiAqL1xuY29uc3QgZ2V0VHVwbGVUeXBlID0gKGlubmVyVHlwZSwgbGVuZ3RoKSA9PiB7XG4gICAgcmV0dXJuIGAoJHtuZXcgQXJyYXkobGVuZ3RoKS5maWxsKGlubmVyVHlwZSkuam9pbignLCcpfSlgO1xufTtcbmV4cG9ydHMuZ2V0VHVwbGVUeXBlID0gZ2V0VHVwbGVUeXBlO1xuZXhwb3J0cy5hcnJheSA9IHtcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiB0aGUgYXJyYXkgaXMgZHluYW1pYy4gQXJyYXlzIGFyZSBkeW5hbWljIGlmIHRoZSBhcnJheSBkb2VzIG5vdFxuICAgICAqIGhhdmUgYSBmaXhlZCBsZW5ndGgsIG9yIGlmIHRoZSBhcnJheSB0eXBlIGlzIGR5bmFtaWMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZSAtIFRoZSB0eXBlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIFdoZXRoZXIgdGhlIGFycmF5IGlzIGR5bmFtaWMuXG4gICAgICovXG4gICAgaXNEeW5hbWljKHR5cGUpIHtcbiAgICAgICAgY29uc3QgW2lubmVyVHlwZSwgbGVuZ3RoXSA9ICgwLCBleHBvcnRzLmdldEFycmF5VHlwZSkodHlwZSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgIC8vIGBUW11gIGlzIGR5bmFtaWMgZm9yIGFueSBgVGAuIGBUW2tdYCBpcyBkeW5hbWljIGZvciBhbnkgZHluYW1pYyBgVGAgYW5kXG4gICAgICAgIC8vIGFueSBgayA+PSAwYC5cbiAgICAgICAgbGVuZ3RoID09PSB1bmRlZmluZWQgfHwgKDAsIHBhY2tlcl8xLmlzRHluYW1pY1BhcnNlcikoKDAsIHBhY2tlcl8xLmdldFBhcnNlcikoaW5uZXJUeXBlKSwgaW5uZXJUeXBlKSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBhIHR5cGUgaXMgYW4gYXJyYXkgdHlwZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgdHlwZSBpcyBhbiBhcnJheSB0eXBlLlxuICAgICAqL1xuICAgIGlzVHlwZSh0eXBlKSB7XG4gICAgICAgIHJldHVybiAoMCwgZXhwb3J0cy5pc0FycmF5VHlwZSkodHlwZSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGUgbGVuZ3RoIG9mIGFuIGVuY29kZWQgYXJyYXkuIElmIHRoZSBhcnJheSBpcyBkeW5hbWljLCB0aGlzXG4gICAgICogcmV0dXJucyAzMiwgaS5lLiwgdGhlIGxlbmd0aCBvZiB0aGUgcG9pbnRlciB0byB0aGUgYXJyYXkuIElmIHRoZSBhcnJheSBpc1xuICAgICAqIHN0YXRpYywgdGhpcyByZXR1cm5zIHRoZSBieXRlIGxlbmd0aCBvZiB0aGUgcmVzdWx0aW5nIHR1cGxlIHR5cGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZSAtIFRoZSB0eXBlIHRvIGdldCB0aGUgYnl0ZSBsZW5ndGggZm9yLlxuICAgICAqIEByZXR1cm5zIFRoZSBieXRlIGxlbmd0aCBvZiBhbiBlbmNvZGVkIGFycmF5LlxuICAgICAqL1xuICAgIGdldEJ5dGVMZW5ndGgodHlwZSkge1xuICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKCgwLCBleHBvcnRzLmlzQXJyYXlUeXBlKSh0eXBlKSwgbmV3IGVycm9yc18xLlBhcnNlckVycm9yKGBFeHBlY3RlZCBhbiBhcnJheSB0eXBlLCBidXQgcmVjZWl2ZWQgXCIke3R5cGV9XCIuYCkpO1xuICAgICAgICBjb25zdCBbaW5uZXJUeXBlLCBsZW5ndGhdID0gKDAsIGV4cG9ydHMuZ2V0QXJyYXlUeXBlKSh0eXBlKTtcbiAgICAgICAgaWYgKCEoMCwgcGFja2VyXzEuaXNEeW5hbWljUGFyc2VyKSh0aGlzLCB0eXBlKSAmJiBsZW5ndGggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHR1cGxlXzEudHVwbGUuZ2V0Qnl0ZUxlbmd0aCgoMCwgZXhwb3J0cy5nZXRUdXBsZVR5cGUpKGlubmVyVHlwZSwgbGVuZ3RoKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDMyO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRW5jb2RlIHRoZSBnaXZlbiBhcnJheSB0byBhIGJ5dGUgYXJyYXkuIElmIHRoZSBhcnJheSBpcyBzdGF0aWMsIHRoaXMgdXNlc1xuICAgICAqIHRoZSB0dXBsZSBlbmNvZGVyLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBUaGUgZW5jb2RpbmcgYXJndW1lbnRzLlxuICAgICAqIEBwYXJhbSBhcmdzLnR5cGUgLSBUaGUgdHlwZSBvZiB0aGUgYXJyYXkuXG4gICAgICogQHBhcmFtIGFyZ3MuYnVmZmVyIC0gVGhlIGJ5dGUgYXJyYXkgdG8gYWRkIHRvLlxuICAgICAqIEBwYXJhbSBhcmdzLnZhbHVlIC0gVGhlIGFycmF5IHRvIGVuY29kZS5cbiAgICAgKiBAcGFyYW0gYXJncy5wYWNrZWQgLSBXaGV0aGVyIHRvIHVzZSBub24tc3RhbmRhcmQgcGFja2VkIGVuY29kaW5nLlxuICAgICAqIEBwYXJhbSBhcmdzLnRpZ2h0IC0gV2hldGhlciB0byB1c2Ugbm9uLXN0YW5kYXJkIHRpZ2h0IGVuY29kaW5nLlxuICAgICAqIEByZXR1cm5zIFRoZSBieXRlcyB3aXRoIHRoZSBlbmNvZGVkIGFycmF5IGFkZGVkIHRvIGl0LlxuICAgICAqL1xuICAgIGVuY29kZSh7IHR5cGUsIGJ1ZmZlciwgdmFsdWUsIHBhY2tlZCwgdGlnaHQgfSkge1xuICAgICAgICBjb25zdCBbYXJyYXlUeXBlLCBmaXhlZExlbmd0aF0gPSAoMCwgZXhwb3J0cy5nZXRBcnJheVR5cGUpKHR5cGUpO1xuICAgICAgICAvLyBQYWNrZWQgZW5jb2RpbmcgZG9lcyBub3Qgc3VwcG9ydCBuZXN0ZWQgYXJyYXlzLlxuICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKCFwYWNrZWQgfHwgISgwLCBleHBvcnRzLmlzQXJyYXlUeXBlKShhcnJheVR5cGUpLCBuZXcgZXJyb3JzXzEuUGFyc2VyRXJyb3IoYENhbm5vdCBwYWNrIG5lc3RlZCBhcnJheXMuYCkpO1xuICAgICAgICAvLyBUaWdodGx5IHBhY2sgYFRbXWAgd2hlcmUgYFRgIGlzIGEgZHluYW1pYyB0eXBlLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQgaW5cbiAgICAgICAgLy8gU29saWRpdHksIGJ1dCBpcyBjb21tb25seSB1c2VkIGluIHRoZSBFdGhlcmV1bSBlY29zeXN0ZW0uXG4gICAgICAgIGlmIChwYWNrZWQgJiYgKDAsIHBhY2tlcl8xLmlzRHluYW1pY1BhcnNlcikoKDAsIHBhY2tlcl8xLmdldFBhcnNlcikoYXJyYXlUeXBlKSwgYXJyYXlUeXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBwYWNrZXJfMS5wYWNrKSh7XG4gICAgICAgICAgICAgICAgdHlwZXM6IG5ldyBBcnJheSh2YWx1ZS5sZW5ndGgpLmZpbGwoYXJyYXlUeXBlKSxcbiAgICAgICAgICAgICAgICB2YWx1ZXM6IHZhbHVlLFxuICAgICAgICAgICAgICAgIGJ5dGVBcnJheTogYnVmZmVyLFxuICAgICAgICAgICAgICAgIHBhY2tlZCxcbiAgICAgICAgICAgICAgICBhcnJheVBhY2tlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0aWdodCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmaXhlZExlbmd0aCkge1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShmaXhlZExlbmd0aCA9PT0gdmFsdWUubGVuZ3RoLCBuZXcgZXJyb3JzXzEuUGFyc2VyRXJyb3IoYEFycmF5IGxlbmd0aCBkb2VzIG5vdCBtYXRjaCB0eXBlIGxlbmd0aC4gRXhwZWN0ZWQgYSBsZW5ndGggb2YgJHtmaXhlZExlbmd0aH0sIGJ1dCByZWNlaXZlZCAke3ZhbHVlLmxlbmd0aH0uYCkpO1xuICAgICAgICAgICAgLy8gYFRba11gIGZvciBhbnkgYFRgIGFuZCBga2AgaXMgZW5jb2RlZCBhcyBgKFRbMF0sIC4uLiwgVFtrIC0gMV0pYC5cbiAgICAgICAgICAgIHJldHVybiB0dXBsZV8xLnR1cGxlLmVuY29kZSh7XG4gICAgICAgICAgICAgICAgdHlwZTogKDAsIGV4cG9ydHMuZ2V0VHVwbGVUeXBlKShhcnJheVR5cGUsIGZpeGVkTGVuZ3RoKSxcbiAgICAgICAgICAgICAgICBidWZmZXIsXG4gICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgLy8gSW4gXCJ0aWdodFwiIG1vZGUsIHdlIGRvbid0IHBhZCB0aGUgdmFsdWVzIHRvIDMyIGJ5dGVzIGlmIHRoZSB2YWx1ZSBpc1xuICAgICAgICAgICAgICAgIC8vIG9mIHR5cGUgYGJ5dGVzTmAuIFRoaXMgaXMgYW4gZWRnZSBjYXNlIGluIGBldGhlcmV1bWpzLWFiaWAgdGhhdCB3ZVxuICAgICAgICAgICAgICAgIC8vIHN1cHBvcnQgdG8gcHJvdmlkZSBjb21wYXRpYmlsaXR5IHdpdGggaXQuXG4gICAgICAgICAgICAgICAgcGFja2VkOiBmaXhlZF9ieXRlc18xLmZpeGVkQnl0ZXMuaXNUeXBlKGFycmF5VHlwZSkgJiYgdGlnaHQsXG4gICAgICAgICAgICAgICAgdGlnaHQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBGb3IgcGFja2VkIGVuY29kaW5nLCB3ZSBkb24ndCBuZWVkIHRvIGVuY29kZSB0aGUgbGVuZ3RoIG9mIHRoZSBhcnJheSxcbiAgICAgICAgLy8gc28gd2UgY2FuIGp1c3QgZW5jb2RlIHRoZSB2YWx1ZXMuXG4gICAgICAgIGlmIChwYWNrZWQpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgcGFja2VyXzEucGFjaykoe1xuICAgICAgICAgICAgICAgIHR5cGVzOiBuZXcgQXJyYXkodmFsdWUubGVuZ3RoKS5maWxsKGFycmF5VHlwZSksXG4gICAgICAgICAgICAgICAgdmFsdWVzOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICBieXRlQXJyYXk6IGJ1ZmZlcixcbiAgICAgICAgICAgICAgICAvLyBJbiBcInRpZ2h0XCIgbW9kZSwgd2UgZG9uJ3QgcGFkIHRoZSB2YWx1ZXMgdG8gMzIgYnl0ZXMgaWYgdGhlIHZhbHVlIGlzXG4gICAgICAgICAgICAgICAgLy8gb2YgdHlwZSBgYnl0ZXNOYC4gVGhpcyBpcyBhbiBlZGdlIGNhc2UgaW4gYGV0aGVyZXVtanMtYWJpYCB0aGF0IHdlXG4gICAgICAgICAgICAgICAgLy8gc3VwcG9ydCB0byBwcm92aWRlIGNvbXBhdGliaWxpdHkgd2l0aCBpdC5cbiAgICAgICAgICAgICAgICBwYWNrZWQ6IGZpeGVkX2J5dGVzXzEuZml4ZWRCeXRlcy5pc1R5cGUoYXJyYXlUeXBlKSAmJiB0aWdodCxcbiAgICAgICAgICAgICAgICBhcnJheVBhY2tlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0aWdodCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIGBUW11gIHdpdGggYGtgIGVsZW1lbnRzIGlzIGVuY29kZWQgYXMgYGsgKFRbMF0sIC4uLiwgVFtrIC0gMV0pYC4gVGhhdFxuICAgICAgICAvLyBtZWFucyB0aGF0IHdlIGp1c3QgbmVlZCB0byBlbmNvZGUgdGhlIGxlbmd0aCBvZiB0aGUgYXJyYXksIGFuZCB0aGVuIHRoZVxuICAgICAgICAvLyBhcnJheSBpdHNlbGYuIFRoZSBwb2ludGVyIGlzIGVuY29kZWQgYnkgdGhlIHtAbGluayBwYWNrfSBmdW5jdGlvbi5cbiAgICAgICAgY29uc3QgYXJyYXlMZW5ndGggPSAoMCwgdXRpbHNfMi5wYWRTdGFydCkoKDAsIHV0aWxzXzEubnVtYmVyVG9CeXRlcykodmFsdWUubGVuZ3RoKSk7XG4gICAgICAgIHJldHVybiAoMCwgcGFja2VyXzEucGFjaykoe1xuICAgICAgICAgICAgdHlwZXM6IG5ldyBBcnJheSh2YWx1ZS5sZW5ndGgpLmZpbGwoYXJyYXlUeXBlKSxcbiAgICAgICAgICAgIHZhbHVlczogdmFsdWUsXG4gICAgICAgICAgICBieXRlQXJyYXk6ICgwLCB1dGlsc18xLmNvbmNhdEJ5dGVzKShbYnVmZmVyLCBhcnJheUxlbmd0aF0pLFxuICAgICAgICAgICAgcGFja2VkLFxuICAgICAgICAgICAgdGlnaHQsXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRGVjb2RlIGFuIGFycmF5IGZyb20gdGhlIGdpdmVuIGJ5dGUgYXJyYXkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYXJncyAtIFRoZSBkZWNvZGluZyBhcmd1bWVudHMuXG4gICAgICogQHBhcmFtIGFyZ3MudHlwZSAtIFRoZSB0eXBlIG9mIHRoZSBhcnJheS5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSBieXRlIGFycmF5IHRvIGRlY29kZS5cbiAgICAgKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBhcnJheS5cbiAgICAgKi9cbiAgICBkZWNvZGUoeyB0eXBlLCB2YWx1ZSwgLi4ucmVzdCB9KSB7XG4gICAgICAgIGNvbnN0IFthcnJheVR5cGUsIGZpeGVkTGVuZ3RoXSA9ICgwLCBleHBvcnRzLmdldEFycmF5VHlwZSkodHlwZSk7XG4gICAgICAgIGlmIChmaXhlZExlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdHVwbGVfMS50dXBsZS5kZWNvZGUoe1xuICAgICAgICAgICAgICAgIHR5cGU6ICgwLCBleHBvcnRzLmdldFR1cGxlVHlwZSkoYXJyYXlUeXBlLCBmaXhlZExlbmd0aCksXG4gICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShyZXN1bHQubGVuZ3RoID09PSBmaXhlZExlbmd0aCwgbmV3IGVycm9yc18xLlBhcnNlckVycm9yKGBBcnJheSBsZW5ndGggZG9lcyBub3QgbWF0Y2ggdHlwZSBsZW5ndGguIEV4cGVjdGVkIGEgbGVuZ3RoIG9mICR7Zml4ZWRMZW5ndGh9LCBidXQgcmVjZWl2ZWQgJHtyZXN1bHQubGVuZ3RofS5gKSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFycmF5TGVuZ3RoID0gKDAsIHV0aWxzXzEuYnl0ZXNUb051bWJlcikodmFsdWUuc3ViYXJyYXkoMCwgMzIpKTtcbiAgICAgICAgcmV0dXJuICgwLCBwYWNrZXJfMS51bnBhY2spKG5ldyBBcnJheShhcnJheUxlbmd0aCkuZmlsbChhcnJheVR5cGUpLCB2YWx1ZS5zdWJhcnJheSgzMikpO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bool.js":
/*!***************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/bool.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bool = exports.getBooleanValue = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst superstruct_1 = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst number_1 = __webpack_require__(/*! ./number */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/number.js\");\nconst BooleanCoercer = (0, superstruct_1.coerce)((0, superstruct_1.boolean)(), (0, superstruct_1.union)([(0, superstruct_1.literal)('true'), (0, superstruct_1.literal)('false')]), (value) => value === 'true');\n/**\n * Normalize a boolean value. This accepts the boolean as:\n *\n * - A boolean literal.\n * - The string \"true\" or \"false\".\n *\n * @param value - The value to get a boolean for.\n * @returns The parsed boolean value. This is `BigInt(1)` for truthy values, or\n * `BigInt(0)` for falsy values.\n */\nconst getBooleanValue = (value) => {\n    try {\n        const booleanValue = (0, superstruct_1.create)(value, BooleanCoercer);\n        if (booleanValue) {\n            return BigInt(1);\n        }\n        return BigInt(0);\n    }\n    catch {\n        throw new errors_1.ParserError(`Invalid boolean value. Expected a boolean literal, or the string \"true\" or \"false\", but received \"${value}\".`);\n    }\n};\nexports.getBooleanValue = getBooleanValue;\nexports.bool = {\n    isDynamic: false,\n    /**\n     * Get if the given value is a valid boolean type. Since `bool` is a simple\n     * type, this is just a check that the value is \"bool\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a valid boolean type.\n     */\n    isType: (type) => type === 'bool',\n    /**\n     * Get the byte length of an encoded boolean. Since `bool` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual booleans are only 1 byte long, but the encoding of\n     * the `bool` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded boolean.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given boolean to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The boolean to encode.\n     * @param args.packed - Whether the value is packed.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded boolean added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        const booleanValue = (0, exports.getBooleanValue)(value);\n        // For packed encoding, we add a single byte (`0x00` or `0x01`) to the byte\n        // array.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, (0, utils_1.bigIntToBytes)(booleanValue)]);\n        }\n        // Booleans are encoded as 32-byte integers, so we use the number parser\n        // to encode the boolean value.\n        return number_1.number.encode({\n            type: 'uint256',\n            buffer,\n            value: booleanValue,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a boolean.\n     *\n     * @param args - The decoding arguments.\n     * @returns The decoded boolean.\n     */\n    decode(args) {\n        // Booleans are encoded as 32-byte integers, so we use the number parser\n        // to decode the boolean value.\n        return number_1.number.decode({ ...args, type: 'uint256' }) === BigInt(1);\n    },\n};\n//# sourceMappingURL=bool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvYm9vbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZLEdBQUcsdUJBQXVCO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFpQjtBQUN6QyxzQkFBc0IsbUJBQU8sQ0FBQyxvRUFBYTtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBVztBQUNwQyxpQkFBaUIsbUJBQU8sQ0FBQyxpRkFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNElBQTRJLE1BQU07QUFDbEo7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywwQkFBMEI7QUFDbEUsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvYm9vbC5qcz8yNTgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ib29sID0gZXhwb3J0cy5nZXRCb29sZWFuVmFsdWUgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBtZXRhbWFzay91dGlsc1wiKTtcbmNvbnN0IHN1cGVyc3RydWN0XzEgPSByZXF1aXJlKFwic3VwZXJzdHJ1Y3RcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi9lcnJvcnNcIik7XG5jb25zdCBudW1iZXJfMSA9IHJlcXVpcmUoXCIuL251bWJlclwiKTtcbmNvbnN0IEJvb2xlYW5Db2VyY2VyID0gKDAsIHN1cGVyc3RydWN0XzEuY29lcmNlKSgoMCwgc3VwZXJzdHJ1Y3RfMS5ib29sZWFuKSgpLCAoMCwgc3VwZXJzdHJ1Y3RfMS51bmlvbikoWygwLCBzdXBlcnN0cnVjdF8xLmxpdGVyYWwpKCd0cnVlJyksICgwLCBzdXBlcnN0cnVjdF8xLmxpdGVyYWwpKCdmYWxzZScpXSksICh2YWx1ZSkgPT4gdmFsdWUgPT09ICd0cnVlJyk7XG4vKipcbiAqIE5vcm1hbGl6ZSBhIGJvb2xlYW4gdmFsdWUuIFRoaXMgYWNjZXB0cyB0aGUgYm9vbGVhbiBhczpcbiAqXG4gKiAtIEEgYm9vbGVhbiBsaXRlcmFsLlxuICogLSBUaGUgc3RyaW5nIFwidHJ1ZVwiIG9yIFwiZmFsc2VcIi5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgLSBUaGUgdmFsdWUgdG8gZ2V0IGEgYm9vbGVhbiBmb3IuXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIGJvb2xlYW4gdmFsdWUuIFRoaXMgaXMgYEJpZ0ludCgxKWAgZm9yIHRydXRoeSB2YWx1ZXMsIG9yXG4gKiBgQmlnSW50KDApYCBmb3IgZmFsc3kgdmFsdWVzLlxuICovXG5jb25zdCBnZXRCb29sZWFuVmFsdWUgPSAodmFsdWUpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBib29sZWFuVmFsdWUgPSAoMCwgc3VwZXJzdHJ1Y3RfMS5jcmVhdGUpKHZhbHVlLCBCb29sZWFuQ29lcmNlcik7XG4gICAgICAgIGlmIChib29sZWFuVmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBCaWdJbnQoMSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEJpZ0ludCgwKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuUGFyc2VyRXJyb3IoYEludmFsaWQgYm9vbGVhbiB2YWx1ZS4gRXhwZWN0ZWQgYSBib29sZWFuIGxpdGVyYWwsIG9yIHRoZSBzdHJpbmcgXCJ0cnVlXCIgb3IgXCJmYWxzZVwiLCBidXQgcmVjZWl2ZWQgXCIke3ZhbHVlfVwiLmApO1xuICAgIH1cbn07XG5leHBvcnRzLmdldEJvb2xlYW5WYWx1ZSA9IGdldEJvb2xlYW5WYWx1ZTtcbmV4cG9ydHMuYm9vbCA9IHtcbiAgICBpc0R5bmFtaWM6IGZhbHNlLFxuICAgIC8qKlxuICAgICAqIEdldCBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCBib29sZWFuIHR5cGUuIFNpbmNlIGBib29sYCBpcyBhIHNpbXBsZVxuICAgICAqIHR5cGUsIHRoaXMgaXMganVzdCBhIGNoZWNrIHRoYXQgdGhlIHZhbHVlIGlzIFwiYm9vbFwiLlxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGUgLSBUaGUgdHlwZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB0eXBlIGlzIGEgdmFsaWQgYm9vbGVhbiB0eXBlLlxuICAgICAqL1xuICAgIGlzVHlwZTogKHR5cGUpID0+IHR5cGUgPT09ICdib29sJyxcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGUgbGVuZ3RoIG9mIGFuIGVuY29kZWQgYm9vbGVhbi4gU2luY2UgYGJvb2xgIGlzIGEgc2ltcGxlXG4gICAgICogdHlwZSwgdGhpcyBhbHdheXMgcmV0dXJucyAzMi5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCBhY3R1YWwgYm9vbGVhbnMgYXJlIG9ubHkgMSBieXRlIGxvbmcsIGJ1dCB0aGUgZW5jb2Rpbmcgb2ZcbiAgICAgKiB0aGUgYGJvb2xgIHR5cGUgaXMgYWx3YXlzIDMyIGJ5dGVzIGxvbmcuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZSBsZW5ndGggb2YgYW4gZW5jb2RlZCBib29sZWFuLlxuICAgICAqL1xuICAgIGdldEJ5dGVMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiAzMjtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEVuY29kZSB0aGUgZ2l2ZW4gYm9vbGVhbiB0byBhIGJ5dGUgYXJyYXkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYXJncyAtIFRoZSBlbmNvZGluZyBhcmd1bWVudHMuXG4gICAgICogQHBhcmFtIGFyZ3MuYnVmZmVyIC0gVGhlIGJ5dGUgYXJyYXkgdG8gYWRkIHRvLlxuICAgICAqIEBwYXJhbSBhcmdzLnZhbHVlIC0gVGhlIGJvb2xlYW4gdG8gZW5jb2RlLlxuICAgICAqIEBwYXJhbSBhcmdzLnBhY2tlZCAtIFdoZXRoZXIgdGhlIHZhbHVlIGlzIHBhY2tlZC5cbiAgICAgKiBAcGFyYW0gYXJncy50aWdodCAtIFdoZXRoZXIgdG8gdXNlIG5vbi1zdGFuZGFyZCB0aWdodCBlbmNvZGluZy5cbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZXMgd2l0aCB0aGUgZW5jb2RlZCBib29sZWFuIGFkZGVkIHRvIGl0LlxuICAgICAqL1xuICAgIGVuY29kZSh7IGJ1ZmZlciwgdmFsdWUsIHBhY2tlZCwgdGlnaHQgfSkge1xuICAgICAgICBjb25zdCBib29sZWFuVmFsdWUgPSAoMCwgZXhwb3J0cy5nZXRCb29sZWFuVmFsdWUpKHZhbHVlKTtcbiAgICAgICAgLy8gRm9yIHBhY2tlZCBlbmNvZGluZywgd2UgYWRkIGEgc2luZ2xlIGJ5dGUgKGAweDAwYCBvciBgMHgwMWApIHRvIHRoZSBieXRlXG4gICAgICAgIC8vIGFycmF5LlxuICAgICAgICBpZiAocGFja2VkKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuY29uY2F0Qnl0ZXMpKFtidWZmZXIsICgwLCB1dGlsc18xLmJpZ0ludFRvQnl0ZXMpKGJvb2xlYW5WYWx1ZSldKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBCb29sZWFucyBhcmUgZW5jb2RlZCBhcyAzMi1ieXRlIGludGVnZXJzLCBzbyB3ZSB1c2UgdGhlIG51bWJlciBwYXJzZXJcbiAgICAgICAgLy8gdG8gZW5jb2RlIHRoZSBib29sZWFuIHZhbHVlLlxuICAgICAgICByZXR1cm4gbnVtYmVyXzEubnVtYmVyLmVuY29kZSh7XG4gICAgICAgICAgICB0eXBlOiAndWludDI1NicsXG4gICAgICAgICAgICBidWZmZXIsXG4gICAgICAgICAgICB2YWx1ZTogYm9vbGVhblZhbHVlLFxuICAgICAgICAgICAgcGFja2VkLFxuICAgICAgICAgICAgdGlnaHQsXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRGVjb2RlIHRoZSBnaXZlbiBieXRlIGFycmF5IHRvIGEgYm9vbGVhbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gVGhlIGRlY29kaW5nIGFyZ3VtZW50cy5cbiAgICAgKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBib29sZWFuLlxuICAgICAqL1xuICAgIGRlY29kZShhcmdzKSB7XG4gICAgICAgIC8vIEJvb2xlYW5zIGFyZSBlbmNvZGVkIGFzIDMyLWJ5dGUgaW50ZWdlcnMsIHNvIHdlIHVzZSB0aGUgbnVtYmVyIHBhcnNlclxuICAgICAgICAvLyB0byBkZWNvZGUgdGhlIGJvb2xlYW4gdmFsdWUuXG4gICAgICAgIHJldHVybiBudW1iZXJfMS5udW1iZXIuZGVjb2RlKHsgLi4uYXJncywgdHlwZTogJ3VpbnQyNTYnIH0pID09PSBCaWdJbnQoMSk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ib29sLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bytes.js":
/*!****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/bytes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bytes = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\");\nexports.bytes = {\n    isDynamic: true,\n    /**\n     * Check if a type is a bytes type. Since `bytes` is a simple type, this is\n     * just a check that the type is \"bytes\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a bytes type.\n     */\n    isType: (type) => type === 'bytes',\n    /**\n     * Get the byte length of an encoded bytes value. Since `bytes` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual length of a bytes value is variable, but the encoded\n     * static value (pointer) is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded bytes value.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given bytes value to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The bytes value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded bytes value added to it.\n     */\n    encode({ buffer, value, packed }) {\n        const bufferValue = (0, utils_1.createBytes)(value);\n        // For packed encoding, we can just add the bytes value to the byte array,\n        // without adding any padding or alignment. There is also no need to\n        // encode the length of the bytes.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, bufferValue]);\n        }\n        const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n        // Bytes of length `k` are encoded as `k pad_right(bytes)`.\n        return (0, utils_1.concatBytes)([\n            buffer,\n            (0, utils_2.padStart)((0, utils_1.numberToBytes)(bufferValue.byteLength)),\n            (0, utils_2.padEnd)(bufferValue, paddedSize),\n        ]);\n    },\n    /**\n     * Decode the given byte array to a bytes value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded bytes value as a `Uint8Array`.\n     */\n    decode({ value }) {\n        const bytesValue = value.subarray(0, 32);\n        const length = (0, utils_1.bytesToNumber)(bytesValue);\n        // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n        // into a new array.\n        return value.slice(32, 32 + length);\n    },\n};\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFpQjtBQUN6QyxnQkFBZ0IsbUJBQU8sQ0FBQyw4RUFBVTtBQUNsQyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svYWJpLXV0aWxzL2Rpc3QvcGFyc2Vycy9ieXRlcy5qcz80YzlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ieXRlcyA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG1ldGFtYXNrL3V0aWxzXCIpO1xuY29uc3QgdXRpbHNfMiA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbmV4cG9ydHMuYnl0ZXMgPSB7XG4gICAgaXNEeW5hbWljOiB0cnVlLFxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGEgdHlwZSBpcyBhIGJ5dGVzIHR5cGUuIFNpbmNlIGBieXRlc2AgaXMgYSBzaW1wbGUgdHlwZSwgdGhpcyBpc1xuICAgICAqIGp1c3QgYSBjaGVjayB0aGF0IHRoZSB0eXBlIGlzIFwiYnl0ZXNcIi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgdHlwZSBpcyBhIGJ5dGVzIHR5cGUuXG4gICAgICovXG4gICAgaXNUeXBlOiAodHlwZSkgPT4gdHlwZSA9PT0gJ2J5dGVzJyxcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGUgbGVuZ3RoIG9mIGFuIGVuY29kZWQgYnl0ZXMgdmFsdWUuIFNpbmNlIGBieXRlc2AgaXMgYSBzaW1wbGVcbiAgICAgKiB0eXBlLCB0aGlzIGFsd2F5cyByZXR1cm5zIDMyLlxuICAgICAqXG4gICAgICogTm90ZSB0aGF0IGFjdHVhbCBsZW5ndGggb2YgYSBieXRlcyB2YWx1ZSBpcyB2YXJpYWJsZSwgYnV0IHRoZSBlbmNvZGVkXG4gICAgICogc3RhdGljIHZhbHVlIChwb2ludGVyKSBpcyBhbHdheXMgMzIgYnl0ZXMgbG9uZy5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFRoZSBieXRlIGxlbmd0aCBvZiBhbiBlbmNvZGVkIGJ5dGVzIHZhbHVlLlxuICAgICAqL1xuICAgIGdldEJ5dGVMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiAzMjtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEVuY29kZSB0aGUgZ2l2ZW4gYnl0ZXMgdmFsdWUgdG8gYSBieXRlIGFycmF5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBUaGUgZW5jb2RpbmcgYXJndW1lbnRzLlxuICAgICAqIEBwYXJhbSBhcmdzLmJ1ZmZlciAtIFRoZSBieXRlIGFycmF5IHRvIGFkZCB0by5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSBieXRlcyB2YWx1ZSB0byBlbmNvZGUuXG4gICAgICogQHBhcmFtIGFyZ3MucGFja2VkIC0gV2hldGhlciB0byB1c2UgcGFja2VkIGVuY29kaW5nLlxuICAgICAqIEByZXR1cm5zIFRoZSBieXRlcyB3aXRoIHRoZSBlbmNvZGVkIGJ5dGVzIHZhbHVlIGFkZGVkIHRvIGl0LlxuICAgICAqL1xuICAgIGVuY29kZSh7IGJ1ZmZlciwgdmFsdWUsIHBhY2tlZCB9KSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlclZhbHVlID0gKDAsIHV0aWxzXzEuY3JlYXRlQnl0ZXMpKHZhbHVlKTtcbiAgICAgICAgLy8gRm9yIHBhY2tlZCBlbmNvZGluZywgd2UgY2FuIGp1c3QgYWRkIHRoZSBieXRlcyB2YWx1ZSB0byB0aGUgYnl0ZSBhcnJheSxcbiAgICAgICAgLy8gd2l0aG91dCBhZGRpbmcgYW55IHBhZGRpbmcgb3IgYWxpZ25tZW50LiBUaGVyZSBpcyBhbHNvIG5vIG5lZWQgdG9cbiAgICAgICAgLy8gZW5jb2RlIHRoZSBsZW5ndGggb2YgdGhlIGJ5dGVzLlxuICAgICAgICBpZiAocGFja2VkKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuY29uY2F0Qnl0ZXMpKFtidWZmZXIsIGJ1ZmZlclZhbHVlXSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFkZGVkU2l6ZSA9IE1hdGguY2VpbChidWZmZXJWYWx1ZS5ieXRlTGVuZ3RoIC8gMzIpICogMzI7XG4gICAgICAgIC8vIEJ5dGVzIG9mIGxlbmd0aCBga2AgYXJlIGVuY29kZWQgYXMgYGsgcGFkX3JpZ2h0KGJ5dGVzKWAuXG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS5jb25jYXRCeXRlcykoW1xuICAgICAgICAgICAgYnVmZmVyLFxuICAgICAgICAgICAgKDAsIHV0aWxzXzIucGFkU3RhcnQpKCgwLCB1dGlsc18xLm51bWJlclRvQnl0ZXMpKGJ1ZmZlclZhbHVlLmJ5dGVMZW5ndGgpKSxcbiAgICAgICAgICAgICgwLCB1dGlsc18yLnBhZEVuZCkoYnVmZmVyVmFsdWUsIHBhZGRlZFNpemUpLFxuICAgICAgICBdKTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIERlY29kZSB0aGUgZ2l2ZW4gYnl0ZSBhcnJheSB0byBhIGJ5dGVzIHZhbHVlLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBUaGUgZGVjb2RpbmcgYXJndW1lbnRzLlxuICAgICAqIEBwYXJhbSBhcmdzLnZhbHVlIC0gVGhlIGJ5dGUgYXJyYXkgdG8gZGVjb2RlLlxuICAgICAqIEByZXR1cm5zIFRoZSBkZWNvZGVkIGJ5dGVzIHZhbHVlIGFzIGEgYFVpbnQ4QXJyYXlgLlxuICAgICAqL1xuICAgIGRlY29kZSh7IHZhbHVlIH0pIHtcbiAgICAgICAgY29uc3QgYnl0ZXNWYWx1ZSA9IHZhbHVlLnN1YmFycmF5KDAsIDMyKTtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gKDAsIHV0aWxzXzEuYnl0ZXNUb051bWJlcikoYnl0ZXNWYWx1ZSk7XG4gICAgICAgIC8vIFNpbmNlIHdlJ3JlIHJldHVybmluZyBhIGBVaW50OEFycmF5YCwgd2UgdXNlIGBzbGljZWAgdG8gY29weSB0aGUgYnl0ZXNcbiAgICAgICAgLy8gaW50byBhIG5ldyBhcnJheS5cbiAgICAgICAgcmV0dXJuIHZhbHVlLnNsaWNlKDMyLCAzMiArIGxlbmd0aCk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fixedBytes = exports.getByteLength = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\");\nconst BYTES_REGEX = /^bytes([0-9]{1,2})$/u;\n/**\n * Get the length of the specified type. If a length is not specified, or if the\n * length is out of range (0 < n <= 32), this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The byte length of the type.\n */\nconst getByteLength = (type) => {\n    const bytes = type.match(BYTES_REGEX)?.[1];\n    (0, utils_1.assert)(bytes, `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`);\n    const length = Number(bytes);\n    (0, utils_1.assert)(length > 0 && length <= 32, new errors_1.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`));\n    return length;\n};\nexports.getByteLength = getByteLength;\nexports.fixedBytes = {\n    isDynamic: false,\n    /**\n     * Check if a type is a fixed bytes type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a fixed bytes type.\n     */\n    isType(type) {\n        return BYTES_REGEX.test(type);\n    },\n    /**\n     * Get the byte length of an encoded fixed bytes type.\n     *\n     * @returns The byte length of the type.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode a fixed bytes value.\n     *\n     * @param args - The arguments to encode.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed }) {\n        const length = (0, exports.getByteLength)(type);\n        const bufferValue = (0, utils_1.createBytes)(value);\n        (0, utils_1.assert)(bufferValue.length <= length, new errors_1.ParserError(`Expected a value of length ${length}, but received a value of length ${bufferValue.length}.`));\n        // For packed encoding, the value is padded to the length of the type, and\n        // then added to the byte array.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, (0, utils_2.padEnd)(bufferValue, length)]);\n        }\n        return (0, utils_1.concatBytes)([buffer, (0, utils_2.padEnd)(bufferValue)]);\n    },\n    /**\n     * Decode a fixed bytes value.\n     *\n     * @param args - The arguments to decode.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @returns The decoded value as a `Uint8Array`.\n     */\n    decode({ type, value }) {\n        const length = (0, exports.getByteLength)(type);\n        // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n        // into a new array.\n        return value.slice(0, length);\n    },\n};\n//# sourceMappingURL=fixed-bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvZml4ZWQtYnl0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcscUJBQXFCO0FBQzFDLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFpQjtBQUN6QyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBVztBQUNwQyxnQkFBZ0IsbUJBQU8sQ0FBQyw4RUFBVTtBQUNsQyxrQ0FBa0MsSUFBSTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5R0FBeUcsS0FBSztBQUM5RztBQUNBLHVKQUF1SixLQUFLO0FBQzVKO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQSxpSEFBaUgsT0FBTyxtQ0FBbUMsbUJBQW1CO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvZml4ZWQtYnl0ZXMuanM/NWJjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZml4ZWRCeXRlcyA9IGV4cG9ydHMuZ2V0Qnl0ZUxlbmd0aCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG1ldGFtYXNrL3V0aWxzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi4vZXJyb3JzXCIpO1xuY29uc3QgdXRpbHNfMiA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbmNvbnN0IEJZVEVTX1JFR0VYID0gL15ieXRlcyhbMC05XXsxLDJ9KSQvdTtcbi8qKlxuICogR2V0IHRoZSBsZW5ndGggb2YgdGhlIHNwZWNpZmllZCB0eXBlLiBJZiBhIGxlbmd0aCBpcyBub3Qgc3BlY2lmaWVkLCBvciBpZiB0aGVcbiAqIGxlbmd0aCBpcyBvdXQgb2YgcmFuZ2UgKDAgPCBuIDw9IDMyKSwgdGhpcyB3aWxsIHRocm93IGFuIGVycm9yLlxuICpcbiAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gZ2V0IHRoZSBsZW5ndGggZm9yLlxuICogQHJldHVybnMgVGhlIGJ5dGUgbGVuZ3RoIG9mIHRoZSB0eXBlLlxuICovXG5jb25zdCBnZXRCeXRlTGVuZ3RoID0gKHR5cGUpID0+IHtcbiAgICBjb25zdCBieXRlcyA9IHR5cGUubWF0Y2goQllURVNfUkVHRVgpPy5bMV07XG4gICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShieXRlcywgYEludmFsaWQgYnl0ZSBsZW5ndGguIEV4cGVjdGVkIGEgbnVtYmVyIGJldHdlZW4gMSBhbmQgMzIsIGJ1dCByZWNlaXZlZCBcIiR7dHlwZX1cIi5gKTtcbiAgICBjb25zdCBsZW5ndGggPSBOdW1iZXIoYnl0ZXMpO1xuICAgICgwLCB1dGlsc18xLmFzc2VydCkobGVuZ3RoID4gMCAmJiBsZW5ndGggPD0gMzIsIG5ldyBlcnJvcnNfMS5QYXJzZXJFcnJvcihgSW52YWxpZCBieXRlIGxlbmd0aC4gRXhwZWN0ZWQgYSBudW1iZXIgYmV0d2VlbiAxIGFuZCAzMiwgYnV0IHJlY2VpdmVkIFwiJHt0eXBlfVwiLmApKTtcbiAgICByZXR1cm4gbGVuZ3RoO1xufTtcbmV4cG9ydHMuZ2V0Qnl0ZUxlbmd0aCA9IGdldEJ5dGVMZW5ndGg7XG5leHBvcnRzLmZpeGVkQnl0ZXMgPSB7XG4gICAgaXNEeW5hbWljOiBmYWxzZSxcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBhIHR5cGUgaXMgYSBmaXhlZCBieXRlcyB0eXBlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGUgLSBUaGUgdHlwZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB0eXBlIGlzIGEgZml4ZWQgYnl0ZXMgdHlwZS5cbiAgICAgKi9cbiAgICBpc1R5cGUodHlwZSkge1xuICAgICAgICByZXR1cm4gQllURVNfUkVHRVgudGVzdCh0eXBlKTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgYnl0ZSBsZW5ndGggb2YgYW4gZW5jb2RlZCBmaXhlZCBieXRlcyB0eXBlLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIGJ5dGUgbGVuZ3RoIG9mIHRoZSB0eXBlLlxuICAgICAqL1xuICAgIGdldEJ5dGVMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiAzMjtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEVuY29kZSBhIGZpeGVkIGJ5dGVzIHZhbHVlLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBUaGUgYXJndW1lbnRzIHRvIGVuY29kZS5cbiAgICAgKiBAcGFyYW0gYXJncy50eXBlIC0gVGhlIHR5cGUgb2YgdGhlIHZhbHVlLlxuICAgICAqIEBwYXJhbSBhcmdzLmJ1ZmZlciAtIFRoZSBieXRlIGFycmF5IHRvIGFkZCB0by5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSB2YWx1ZSB0byBlbmNvZGUuXG4gICAgICogQHBhcmFtIGFyZ3MucGFja2VkIC0gV2hldGhlciB0byB1c2UgcGFja2VkIGVuY29kaW5nLlxuICAgICAqIEByZXR1cm5zIFRoZSBieXRlcyB3aXRoIHRoZSBlbmNvZGVkIHZhbHVlIGFkZGVkIHRvIGl0LlxuICAgICAqL1xuICAgIGVuY29kZSh7IHR5cGUsIGJ1ZmZlciwgdmFsdWUsIHBhY2tlZCB9KSB7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9ICgwLCBleHBvcnRzLmdldEJ5dGVMZW5ndGgpKHR5cGUpO1xuICAgICAgICBjb25zdCBidWZmZXJWYWx1ZSA9ICgwLCB1dGlsc18xLmNyZWF0ZUJ5dGVzKSh2YWx1ZSk7XG4gICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoYnVmZmVyVmFsdWUubGVuZ3RoIDw9IGxlbmd0aCwgbmV3IGVycm9yc18xLlBhcnNlckVycm9yKGBFeHBlY3RlZCBhIHZhbHVlIG9mIGxlbmd0aCAke2xlbmd0aH0sIGJ1dCByZWNlaXZlZCBhIHZhbHVlIG9mIGxlbmd0aCAke2J1ZmZlclZhbHVlLmxlbmd0aH0uYCkpO1xuICAgICAgICAvLyBGb3IgcGFja2VkIGVuY29kaW5nLCB0aGUgdmFsdWUgaXMgcGFkZGVkIHRvIHRoZSBsZW5ndGggb2YgdGhlIHR5cGUsIGFuZFxuICAgICAgICAvLyB0aGVuIGFkZGVkIHRvIHRoZSBieXRlIGFycmF5LlxuICAgICAgICBpZiAocGFja2VkKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuY29uY2F0Qnl0ZXMpKFtidWZmZXIsICgwLCB1dGlsc18yLnBhZEVuZCkoYnVmZmVyVmFsdWUsIGxlbmd0aCldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuY29uY2F0Qnl0ZXMpKFtidWZmZXIsICgwLCB1dGlsc18yLnBhZEVuZCkoYnVmZmVyVmFsdWUpXSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBEZWNvZGUgYSBmaXhlZCBieXRlcyB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gVGhlIGFyZ3VtZW50cyB0byBkZWNvZGUuXG4gICAgICogQHBhcmFtIGFyZ3MudHlwZSAtIFRoZSB0eXBlIG9mIHRoZSB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSB2YWx1ZSB0byBkZWNvZGUuXG4gICAgICogQHJldHVybnMgVGhlIGRlY29kZWQgdmFsdWUgYXMgYSBgVWludDhBcnJheWAuXG4gICAgICovXG4gICAgZGVjb2RlKHsgdHlwZSwgdmFsdWUgfSkge1xuICAgICAgICBjb25zdCBsZW5ndGggPSAoMCwgZXhwb3J0cy5nZXRCeXRlTGVuZ3RoKSh0eXBlKTtcbiAgICAgICAgLy8gU2luY2Ugd2UncmUgcmV0dXJuaW5nIGEgYFVpbnQ4QXJyYXlgLCB3ZSB1c2UgYHNsaWNlYCB0byBjb3B5IHRoZSBieXRlc1xuICAgICAgICAvLyBpbnRvIGEgbmV3IGFycmF5LlxuICAgICAgICByZXR1cm4gdmFsdWUuc2xpY2UoMCwgbGVuZ3RoKTtcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpeGVkLWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/function.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/function.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fn = exports.getFunction = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst superstruct_1 = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst fixed_bytes_1 = __webpack_require__(/*! ./fixed-bytes */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js\");\n/**\n * A struct that represents a Solidity function. The value must be a hex string\n * or a byte array. The created value will always be an object with an `address`\n * and `selector` property.\n */\nconst FunctionStruct = (0, superstruct_1.coerce)((0, superstruct_1.object)({\n    address: utils_1.StrictHexStruct,\n    selector: utils_1.StrictHexStruct,\n}), (0, superstruct_1.union)([utils_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]), (value) => {\n    const bytes = (0, utils_1.createBytes)(value);\n    (0, utils_1.assert)(bytes.length === 24, new errors_1.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${bytes.length} bytes.`));\n    return {\n        address: (0, utils_1.bytesToHex)(bytes.subarray(0, 20)),\n        selector: (0, utils_1.bytesToHex)(bytes.subarray(20, 24)),\n    };\n});\n/**\n * Normalize a function. This accepts the function as:\n *\n * - A {@link SolidityFunction} object.\n * - A hexadecimal string.\n * - A byte array.\n *\n * @param input - The function-like input.\n * @returns The function as buffer.\n */\nconst getFunction = (input) => {\n    const value = (0, superstruct_1.create)(input, FunctionStruct);\n    return (0, utils_1.concatBytes)([(0, utils_1.hexToBytes)(value.address), (0, utils_1.hexToBytes)(value.selector)]);\n};\nexports.getFunction = getFunction;\nexports.fn = {\n    isDynamic: false,\n    /**\n     * Check if a type is a function type. Since `function` is a simple type, this\n     * is just a check that the type is \"function\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a function type.\n     */\n    isType: (type) => type === 'function',\n    /**\n     * Get the byte length of an encoded function. Since `function` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual functions are only 24 bytes long, but the encoding of\n     * the `function` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded function.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given function to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The function to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded function added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        const fnValue = (0, exports.getFunction)(value);\n        // Functions are encoded as `bytes24`, so we use the fixedBytes parser to\n        // encode the function.\n        return fixed_bytes_1.fixedBytes.encode({\n            type: 'bytes24',\n            buffer,\n            value: fnValue,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a function.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded function as a {@link SolidityFunction} object.\n     */\n    decode({ value }) {\n        return {\n            address: (0, utils_1.bytesToHex)(value.slice(0, 20)),\n            selector: (0, utils_1.bytesToHex)(value.slice(20, 24)),\n        };\n    },\n};\n//# sourceMappingURL=function.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvZnVuY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsVUFBVSxHQUFHLG1CQUFtQjtBQUNoQyxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekMsc0JBQXNCLG1CQUFPLENBQUMsb0VBQWE7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQVc7QUFDcEMsc0JBQXNCLG1CQUFPLENBQUMsMkZBQWU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLHdKQUF3SixjQUFjO0FBQ3RLO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0JBQXdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHdCQUF3QjtBQUNuRTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9hYmktdXRpbHMvZGlzdC9wYXJzZXJzL2Z1bmN0aW9uLmpzPzhkZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZuID0gZXhwb3J0cy5nZXRGdW5jdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG1ldGFtYXNrL3V0aWxzXCIpO1xuY29uc3Qgc3VwZXJzdHJ1Y3RfMSA9IHJlcXVpcmUoXCJzdXBlcnN0cnVjdFwiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL2Vycm9yc1wiKTtcbmNvbnN0IGZpeGVkX2J5dGVzXzEgPSByZXF1aXJlKFwiLi9maXhlZC1ieXRlc1wiKTtcbi8qKlxuICogQSBzdHJ1Y3QgdGhhdCByZXByZXNlbnRzIGEgU29saWRpdHkgZnVuY3Rpb24uIFRoZSB2YWx1ZSBtdXN0IGJlIGEgaGV4IHN0cmluZ1xuICogb3IgYSBieXRlIGFycmF5LiBUaGUgY3JlYXRlZCB2YWx1ZSB3aWxsIGFsd2F5cyBiZSBhbiBvYmplY3Qgd2l0aCBhbiBgYWRkcmVzc2BcbiAqIGFuZCBgc2VsZWN0b3JgIHByb3BlcnR5LlxuICovXG5jb25zdCBGdW5jdGlvblN0cnVjdCA9ICgwLCBzdXBlcnN0cnVjdF8xLmNvZXJjZSkoKDAsIHN1cGVyc3RydWN0XzEub2JqZWN0KSh7XG4gICAgYWRkcmVzczogdXRpbHNfMS5TdHJpY3RIZXhTdHJ1Y3QsXG4gICAgc2VsZWN0b3I6IHV0aWxzXzEuU3RyaWN0SGV4U3RydWN0LFxufSksICgwLCBzdXBlcnN0cnVjdF8xLnVuaW9uKShbdXRpbHNfMS5TdHJpY3RIZXhTdHJ1Y3QsICgwLCBzdXBlcnN0cnVjdF8xLmluc3RhbmNlKShVaW50OEFycmF5KV0pLCAodmFsdWUpID0+IHtcbiAgICBjb25zdCBieXRlcyA9ICgwLCB1dGlsc18xLmNyZWF0ZUJ5dGVzKSh2YWx1ZSk7XG4gICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShieXRlcy5sZW5ndGggPT09IDI0LCBuZXcgZXJyb3JzXzEuUGFyc2VyRXJyb3IoYEludmFsaWQgU29saWRpdHkgZnVuY3Rpb24uIEV4cGVjdGVkIGZ1bmN0aW9uIHRvIGJlIDI0IGJ5dGVzIGxvbmcsIGJ1dCByZWNlaXZlZCAke2J5dGVzLmxlbmd0aH0gYnl0ZXMuYCkpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFkZHJlc3M6ICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKGJ5dGVzLnN1YmFycmF5KDAsIDIwKSksXG4gICAgICAgIHNlbGVjdG9yOiAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KShieXRlcy5zdWJhcnJheSgyMCwgMjQpKSxcbiAgICB9O1xufSk7XG4vKipcbiAqIE5vcm1hbGl6ZSBhIGZ1bmN0aW9uLiBUaGlzIGFjY2VwdHMgdGhlIGZ1bmN0aW9uIGFzOlxuICpcbiAqIC0gQSB7QGxpbmsgU29saWRpdHlGdW5jdGlvbn0gb2JqZWN0LlxuICogLSBBIGhleGFkZWNpbWFsIHN0cmluZy5cbiAqIC0gQSBieXRlIGFycmF5LlxuICpcbiAqIEBwYXJhbSBpbnB1dCAtIFRoZSBmdW5jdGlvbi1saWtlIGlucHV0LlxuICogQHJldHVybnMgVGhlIGZ1bmN0aW9uIGFzIGJ1ZmZlci5cbiAqL1xuY29uc3QgZ2V0RnVuY3Rpb24gPSAoaW5wdXQpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9ICgwLCBzdXBlcnN0cnVjdF8xLmNyZWF0ZSkoaW5wdXQsIEZ1bmN0aW9uU3RydWN0KTtcbiAgICByZXR1cm4gKDAsIHV0aWxzXzEuY29uY2F0Qnl0ZXMpKFsoMCwgdXRpbHNfMS5oZXhUb0J5dGVzKSh2YWx1ZS5hZGRyZXNzKSwgKDAsIHV0aWxzXzEuaGV4VG9CeXRlcykodmFsdWUuc2VsZWN0b3IpXSk7XG59O1xuZXhwb3J0cy5nZXRGdW5jdGlvbiA9IGdldEZ1bmN0aW9uO1xuZXhwb3J0cy5mbiA9IHtcbiAgICBpc0R5bmFtaWM6IGZhbHNlLFxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGEgdHlwZSBpcyBhIGZ1bmN0aW9uIHR5cGUuIFNpbmNlIGBmdW5jdGlvbmAgaXMgYSBzaW1wbGUgdHlwZSwgdGhpc1xuICAgICAqIGlzIGp1c3QgYSBjaGVjayB0aGF0IHRoZSB0eXBlIGlzIFwiZnVuY3Rpb25cIi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgdHlwZSBpcyBhIGZ1bmN0aW9uIHR5cGUuXG4gICAgICovXG4gICAgaXNUeXBlOiAodHlwZSkgPT4gdHlwZSA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGUgbGVuZ3RoIG9mIGFuIGVuY29kZWQgZnVuY3Rpb24uIFNpbmNlIGBmdW5jdGlvbmAgaXMgYSBzaW1wbGVcbiAgICAgKiB0eXBlLCB0aGlzIGFsd2F5cyByZXR1cm5zIDMyLlxuICAgICAqXG4gICAgICogTm90ZSB0aGF0IGFjdHVhbCBmdW5jdGlvbnMgYXJlIG9ubHkgMjQgYnl0ZXMgbG9uZywgYnV0IHRoZSBlbmNvZGluZyBvZlxuICAgICAqIHRoZSBgZnVuY3Rpb25gIHR5cGUgaXMgYWx3YXlzIDMyIGJ5dGVzIGxvbmcuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZSBsZW5ndGggb2YgYW4gZW5jb2RlZCBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBnZXRCeXRlTGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gMzI7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBFbmNvZGUgdGhlIGdpdmVuIGZ1bmN0aW9uIHRvIGEgYnl0ZSBhcnJheS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gVGhlIGVuY29kaW5nIGFyZ3VtZW50cy5cbiAgICAgKiBAcGFyYW0gYXJncy5idWZmZXIgLSBUaGUgYnl0ZSBhcnJheSB0byBhZGQgdG8uXG4gICAgICogQHBhcmFtIGFyZ3MudmFsdWUgLSBUaGUgZnVuY3Rpb24gdG8gZW5jb2RlLlxuICAgICAqIEBwYXJhbSBhcmdzLnBhY2tlZCAtIFdoZXRoZXIgdG8gdXNlIHBhY2tlZCBlbmNvZGluZy5cbiAgICAgKiBAcGFyYW0gYXJncy50aWdodCAtIFdoZXRoZXIgdG8gdXNlIG5vbi1zdGFuZGFyZCB0aWdodCBlbmNvZGluZy5cbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZXMgd2l0aCB0aGUgZW5jb2RlZCBmdW5jdGlvbiBhZGRlZCB0byBpdC5cbiAgICAgKi9cbiAgICBlbmNvZGUoeyBidWZmZXIsIHZhbHVlLCBwYWNrZWQsIHRpZ2h0IH0pIHtcbiAgICAgICAgY29uc3QgZm5WYWx1ZSA9ICgwLCBleHBvcnRzLmdldEZ1bmN0aW9uKSh2YWx1ZSk7XG4gICAgICAgIC8vIEZ1bmN0aW9ucyBhcmUgZW5jb2RlZCBhcyBgYnl0ZXMyNGAsIHNvIHdlIHVzZSB0aGUgZml4ZWRCeXRlcyBwYXJzZXIgdG9cbiAgICAgICAgLy8gZW5jb2RlIHRoZSBmdW5jdGlvbi5cbiAgICAgICAgcmV0dXJuIGZpeGVkX2J5dGVzXzEuZml4ZWRCeXRlcy5lbmNvZGUoe1xuICAgICAgICAgICAgdHlwZTogJ2J5dGVzMjQnLFxuICAgICAgICAgICAgYnVmZmVyLFxuICAgICAgICAgICAgdmFsdWU6IGZuVmFsdWUsXG4gICAgICAgICAgICBwYWNrZWQsXG4gICAgICAgICAgICB0aWdodCxcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBEZWNvZGUgdGhlIGdpdmVuIGJ5dGUgYXJyYXkgdG8gYSBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gVGhlIGRlY29kaW5nIGFyZ3VtZW50cy5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSBieXRlIGFycmF5IHRvIGRlY29kZS5cbiAgICAgKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBmdW5jdGlvbiBhcyBhIHtAbGluayBTb2xpZGl0eUZ1bmN0aW9ufSBvYmplY3QuXG4gICAgICovXG4gICAgZGVjb2RlKHsgdmFsdWUgfSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWRkcmVzczogKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkodmFsdWUuc2xpY2UoMCwgMjApKSxcbiAgICAgICAgICAgIHNlbGVjdG9yOiAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KSh2YWx1ZS5zbGljZSgyMCwgMjQpKSxcbiAgICAgICAgfTtcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZ1bmN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/function.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./address */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/address.js\"), exports);\n__exportStar(__webpack_require__(/*! ./array */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/array.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bool */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bool.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bytes */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bytes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./fixed-bytes */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./function */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/function.js\"), exports);\n__exportStar(__webpack_require__(/*! ./number */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/number.js\"), exports);\n__exportStar(__webpack_require__(/*! ./parser */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/parser.js\"), exports);\n__exportStar(__webpack_require__(/*! ./string */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/string.js\"), exports);\n__exportStar(__webpack_require__(/*! ./tuple */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/tuple.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLG1GQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQywrRUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsNkVBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLCtFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQywyRkFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMscUZBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLGlGQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxpRkFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsaUZBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLCtFQUFTO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9hYmktdXRpbHMvZGlzdC9wYXJzZXJzL2luZGV4LmpzPzg2OTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZGRyZXNzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcnJheVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYm9vbFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYnl0ZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ZpeGVkLWJ5dGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mdW5jdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbnVtYmVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wYXJzZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0cmluZ1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHVwbGVcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/number.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/number.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.number = exports.getBigInt = exports.assertNumberLength = exports.getLength = exports.isSigned = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\");\nconst NUMBER_REGEX = /^u?int(?<length>[0-9]*)?$/u;\n/**\n * Check if a number type is signed.\n *\n * @param type - The type to check.\n * @returns Whether the type is signed.\n */\nconst isSigned = (type) => {\n    return !type.startsWith('u');\n};\nexports.isSigned = isSigned;\n/**\n * Get the length of the specified type. If a length is not specified, if the\n * length is out of range (8 <= n <= 256), or if the length is not a multiple of\n * 8, this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The bit length of the type.\n */\nconst getLength = (type) => {\n    if (type === 'int' || type === 'uint') {\n        return 256;\n    }\n    const match = type.match(NUMBER_REGEX);\n    (0, utils_1.assert)(match?.groups?.length, new errors_1.ParserError(`Invalid number type. Expected a number type, but received \"${type}\".`));\n    const length = parseInt(match.groups.length, 10);\n    (0, utils_1.assert)(length >= 8 && length <= 256, new errors_1.ParserError(`Invalid number length. Expected a number between 8 and 256, but received \"${type}\".`));\n    (0, utils_1.assert)(length % 8 === 0, new errors_1.ParserError(`Invalid number length. Expected a multiple of 8, but received \"${type}\".`));\n    return length;\n};\nexports.getLength = getLength;\n/**\n * Assert that the byte length of the given value is in range for the given\n * number type.\n *\n * @param value - The value to check.\n * @param type - The type of the value.\n * @throws If the value is out of range for the type.\n */\nconst assertNumberLength = (value, type) => {\n    const length = (0, exports.getLength)(type);\n    const maxValue = BigInt(2) ** BigInt(length - ((0, exports.isSigned)(type) ? 1 : 0)) - BigInt(1);\n    if ((0, exports.isSigned)(type)) {\n        // Signed types must be in the range of `-(2^(length - 1))` to\n        // `2^(length - 1) - 1`.\n        (0, utils_1.assert)(value >= -(maxValue + BigInt(1)) && value <= maxValue, new errors_1.ParserError(`Number \"${value}\" is out of range for type \"${type}\".`));\n        return;\n    }\n    // Unsigned types must be in the range of `0` to `2^length - 1`.\n    (0, utils_1.assert)(value <= maxValue, new errors_1.ParserError(`Number \"${value}\" is out of range for type \"${type}\".`));\n};\nexports.assertNumberLength = assertNumberLength;\n/**\n * Normalize a `bigint` value. This accepts the value as:\n *\n * - A `bigint`.\n * - A `number`.\n * - A decimal string, i.e., a string that does not start with \"0x\".\n * - A hexadecimal string, i.e., a string that starts with \"0x\".\n *\n * @param value - The number-like value to parse.\n * @returns The value parsed as bigint.\n */\nconst getBigInt = (value) => {\n    try {\n        return (0, utils_1.createBigInt)(value);\n    }\n    catch {\n        throw new errors_1.ParserError(`Invalid number. Expected a valid number value, but received \"${value}\".`);\n    }\n};\nexports.getBigInt = getBigInt;\nexports.number = {\n    isDynamic: false,\n    /**\n     * Check if a type is a number type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a number type.\n     */\n    isType(type) {\n        return NUMBER_REGEX.test(type);\n    },\n    /**\n     * Get the byte length of an encoded number type. Since `int` and `uint` are\n     * simple types, this will always return 32.\n     *\n     * @returns The byte length of the type.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode a number value.\n     *\n     * @param args - The arguments to encode.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed }) {\n        const bigIntValue = (0, exports.getBigInt)(value);\n        (0, exports.assertNumberLength)(bigIntValue, type);\n        if ((0, exports.isSigned)(type)) {\n            // For packed encoding, the value is padded to the length of the type, and\n            // then added to the byte array.\n            if (packed) {\n                const length = (0, exports.getLength)(type) / 8;\n                return (0, utils_1.concatBytes)([buffer, (0, utils_1.signedBigIntToBytes)(bigIntValue, length)]);\n            }\n            return (0, utils_1.concatBytes)([\n                buffer,\n                (0, utils_2.padStart)((0, utils_1.signedBigIntToBytes)(bigIntValue, 32)),\n            ]);\n        }\n        // For packed encoding, the value is padded to the length of the type, and\n        // then added to the byte array.\n        if (packed) {\n            const length = (0, exports.getLength)(type) / 8;\n            return (0, utils_1.concatBytes)([\n                buffer,\n                (0, utils_2.padStart)((0, utils_1.bigIntToBytes)(bigIntValue), length),\n            ]);\n        }\n        return (0, utils_1.concatBytes)([buffer, (0, utils_2.padStart)((0, utils_1.bigIntToBytes)(bigIntValue))]);\n    },\n    /**\n     * Decode a number value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @returns The decoded value.\n     */\n    decode({ type, value }) {\n        const buffer = value.subarray(0, 32);\n        if ((0, exports.isSigned)(type)) {\n            const numberValue = (0, utils_1.bytesToSignedBigInt)(buffer);\n            (0, exports.assertNumberLength)(numberValue, type);\n            return numberValue;\n        }\n        const numberValue = (0, utils_1.bytesToBigInt)(buffer);\n        (0, exports.assertNumberLength)(numberValue, type);\n        return numberValue;\n    },\n};\n//# sourceMappingURL=number.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/parser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvcGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9hYmktdXRpbHMvZGlzdC9wYXJzZXJzL3BhcnNlci5qcz9lNzRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/string.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.string = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/bytes.js\");\nexports.string = {\n    isDynamic: true,\n    /**\n     * Check if a type is a string type. Since `string` is a simple type, this\n     * is just a check if the type is \"string\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a string type.\n     */\n    isType: (type) => type === 'string',\n    /**\n     * Get the byte length of an encoded string type. Since `string` is a simple\n     * type, this will always return 32.\n     *\n     * Note that actual strings are variable in length, but the encoded static\n     * value (pointer) is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded string.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given string value to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The string value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded string value added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        // Strings are encoded as UTF-8 bytes, so we use the bytes parser to encode\n        // the string as bytes.\n        return bytes_1.bytes.encode({\n            type: 'bytes',\n            buffer,\n            value: (0, utils_1.stringToBytes)(value),\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a string value.\n     *\n     * @param args - The decoding arguments.\n     * @returns The decoded string value.\n     */\n    decode(args) {\n        // Strings are encoded as UTF-8 bytes, so we use the bytes parser to decode\n        // the bytes, and convert them to a string.\n        return (0, utils_1.bytesToString)(bytes_1.bytes.decode(args));\n    },\n};\n//# sourceMappingURL=string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvc3RyaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsK0VBQVM7QUFDakMsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDhCQUE4QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9hYmktdXRpbHMvZGlzdC9wYXJzZXJzL3N0cmluZy5qcz9lMjhkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdHJpbmcgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBtZXRhbWFzay91dGlsc1wiKTtcbmNvbnN0IGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbmV4cG9ydHMuc3RyaW5nID0ge1xuICAgIGlzRHluYW1pYzogdHJ1ZSxcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBhIHR5cGUgaXMgYSBzdHJpbmcgdHlwZS4gU2luY2UgYHN0cmluZ2AgaXMgYSBzaW1wbGUgdHlwZSwgdGhpc1xuICAgICAqIGlzIGp1c3QgYSBjaGVjayBpZiB0aGUgdHlwZSBpcyBcInN0cmluZ1wiLlxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGUgLSBUaGUgdHlwZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB0eXBlIGlzIGEgc3RyaW5nIHR5cGUuXG4gICAgICovXG4gICAgaXNUeXBlOiAodHlwZSkgPT4gdHlwZSA9PT0gJ3N0cmluZycsXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBieXRlIGxlbmd0aCBvZiBhbiBlbmNvZGVkIHN0cmluZyB0eXBlLiBTaW5jZSBgc3RyaW5nYCBpcyBhIHNpbXBsZVxuICAgICAqIHR5cGUsIHRoaXMgd2lsbCBhbHdheXMgcmV0dXJuIDMyLlxuICAgICAqXG4gICAgICogTm90ZSB0aGF0IGFjdHVhbCBzdHJpbmdzIGFyZSB2YXJpYWJsZSBpbiBsZW5ndGgsIGJ1dCB0aGUgZW5jb2RlZCBzdGF0aWNcbiAgICAgKiB2YWx1ZSAocG9pbnRlcikgaXMgYWx3YXlzIDMyIGJ5dGVzIGxvbmcuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZSBsZW5ndGggb2YgYW4gZW5jb2RlZCBzdHJpbmcuXG4gICAgICovXG4gICAgZ2V0Qnl0ZUxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIDMyO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogRW5jb2RlIHRoZSBnaXZlbiBzdHJpbmcgdmFsdWUgdG8gYSBieXRlIGFycmF5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBUaGUgZW5jb2RpbmcgYXJndW1lbnRzLlxuICAgICAqIEBwYXJhbSBhcmdzLmJ1ZmZlciAtIFRoZSBieXRlIGFycmF5IHRvIGFkZCB0by5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSBzdHJpbmcgdmFsdWUgdG8gZW5jb2RlLlxuICAgICAqIEBwYXJhbSBhcmdzLnBhY2tlZCAtIFdoZXRoZXIgdG8gdXNlIHBhY2tlZCBlbmNvZGluZy5cbiAgICAgKiBAcGFyYW0gYXJncy50aWdodCAtIFdoZXRoZXIgdG8gdXNlIG5vbi1zdGFuZGFyZCB0aWdodCBlbmNvZGluZy5cbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZXMgd2l0aCB0aGUgZW5jb2RlZCBzdHJpbmcgdmFsdWUgYWRkZWQgdG8gaXQuXG4gICAgICovXG4gICAgZW5jb2RlKHsgYnVmZmVyLCB2YWx1ZSwgcGFja2VkLCB0aWdodCB9KSB7XG4gICAgICAgIC8vIFN0cmluZ3MgYXJlIGVuY29kZWQgYXMgVVRGLTggYnl0ZXMsIHNvIHdlIHVzZSB0aGUgYnl0ZXMgcGFyc2VyIHRvIGVuY29kZVxuICAgICAgICAvLyB0aGUgc3RyaW5nIGFzIGJ5dGVzLlxuICAgICAgICByZXR1cm4gYnl0ZXNfMS5ieXRlcy5lbmNvZGUoe1xuICAgICAgICAgICAgdHlwZTogJ2J5dGVzJyxcbiAgICAgICAgICAgIGJ1ZmZlcixcbiAgICAgICAgICAgIHZhbHVlOiAoMCwgdXRpbHNfMS5zdHJpbmdUb0J5dGVzKSh2YWx1ZSksXG4gICAgICAgICAgICBwYWNrZWQsXG4gICAgICAgICAgICB0aWdodCxcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBEZWNvZGUgdGhlIGdpdmVuIGJ5dGUgYXJyYXkgdG8gYSBzdHJpbmcgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYXJncyAtIFRoZSBkZWNvZGluZyBhcmd1bWVudHMuXG4gICAgICogQHJldHVybnMgVGhlIGRlY29kZWQgc3RyaW5nIHZhbHVlLlxuICAgICAqL1xuICAgIGRlY29kZShhcmdzKSB7XG4gICAgICAgIC8vIFN0cmluZ3MgYXJlIGVuY29kZWQgYXMgVVRGLTggYnl0ZXMsIHNvIHdlIHVzZSB0aGUgYnl0ZXMgcGFyc2VyIHRvIGRlY29kZVxuICAgICAgICAvLyB0aGUgYnl0ZXMsIGFuZCBjb252ZXJ0IHRoZW0gdG8gYSBzdHJpbmcuXG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS5ieXRlc1RvU3RyaW5nKShieXRlc18xLmJ5dGVzLmRlY29kZShhcmdzKSk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/tuple.js":
/*!****************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/parsers/tuple.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.tuple = exports.getTupleElements = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst errors_1 = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/errors.js\");\nconst packer_1 = __webpack_require__(/*! ../packer */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/packer.js\");\nconst TUPLE_REGEX = /^\\((.+)\\)$/u;\nconst isTupleType = (type) => TUPLE_REGEX.test(type);\n/**\n * Get elements from a tuple type.\n *\n * @param type - The tuple type to get the types for.\n * @returns The elements of the tuple as string array.\n */\nconst getTupleElements = (type) => {\n    (0, utils_1.assert)(type.startsWith('(') && type.endsWith(')'), new errors_1.ParserError(`Invalid tuple type. Expected tuple type, but received \"${type}\".`));\n    const elements = [];\n    let current = '';\n    let depth = 0;\n    for (let i = 1; i < type.length - 1; i++) {\n        const char = type[i];\n        if (char === ',' && depth === 0) {\n            elements.push(current.trim());\n            current = '';\n        }\n        else {\n            current += char;\n            if (char === '(') {\n                depth += 1;\n            }\n            else if (char === ')') {\n                depth -= 1;\n            }\n        }\n    }\n    if (current.trim()) {\n        elements.push(current.trim());\n    }\n    return elements;\n};\nexports.getTupleElements = getTupleElements;\nexports.tuple = {\n    /**\n     * Check if the tuple is dynamic. Tuples are dynamic if one or more elements\n     * of the tuple are dynamic.\n     *\n     * @param type - The type to check.\n     * @returns Whether the tuple is dynamic.\n     */\n    isDynamic(type) {\n        const elements = (0, exports.getTupleElements)(type);\n        return elements.some((element) => {\n            const parser = (0, packer_1.getParser)(element);\n            return (0, packer_1.isDynamicParser)(parser, element);\n        });\n    },\n    /**\n     * Check if a type is a tuple type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a tuple type.\n     */\n    isType(type) {\n        return isTupleType(type);\n    },\n    /**\n     * Get the byte length of a tuple type. If the tuple is dynamic, this will\n     * always return 32. If the tuple is static, this will return the sum of the\n     * byte lengths of the tuple elements.\n     *\n     * @param type - The type to get the byte length for.\n     * @returns The byte length of the tuple type.\n     */\n    getByteLength(type) {\n        if ((0, packer_1.isDynamicParser)(this, type)) {\n            return 32;\n        }\n        const elements = (0, exports.getTupleElements)(type);\n        return elements.reduce((total, element) => {\n            return total + (0, packer_1.getParser)(element).getByteLength(element);\n        }, 0);\n    },\n    /**\n     * Encode a tuple value.\n     *\n     * @param args - The encoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use non-standard packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed, tight }) {\n        const elements = (0, exports.getTupleElements)(type);\n        return (0, packer_1.pack)({\n            types: elements,\n            values: value,\n            byteArray: buffer,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode a tuple value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @param args.skip - A function to skip a number of bytes.\n     * @returns The decoded value.\n     */\n    decode({ type, value, skip }) {\n        const elements = (0, exports.getTupleElements)(type);\n        const length = this.getByteLength(type) - 32;\n        skip(length);\n        return (0, packer_1.unpack)(elements, value);\n    },\n};\n//# sourceMappingURL=tuple.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvdHVwbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLHdCQUF3QjtBQUN4QyxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQVc7QUFDcEMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUpBQXVKLEtBQUs7QUFDNUo7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvQ0FBb0M7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3BhcnNlcnMvdHVwbGUuanM/YmMyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudHVwbGUgPSBleHBvcnRzLmdldFR1cGxlRWxlbWVudHMgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBtZXRhbWFzay91dGlsc1wiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL2Vycm9yc1wiKTtcbmNvbnN0IHBhY2tlcl8xID0gcmVxdWlyZShcIi4uL3BhY2tlclwiKTtcbmNvbnN0IFRVUExFX1JFR0VYID0gL15cXCgoLispXFwpJC91O1xuY29uc3QgaXNUdXBsZVR5cGUgPSAodHlwZSkgPT4gVFVQTEVfUkVHRVgudGVzdCh0eXBlKTtcbi8qKlxuICogR2V0IGVsZW1lbnRzIGZyb20gYSB0dXBsZSB0eXBlLlxuICpcbiAqIEBwYXJhbSB0eXBlIC0gVGhlIHR1cGxlIHR5cGUgdG8gZ2V0IHRoZSB0eXBlcyBmb3IuXG4gKiBAcmV0dXJucyBUaGUgZWxlbWVudHMgb2YgdGhlIHR1cGxlIGFzIHN0cmluZyBhcnJheS5cbiAqL1xuY29uc3QgZ2V0VHVwbGVFbGVtZW50cyA9ICh0eXBlKSA9PiB7XG4gICAgKDAsIHV0aWxzXzEuYXNzZXJ0KSh0eXBlLnN0YXJ0c1dpdGgoJygnKSAmJiB0eXBlLmVuZHNXaXRoKCcpJyksIG5ldyBlcnJvcnNfMS5QYXJzZXJFcnJvcihgSW52YWxpZCB0dXBsZSB0eXBlLiBFeHBlY3RlZCB0dXBsZSB0eXBlLCBidXQgcmVjZWl2ZWQgXCIke3R5cGV9XCIuYCkpO1xuICAgIGNvbnN0IGVsZW1lbnRzID0gW107XG4gICAgbGV0IGN1cnJlbnQgPSAnJztcbiAgICBsZXQgZGVwdGggPSAwO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdHlwZS5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgY29uc3QgY2hhciA9IHR5cGVbaV07XG4gICAgICAgIGlmIChjaGFyID09PSAnLCcgJiYgZGVwdGggPT09IDApIHtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2goY3VycmVudC50cmltKCkpO1xuICAgICAgICAgICAgY3VycmVudCA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY3VycmVudCArPSBjaGFyO1xuICAgICAgICAgICAgaWYgKGNoYXIgPT09ICcoJykge1xuICAgICAgICAgICAgICAgIGRlcHRoICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjaGFyID09PSAnKScpIHtcbiAgICAgICAgICAgICAgICBkZXB0aCAtPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChjdXJyZW50LnRyaW0oKSkge1xuICAgICAgICBlbGVtZW50cy5wdXNoKGN1cnJlbnQudHJpbSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnRzO1xufTtcbmV4cG9ydHMuZ2V0VHVwbGVFbGVtZW50cyA9IGdldFR1cGxlRWxlbWVudHM7XG5leHBvcnRzLnR1cGxlID0ge1xuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHRoZSB0dXBsZSBpcyBkeW5hbWljLiBUdXBsZXMgYXJlIGR5bmFtaWMgaWYgb25lIG9yIG1vcmUgZWxlbWVudHNcbiAgICAgKiBvZiB0aGUgdHVwbGUgYXJlIGR5bmFtaWMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZSAtIFRoZSB0eXBlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIFdoZXRoZXIgdGhlIHR1cGxlIGlzIGR5bmFtaWMuXG4gICAgICovXG4gICAgaXNEeW5hbWljKHR5cGUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSAoMCwgZXhwb3J0cy5nZXRUdXBsZUVsZW1lbnRzKSh0eXBlKTtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnRzLnNvbWUoKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlciA9ICgwLCBwYWNrZXJfMS5nZXRQYXJzZXIpKGVsZW1lbnQpO1xuICAgICAgICAgICAgcmV0dXJuICgwLCBwYWNrZXJfMS5pc0R5bmFtaWNQYXJzZXIpKHBhcnNlciwgZWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgYSB0eXBlIGlzIGEgdHVwbGUgdHlwZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgdHlwZSBpcyBhIHR1cGxlIHR5cGUuXG4gICAgICovXG4gICAgaXNUeXBlKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIGlzVHVwbGVUeXBlKHR5cGUpO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBieXRlIGxlbmd0aCBvZiBhIHR1cGxlIHR5cGUuIElmIHRoZSB0dXBsZSBpcyBkeW5hbWljLCB0aGlzIHdpbGxcbiAgICAgKiBhbHdheXMgcmV0dXJuIDMyLiBJZiB0aGUgdHVwbGUgaXMgc3RhdGljLCB0aGlzIHdpbGwgcmV0dXJuIHRoZSBzdW0gb2YgdGhlXG4gICAgICogYnl0ZSBsZW5ndGhzIG9mIHRoZSB0dXBsZSBlbGVtZW50cy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgdG8gZ2V0IHRoZSBieXRlIGxlbmd0aCBmb3IuXG4gICAgICogQHJldHVybnMgVGhlIGJ5dGUgbGVuZ3RoIG9mIHRoZSB0dXBsZSB0eXBlLlxuICAgICAqL1xuICAgIGdldEJ5dGVMZW5ndGgodHlwZSkge1xuICAgICAgICBpZiAoKDAsIHBhY2tlcl8xLmlzRHluYW1pY1BhcnNlcikodGhpcywgdHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiAzMjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbGVtZW50cyA9ICgwLCBleHBvcnRzLmdldFR1cGxlRWxlbWVudHMpKHR5cGUpO1xuICAgICAgICByZXR1cm4gZWxlbWVudHMucmVkdWNlKCh0b3RhbCwgZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRvdGFsICsgKDAsIHBhY2tlcl8xLmdldFBhcnNlcikoZWxlbWVudCkuZ2V0Qnl0ZUxlbmd0aChlbGVtZW50KTtcbiAgICAgICAgfSwgMCk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBFbmNvZGUgYSB0dXBsZSB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gVGhlIGVuY29kaW5nIGFyZ3VtZW50cy5cbiAgICAgKiBAcGFyYW0gYXJncy50eXBlIC0gVGhlIHR5cGUgb2YgdGhlIHZhbHVlLlxuICAgICAqIEBwYXJhbSBhcmdzLmJ1ZmZlciAtIFRoZSBieXRlIGFycmF5IHRvIGFkZCB0by5cbiAgICAgKiBAcGFyYW0gYXJncy52YWx1ZSAtIFRoZSB2YWx1ZSB0byBlbmNvZGUuXG4gICAgICogQHBhcmFtIGFyZ3MucGFja2VkIC0gV2hldGhlciB0byB1c2Ugbm9uLXN0YW5kYXJkIHBhY2tlZCBlbmNvZGluZy5cbiAgICAgKiBAcGFyYW0gYXJncy50aWdodCAtIFdoZXRoZXIgdG8gdXNlIG5vbi1zdGFuZGFyZCB0aWdodCBlbmNvZGluZy5cbiAgICAgKiBAcmV0dXJucyBUaGUgYnl0ZXMgd2l0aCB0aGUgZW5jb2RlZCB2YWx1ZSBhZGRlZCB0byBpdC5cbiAgICAgKi9cbiAgICBlbmNvZGUoeyB0eXBlLCBidWZmZXIsIHZhbHVlLCBwYWNrZWQsIHRpZ2h0IH0pIHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSAoMCwgZXhwb3J0cy5nZXRUdXBsZUVsZW1lbnRzKSh0eXBlKTtcbiAgICAgICAgcmV0dXJuICgwLCBwYWNrZXJfMS5wYWNrKSh7XG4gICAgICAgICAgICB0eXBlczogZWxlbWVudHMsXG4gICAgICAgICAgICB2YWx1ZXM6IHZhbHVlLFxuICAgICAgICAgICAgYnl0ZUFycmF5OiBidWZmZXIsXG4gICAgICAgICAgICBwYWNrZWQsXG4gICAgICAgICAgICB0aWdodCxcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBEZWNvZGUgYSB0dXBsZSB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gVGhlIGRlY29kaW5nIGFyZ3VtZW50cy5cbiAgICAgKiBAcGFyYW0gYXJncy50eXBlIC0gVGhlIHR5cGUgb2YgdGhlIHZhbHVlLlxuICAgICAqIEBwYXJhbSBhcmdzLnZhbHVlIC0gVGhlIHZhbHVlIHRvIGRlY29kZS5cbiAgICAgKiBAcGFyYW0gYXJncy5za2lwIC0gQSBmdW5jdGlvbiB0byBza2lwIGEgbnVtYmVyIG9mIGJ5dGVzLlxuICAgICAqIEByZXR1cm5zIFRoZSBkZWNvZGVkIHZhbHVlLlxuICAgICAqL1xuICAgIGRlY29kZSh7IHR5cGUsIHZhbHVlLCBza2lwIH0pIHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSAoMCwgZXhwb3J0cy5nZXRUdXBsZUVsZW1lbnRzKSh0eXBlKTtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gdGhpcy5nZXRCeXRlTGVuZ3RoKHR5cGUpIC0gMzI7XG4gICAgICAgIHNraXAobGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuICgwLCBwYWNrZXJfMS51bnBhY2spKGVsZW1lbnRzLCB2YWx1ZSk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10dXBsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/parsers/tuple.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/types/abi.js":
/*!************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/types/abi.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=abi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3R5cGVzL2FiaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svYWJpLXV0aWxzL2Rpc3QvdHlwZXMvYWJpLmpzP2ViNGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hYmkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/types/abi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/types/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/types/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./abi */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/types/abi.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3R5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyx5RUFBTztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svYWJpLXV0aWxzL2Rpc3QvdHlwZXMvaW5kZXguanM/ZmJhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FiaVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/utils/buffer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/utils/buffer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.padEnd = exports.padStart = exports.set = void 0;\nconst utils_1 = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/index.js\");\nconst BUFFER_WIDTH = 32;\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target - The buffer to set to.\n * @param buffer - The buffer to set in the target.\n * @param position - The position at which to set the target.\n * @returns The combined buffer.\n */\nconst set = (target, buffer, position) => {\n    return (0, utils_1.concatBytes)([\n        target.subarray(0, position),\n        buffer,\n        target.subarray(position + buffer.length),\n    ]);\n};\nexports.set = set;\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the start.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nconst padStart = (buffer, length = BUFFER_WIDTH) => {\n    const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n    return (0, utils_1.concatBytes)([padding, buffer]);\n};\nexports.padStart = padStart;\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nconst padEnd = (buffer, length = BUFFER_WIDTH) => {\n    const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n    return (0, utils_1.concatBytes)([buffer, padding]);\n};\nexports.padEnd = padEnd;\n//# sourceMappingURL=buffer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3V0aWxzL2J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsV0FBVztBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svYWJpLXV0aWxzL2Rpc3QvdXRpbHMvYnVmZmVyLmpzP2VjMDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhZEVuZCA9IGV4cG9ydHMucGFkU3RhcnQgPSBleHBvcnRzLnNldCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG1ldGFtYXNrL3V0aWxzXCIpO1xuY29uc3QgQlVGRkVSX1dJRFRIID0gMzI7XG4vKipcbiAqIFNldCBgYnVmZmVyYCBpbiBgdGFyZ2V0YCBhdCB0aGUgc3BlY2lmaWVkIHBvc2l0aW9uLlxuICpcbiAqIEBwYXJhbSB0YXJnZXQgLSBUaGUgYnVmZmVyIHRvIHNldCB0by5cbiAqIEBwYXJhbSBidWZmZXIgLSBUaGUgYnVmZmVyIHRvIHNldCBpbiB0aGUgdGFyZ2V0LlxuICogQHBhcmFtIHBvc2l0aW9uIC0gVGhlIHBvc2l0aW9uIGF0IHdoaWNoIHRvIHNldCB0aGUgdGFyZ2V0LlxuICogQHJldHVybnMgVGhlIGNvbWJpbmVkIGJ1ZmZlci5cbiAqL1xuY29uc3Qgc2V0ID0gKHRhcmdldCwgYnVmZmVyLCBwb3NpdGlvbikgPT4ge1xuICAgIHJldHVybiAoMCwgdXRpbHNfMS5jb25jYXRCeXRlcykoW1xuICAgICAgICB0YXJnZXQuc3ViYXJyYXkoMCwgcG9zaXRpb24pLFxuICAgICAgICBidWZmZXIsXG4gICAgICAgIHRhcmdldC5zdWJhcnJheShwb3NpdGlvbiArIGJ1ZmZlci5sZW5ndGgpLFxuICAgIF0pO1xufTtcbmV4cG9ydHMuc2V0ID0gc2V0O1xuLyoqXG4gKiBBZGQgcGFkZGluZyB0byBhIGJ1ZmZlci4gSWYgdGhlIGJ1ZmZlciBpcyBsYXJnZXIgdGhhbiBgbGVuZ3RoYCwgdGhpcyBmdW5jdGlvbiB3b24ndCBkbyBhbnl0aGluZy4gSWYgaXQncyBzbWFsbGVyLCB0aGVcbiAqIGJ1ZmZlciB3aWxsIGJlIHBhZGRlZCB0byB0aGUgc3BlY2lmaWVkIGxlbmd0aCwgd2l0aCBleHRyYSB6ZXJvZXMgYXQgdGhlIHN0YXJ0LlxuICpcbiAqIEBwYXJhbSBidWZmZXIgLSBUaGUgYnVmZmVyIHRvIGFkZCBwYWRkaW5nIHRvLlxuICogQHBhcmFtIGxlbmd0aCAtIFRoZSBudW1iZXIgb2YgYnl0ZXMgdG8gcGFkIHRoZSBidWZmZXIgdG8uXG4gKiBAcmV0dXJucyBUaGUgcGFkZGVkIGJ1ZmZlci5cbiAqL1xuY29uc3QgcGFkU3RhcnQgPSAoYnVmZmVyLCBsZW5ndGggPSBCVUZGRVJfV0lEVEgpID0+IHtcbiAgICBjb25zdCBwYWRkaW5nID0gbmV3IFVpbnQ4QXJyYXkoTWF0aC5tYXgobGVuZ3RoIC0gYnVmZmVyLmxlbmd0aCwgMCkpLmZpbGwoMHgwMCk7XG4gICAgcmV0dXJuICgwLCB1dGlsc18xLmNvbmNhdEJ5dGVzKShbcGFkZGluZywgYnVmZmVyXSk7XG59O1xuZXhwb3J0cy5wYWRTdGFydCA9IHBhZFN0YXJ0O1xuLyoqXG4gKiBBZGQgcGFkZGluZyB0byBhIGJ1ZmZlci4gSWYgdGhlIGJ1ZmZlciBpcyBsYXJnZXIgdGhhbiBgbGVuZ3RoYCwgdGhpcyBmdW5jdGlvbiB3b24ndCBkbyBhbnl0aGluZy4gSWYgaXQncyBzbWFsbGVyLCB0aGVcbiAqIGJ1ZmZlciB3aWxsIGJlIHBhZGRlZCB0byB0aGUgc3BlY2lmaWVkIGxlbmd0aCwgd2l0aCBleHRyYSB6ZXJvZXMgYXQgdGhlIGVuZC5cbiAqXG4gKiBAcGFyYW0gYnVmZmVyIC0gVGhlIGJ1ZmZlciB0byBhZGQgcGFkZGluZyB0by5cbiAqIEBwYXJhbSBsZW5ndGggLSBUaGUgbnVtYmVyIG9mIGJ5dGVzIHRvIHBhZCB0aGUgYnVmZmVyIHRvLlxuICogQHJldHVybnMgVGhlIHBhZGRlZCBidWZmZXIuXG4gKi9cbmNvbnN0IHBhZEVuZCA9IChidWZmZXIsIGxlbmd0aCA9IEJVRkZFUl9XSURUSCkgPT4ge1xuICAgIGNvbnN0IHBhZGRpbmcgPSBuZXcgVWludDhBcnJheShNYXRoLm1heChsZW5ndGggLSBidWZmZXIubGVuZ3RoLCAwKSkuZmlsbCgweDAwKTtcbiAgICByZXR1cm4gKDAsIHV0aWxzXzEuY29uY2F0Qnl0ZXMpKFtidWZmZXIsIHBhZGRpbmddKTtcbn07XG5leHBvcnRzLnBhZEVuZCA9IHBhZEVuZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1ZmZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/utils/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/abi-utils/dist/utils/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@metamask/abi-utils/dist/utils/buffer.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2FiaS11dGlscy9kaXN0L3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQywrRUFBVTtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svYWJpLXV0aWxzL2Rpc3QvdXRpbHMvaW5kZXguanM/YmQ2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2J1ZmZlclwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/abi-utils/dist/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-2LBGT4GH.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-2LBGT4GH.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true})); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }// src/logging.ts\nvar _debug = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/debug/src/index.js\"); var _debug2 = _interopRequireDefault(_debug);\nvar globalLogger = _debug2.default.call(void 0, \"metamask\");\nfunction createProjectLogger(projectName) {\n  return globalLogger.extend(projectName);\n}\nfunction createModuleLogger(projectLogger, moduleName) {\n  return projectLogger.extend(moduleName);\n}\n\n\n\n\nexports.createProjectLogger = createProjectLogger; exports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=chunk-2LBGT4GH.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstMkxCR1Q0R0guanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLEVBQUUsdUNBQXVDLHVDQUF1QyxpQkFBaUI7QUFDekssYUFBYSxtQkFBTyxDQUFDLHNEQUFPLEdBQUc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0EsMkJBQTJCLHdCQUF3QiwwQkFBMEI7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstMkxCR1Q0R0guanM/ZTU1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogdHJ1ZX0pOyBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfS8vIHNyYy9sb2dnaW5nLnRzXG52YXIgX2RlYnVnID0gcmVxdWlyZSgnZGVidWcnKTsgdmFyIF9kZWJ1ZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZWJ1Zyk7XG52YXIgZ2xvYmFsTG9nZ2VyID0gX2RlYnVnMi5kZWZhdWx0LmNhbGwodm9pZCAwLCBcIm1ldGFtYXNrXCIpO1xuZnVuY3Rpb24gY3JlYXRlUHJvamVjdExvZ2dlcihwcm9qZWN0TmFtZSkge1xuICByZXR1cm4gZ2xvYmFsTG9nZ2VyLmV4dGVuZChwcm9qZWN0TmFtZSk7XG59XG5mdW5jdGlvbiBjcmVhdGVNb2R1bGVMb2dnZXIocHJvamVjdExvZ2dlciwgbW9kdWxlTmFtZSkge1xuICByZXR1cm4gcHJvamVjdExvZ2dlci5leHRlbmQobW9kdWxlTmFtZSk7XG59XG5cblxuXG5cbmV4cG9ydHMuY3JlYXRlUHJvamVjdExvZ2dlciA9IGNyZWF0ZVByb2plY3RMb2dnZXI7IGV4cG9ydHMuY3JlYXRlTW9kdWxlTG9nZ2VyID0gY3JlYXRlTW9kdWxlTG9nZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstMkxCR1Q0R0guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-2LBGT4GH.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-3W5G4CYI.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-3W5G4CYI.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet;\n//# sourceMappingURL=chunk-3W5G4CYI.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstM1c1RzRDWUkuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLENBQUM7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUEsb0JBQW9CLGlCQUFpQixvQkFBb0IsaUJBQWlCLG9CQUFvQjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay0zVzVHNENZSS5qcz8wNzUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7dmFyIF9fYWNjZXNzQ2hlY2sgPSAob2JqLCBtZW1iZXIsIG1zZykgPT4ge1xuICBpZiAoIW1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgXCIgKyBtc2cpO1xufTtcbnZhciBfX3ByaXZhdGVHZXQgPSAob2JqLCBtZW1iZXIsIGdldHRlcikgPT4ge1xuICBfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkXCIpO1xuICByZXR1cm4gZ2V0dGVyID8gZ2V0dGVyLmNhbGwob2JqKSA6IG1lbWJlci5nZXQob2JqKTtcbn07XG52YXIgX19wcml2YXRlQWRkID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSkgPT4ge1xuICBpZiAobWVtYmVyLmhhcyhvYmopKVxuICAgIHRocm93IFR5cGVFcnJvcihcIkNhbm5vdCBhZGQgdGhlIHNhbWUgcHJpdmF0ZSBtZW1iZXIgbW9yZSB0aGFuIG9uY2VcIik7XG4gIG1lbWJlciBpbnN0YW5jZW9mIFdlYWtTZXQgPyBtZW1iZXIuYWRkKG9iaikgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xufTtcbnZhciBfX3ByaXZhdGVTZXQgPSAob2JqLCBtZW1iZXIsIHZhbHVlLCBzZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJ3cml0ZSB0byBwcml2YXRlIGZpZWxkXCIpO1xuICBzZXR0ZXIgPyBzZXR0ZXIuY2FsbChvYmosIHZhbHVlKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cblxuXG5cblxuZXhwb3J0cy5fX3ByaXZhdGVHZXQgPSBfX3ByaXZhdGVHZXQ7IGV4cG9ydHMuX19wcml2YXRlQWRkID0gX19wcml2YXRlQWRkOyBleHBvcnRzLl9fcHJpdmF0ZVNldCA9IF9fcHJpdmF0ZVNldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTNXNUc0Q1lJLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-3W5G4CYI.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-4D6XQBHA.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-4D6XQBHA.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n// src/versions.ts\n\n\n\n\n\n\nvar _semver = __webpack_require__(/*! semver */ \"(ssr)/./node_modules/semver/index.js\");\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nvar VersionStruct = _superstruct.refine.call(void 0, \n  _superstruct.string.call(void 0, ),\n  \"Version\",\n  (value) => {\n    if (_semver.valid.call(void 0, value) === null) {\n      return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n  }\n);\nvar VersionRangeStruct = _superstruct.refine.call(void 0, \n  _superstruct.string.call(void 0, ),\n  \"Version range\",\n  (value) => {\n    if (_semver.validRange.call(void 0, value) === null) {\n      return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n  }\n);\nfunction isValidSemVerVersion(version) {\n  return _superstruct.is.call(void 0, version, VersionStruct);\n}\nfunction isValidSemVerRange(versionRange) {\n  return _superstruct.is.call(void 0, versionRange, VersionRangeStruct);\n}\nfunction assertIsSemVerVersion(version) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, version, VersionStruct);\n}\nfunction assertIsSemVerRange(range) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, range, VersionRangeStruct);\n}\nfunction gtVersion(version1, version2) {\n  return _semver.gt.call(void 0, version1, version2);\n}\nfunction gtRange(version, range) {\n  return _semver.gtr.call(void 0, version, range);\n}\nfunction satisfiesVersionRange(version, versionRange) {\n  return _semver.satisfies.call(void 0, version, versionRange, {\n    includePrerelease: true\n  });\n}\n\n\n\n\n\n\n\n\n\n\n\nexports.VersionStruct = VersionStruct; exports.VersionRangeStruct = VersionRangeStruct; exports.isValidSemVerVersion = isValidSemVerVersion; exports.isValidSemVerRange = isValidSemVerRange; exports.assertIsSemVerVersion = assertIsSemVerVersion; exports.assertIsSemVerRange = assertIsSemVerRange; exports.gtVersion = gtVersion; exports.gtRange = gtRange; exports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=chunk-4D6XQBHA.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNEQ2WFFCSEEuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDOztBQUV4RSx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7O0FBRXBEOzs7Ozs7O0FBT0EsY0FBYyxtQkFBTyxDQUFDLG9EQUFRO0FBQzlCLG1CQUFtQixtQkFBTyxDQUFDLG9FQUFhO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsTUFBTTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsTUFBTTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7Ozs7Ozs7Ozs7O0FBWUEscUJBQXFCLGtCQUFrQiwwQkFBMEIsdUJBQXVCLDRCQUE0Qix5QkFBeUIsMEJBQTBCLHVCQUF1Qiw2QkFBNkIsMEJBQTBCLDJCQUEyQix3QkFBd0IsaUJBQWlCLGNBQWMsZUFBZSxZQUFZLDZCQUE2QjtBQUMvWCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay00RDZYUUJIQS5qcz82ZTliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7XG5cbnZhciBfY2h1bms2WkRIU09VVmpzID0gcmVxdWlyZSgnLi9jaHVuay02WkRIU09VVi5qcycpO1xuXG4vLyBzcmMvdmVyc2lvbnMudHNcblxuXG5cblxuXG5cbnZhciBfc2VtdmVyID0gcmVxdWlyZSgnc2VtdmVyJyk7XG52YXIgX3N1cGVyc3RydWN0ID0gcmVxdWlyZSgnc3VwZXJzdHJ1Y3QnKTtcbnZhciBWZXJzaW9uU3RydWN0ID0gX3N1cGVyc3RydWN0LnJlZmluZS5jYWxsKHZvaWQgMCwgXG4gIF9zdXBlcnN0cnVjdC5zdHJpbmcuY2FsbCh2b2lkIDAsICksXG4gIFwiVmVyc2lvblwiLFxuICAodmFsdWUpID0+IHtcbiAgICBpZiAoX3NlbXZlci52YWxpZC5jYWxsKHZvaWQgMCwgdmFsdWUpID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gYEV4cGVjdGVkIFNlbVZlciB2ZXJzaW9uLCBnb3QgXCIke3ZhbHVlfVwiYDtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbik7XG52YXIgVmVyc2lvblJhbmdlU3RydWN0ID0gX3N1cGVyc3RydWN0LnJlZmluZS5jYWxsKHZvaWQgMCwgXG4gIF9zdXBlcnN0cnVjdC5zdHJpbmcuY2FsbCh2b2lkIDAsICksXG4gIFwiVmVyc2lvbiByYW5nZVwiLFxuICAodmFsdWUpID0+IHtcbiAgICBpZiAoX3NlbXZlci52YWxpZFJhbmdlLmNhbGwodm9pZCAwLCB2YWx1ZSkgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBgRXhwZWN0ZWQgU2VtVmVyIHJhbmdlLCBnb3QgXCIke3ZhbHVlfVwiYDtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbik7XG5mdW5jdGlvbiBpc1ZhbGlkU2VtVmVyVmVyc2lvbih2ZXJzaW9uKSB7XG4gIHJldHVybiBfc3VwZXJzdHJ1Y3QuaXMuY2FsbCh2b2lkIDAsIHZlcnNpb24sIFZlcnNpb25TdHJ1Y3QpO1xufVxuZnVuY3Rpb24gaXNWYWxpZFNlbVZlclJhbmdlKHZlcnNpb25SYW5nZSkge1xuICByZXR1cm4gX3N1cGVyc3RydWN0LmlzLmNhbGwodm9pZCAwLCB2ZXJzaW9uUmFuZ2UsIFZlcnNpb25SYW5nZVN0cnVjdCk7XG59XG5mdW5jdGlvbiBhc3NlcnRJc1NlbVZlclZlcnNpb24odmVyc2lvbikge1xuICBfY2h1bms2WkRIU09VVmpzLmFzc2VydFN0cnVjdC5jYWxsKHZvaWQgMCwgdmVyc2lvbiwgVmVyc2lvblN0cnVjdCk7XG59XG5mdW5jdGlvbiBhc3NlcnRJc1NlbVZlclJhbmdlKHJhbmdlKSB7XG4gIF9jaHVuazZaREhTT1VWanMuYXNzZXJ0U3RydWN0LmNhbGwodm9pZCAwLCByYW5nZSwgVmVyc2lvblJhbmdlU3RydWN0KTtcbn1cbmZ1bmN0aW9uIGd0VmVyc2lvbih2ZXJzaW9uMSwgdmVyc2lvbjIpIHtcbiAgcmV0dXJuIF9zZW12ZXIuZ3QuY2FsbCh2b2lkIDAsIHZlcnNpb24xLCB2ZXJzaW9uMik7XG59XG5mdW5jdGlvbiBndFJhbmdlKHZlcnNpb24sIHJhbmdlKSB7XG4gIHJldHVybiBfc2VtdmVyLmd0ci5jYWxsKHZvaWQgMCwgdmVyc2lvbiwgcmFuZ2UpO1xufVxuZnVuY3Rpb24gc2F0aXNmaWVzVmVyc2lvblJhbmdlKHZlcnNpb24sIHZlcnNpb25SYW5nZSkge1xuICByZXR1cm4gX3NlbXZlci5zYXRpc2ZpZXMuY2FsbCh2b2lkIDAsIHZlcnNpb24sIHZlcnNpb25SYW5nZSwge1xuICAgIGluY2x1ZGVQcmVyZWxlYXNlOiB0cnVlXG4gIH0pO1xufVxuXG5cblxuXG5cblxuXG5cblxuXG5cbmV4cG9ydHMuVmVyc2lvblN0cnVjdCA9IFZlcnNpb25TdHJ1Y3Q7IGV4cG9ydHMuVmVyc2lvblJhbmdlU3RydWN0ID0gVmVyc2lvblJhbmdlU3RydWN0OyBleHBvcnRzLmlzVmFsaWRTZW1WZXJWZXJzaW9uID0gaXNWYWxpZFNlbVZlclZlcnNpb247IGV4cG9ydHMuaXNWYWxpZFNlbVZlclJhbmdlID0gaXNWYWxpZFNlbVZlclJhbmdlOyBleHBvcnRzLmFzc2VydElzU2VtVmVyVmVyc2lvbiA9IGFzc2VydElzU2VtVmVyVmVyc2lvbjsgZXhwb3J0cy5hc3NlcnRJc1NlbVZlclJhbmdlID0gYXNzZXJ0SXNTZW1WZXJSYW5nZTsgZXhwb3J0cy5ndFZlcnNpb24gPSBndFZlcnNpb247IGV4cG9ydHMuZ3RSYW5nZSA9IGd0UmFuZ2U7IGV4cG9ydHMuc2F0aXNmaWVzVmVyc2lvblJhbmdlID0gc2F0aXNmaWVzVmVyc2lvblJhbmdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNEQ2WFFCSEEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-4D6XQBHA.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-4RMX5YWE.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-4RMX5YWE.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));// src/time.ts\nvar Duration = /* @__PURE__ */ ((Duration2) => {\n  Duration2[Duration2[\"Millisecond\"] = 1] = \"Millisecond\";\n  Duration2[Duration2[\"Second\"] = 1e3] = \"Second\";\n  Duration2[Duration2[\"Minute\"] = 6e4] = \"Minute\";\n  Duration2[Duration2[\"Hour\"] = 36e5] = \"Hour\";\n  Duration2[Duration2[\"Day\"] = 864e5] = \"Day\";\n  Duration2[Duration2[\"Week\"] = 6048e5] = \"Week\";\n  Duration2[Duration2[\"Year\"] = 31536e6] = \"Year\";\n  return Duration2;\n})(Duration || {});\nvar isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nvar assertIsNonNegativeInteger = (number, name) => {\n  if (!isNonNegativeInteger(number)) {\n    throw new Error(\n      `\"${name}\" must be a non-negative integer. Received: \"${number}\".`\n    );\n  }\n};\nfunction inMilliseconds(count, duration) {\n  assertIsNonNegativeInteger(count, \"count\");\n  return count * duration;\n}\nfunction timeSince(timestamp) {\n  assertIsNonNegativeInteger(timestamp, \"timestamp\");\n  return Date.now() - timestamp;\n}\n\n\n\n\n\nexports.Duration = Duration; exports.inMilliseconds = inMilliseconds; exports.timeSince = timeSince;\n//# sourceMappingURL=chunk-4RMX5YWE.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNFJNWDVZV0UuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLENBQUM7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQkFBZ0I7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLEtBQUssK0NBQStDLE9BQU87QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUEsZ0JBQWdCLGFBQWEsc0JBQXNCLG1CQUFtQixpQkFBaUI7QUFDdkYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNFJNWDVZV0UuanM/MTEwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogdHJ1ZX0pOy8vIHNyYy90aW1lLnRzXG52YXIgRHVyYXRpb24gPSAvKiBAX19QVVJFX18gKi8gKChEdXJhdGlvbjIpID0+IHtcbiAgRHVyYXRpb24yW0R1cmF0aW9uMltcIk1pbGxpc2Vjb25kXCJdID0gMV0gPSBcIk1pbGxpc2Vjb25kXCI7XG4gIER1cmF0aW9uMltEdXJhdGlvbjJbXCJTZWNvbmRcIl0gPSAxZTNdID0gXCJTZWNvbmRcIjtcbiAgRHVyYXRpb24yW0R1cmF0aW9uMltcIk1pbnV0ZVwiXSA9IDZlNF0gPSBcIk1pbnV0ZVwiO1xuICBEdXJhdGlvbjJbRHVyYXRpb24yW1wiSG91clwiXSA9IDM2ZTVdID0gXCJIb3VyXCI7XG4gIER1cmF0aW9uMltEdXJhdGlvbjJbXCJEYXlcIl0gPSA4NjRlNV0gPSBcIkRheVwiO1xuICBEdXJhdGlvbjJbRHVyYXRpb24yW1wiV2Vla1wiXSA9IDYwNDhlNV0gPSBcIldlZWtcIjtcbiAgRHVyYXRpb24yW0R1cmF0aW9uMltcIlllYXJcIl0gPSAzMTUzNmU2XSA9IFwiWWVhclwiO1xuICByZXR1cm4gRHVyYXRpb24yO1xufSkoRHVyYXRpb24gfHwge30pO1xudmFyIGlzTm9uTmVnYXRpdmVJbnRlZ2VyID0gKG51bWJlcikgPT4gTnVtYmVyLmlzSW50ZWdlcihudW1iZXIpICYmIG51bWJlciA+PSAwO1xudmFyIGFzc2VydElzTm9uTmVnYXRpdmVJbnRlZ2VyID0gKG51bWJlciwgbmFtZSkgPT4ge1xuICBpZiAoIWlzTm9uTmVnYXRpdmVJbnRlZ2VyKG51bWJlcikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgXCIke25hbWV9XCIgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBpbnRlZ2VyLiBSZWNlaXZlZDogXCIke251bWJlcn1cIi5gXG4gICAgKTtcbiAgfVxufTtcbmZ1bmN0aW9uIGluTWlsbGlzZWNvbmRzKGNvdW50LCBkdXJhdGlvbikge1xuICBhc3NlcnRJc05vbk5lZ2F0aXZlSW50ZWdlcihjb3VudCwgXCJjb3VudFwiKTtcbiAgcmV0dXJuIGNvdW50ICogZHVyYXRpb247XG59XG5mdW5jdGlvbiB0aW1lU2luY2UodGltZXN0YW1wKSB7XG4gIGFzc2VydElzTm9uTmVnYXRpdmVJbnRlZ2VyKHRpbWVzdGFtcCwgXCJ0aW1lc3RhbXBcIik7XG4gIHJldHVybiBEYXRlLm5vdygpIC0gdGltZXN0YW1wO1xufVxuXG5cblxuXG5cbmV4cG9ydHMuRHVyYXRpb24gPSBEdXJhdGlvbjsgZXhwb3J0cy5pbk1pbGxpc2Vjb25kcyA9IGluTWlsbGlzZWNvbmRzOyBleHBvcnRzLnRpbWVTaW5jZSA9IHRpbWVTaW5jZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTRSTVg1WVdFLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-4RMX5YWE.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-5AVWINSB.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-5AVWINSB.js ***!
  \*************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=chunk-5AVWINSB.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNUFWV0lOU0IuanMiLCJtYXBwaW5ncyI6IkFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNUFWV0lOU0IuanM/ODQxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjsvLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay01QVZXSU5TQi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-5AVWINSB.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-6NZW4WK4.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-6NZW4WK4.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true})); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n// src/base64.ts\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nvar base64 = (struct, options = {}) => {\n  const paddingRequired = _nullishCoalesce(options.paddingRequired, () => ( false));\n  const characterSet = _nullishCoalesce(options.characterSet, () => ( \"base64\"));\n  let letters;\n  if (characterSet === \"base64\") {\n    letters = String.raw`[A-Za-z0-9+\\/]`;\n  } else {\n    _chunk6ZDHSOUVjs.assert.call(void 0, characterSet === \"base64url\");\n    letters = String.raw`[-_A-Za-z0-9]`;\n  }\n  let re;\n  if (paddingRequired) {\n    re = new RegExp(\n      `^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`,\n      \"u\"\n    );\n  } else {\n    re = new RegExp(\n      `^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`,\n      \"u\"\n    );\n  }\n  return _superstruct.pattern.call(void 0, struct, re);\n};\n\n\n\nexports.base64 = base64;\n//# sourceMappingURL=chunk-6NZW4WK4.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNk5aVzRXSzQuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLEVBQUUsd0NBQXdDLG1CQUFtQixjQUFjLE9BQU87O0FBRTFKLHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjs7QUFFcEQ7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyxvRUFBYTtBQUN4QyxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVMsRUFBRSxPQUFPLFNBQVMsRUFBRSxJQUFJLFNBQVMsRUFBRTtBQUN6RDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsYUFBYSxTQUFTLEVBQUUsT0FBTyxTQUFTLElBQUksR0FBRyxTQUFTLEVBQUUsSUFBSSxTQUFTLEVBQUU7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay02TlpXNFdLNC5qcz82YzgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7IGZ1bmN0aW9uIF9udWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikgeyBpZiAobGhzICE9IG51bGwpIHsgcmV0dXJuIGxoczsgfSBlbHNlIHsgcmV0dXJuIHJoc0ZuKCk7IH0gfVxuXG52YXIgX2NodW5rNlpESFNPVVZqcyA9IHJlcXVpcmUoJy4vY2h1bmstNlpESFNPVVYuanMnKTtcblxuLy8gc3JjL2Jhc2U2NC50c1xudmFyIF9zdXBlcnN0cnVjdCA9IHJlcXVpcmUoJ3N1cGVyc3RydWN0Jyk7XG52YXIgYmFzZTY0ID0gKHN0cnVjdCwgb3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IHBhZGRpbmdSZXF1aXJlZCA9IF9udWxsaXNoQ29hbGVzY2Uob3B0aW9ucy5wYWRkaW5nUmVxdWlyZWQsICgpID0+ICggZmFsc2UpKTtcbiAgY29uc3QgY2hhcmFjdGVyU2V0ID0gX251bGxpc2hDb2FsZXNjZShvcHRpb25zLmNoYXJhY3RlclNldCwgKCkgPT4gKCBcImJhc2U2NFwiKSk7XG4gIGxldCBsZXR0ZXJzO1xuICBpZiAoY2hhcmFjdGVyU2V0ID09PSBcImJhc2U2NFwiKSB7XG4gICAgbGV0dGVycyA9IFN0cmluZy5yYXdgW0EtWmEtejAtOStcXC9dYDtcbiAgfSBlbHNlIHtcbiAgICBfY2h1bms2WkRIU09VVmpzLmFzc2VydC5jYWxsKHZvaWQgMCwgY2hhcmFjdGVyU2V0ID09PSBcImJhc2U2NHVybFwiKTtcbiAgICBsZXR0ZXJzID0gU3RyaW5nLnJhd2BbLV9BLVphLXowLTldYDtcbiAgfVxuICBsZXQgcmU7XG4gIGlmIChwYWRkaW5nUmVxdWlyZWQpIHtcbiAgICByZSA9IG5ldyBSZWdFeHAoXG4gICAgICBgXig/OiR7bGV0dGVyc317NH0pKig/OiR7bGV0dGVyc317M309fCR7bGV0dGVyc317Mn09PSk/JGAsXG4gICAgICBcInVcIlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmUgPSBuZXcgUmVnRXhwKFxuICAgICAgYF4oPzoke2xldHRlcnN9ezR9KSooPzoke2xldHRlcnN9ezIsM318JHtsZXR0ZXJzfXszfT18JHtsZXR0ZXJzfXsyfT09KT8kYCxcbiAgICAgIFwidVwiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gX3N1cGVyc3RydWN0LnBhdHRlcm4uY2FsbCh2b2lkIDAsIHN0cnVjdCwgcmUpO1xufTtcblxuXG5cbmV4cG9ydHMuYmFzZTY0ID0gYmFzZTY0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNk5aVzRXSzQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-6NZW4WK4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true})); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\nvar _chunkIZC266HSjs = __webpack_require__(/*! ./chunk-IZC266HS.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-IZC266HS.js\");\n\n// src/assert.ts\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nfunction isConstructable(fn) {\n  return Boolean(typeof _optionalChain([fn, 'optionalAccess', _ => _.prototype, 'optionalAccess', _2 => _2.constructor, 'optionalAccess', _3 => _3.name]) === \"string\");\n}\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n  return _chunkIZC266HSjs.getErrorMessage.call(void 0, error).replace(/\\.$/u, \"\");\n}\nfunction getError(ErrorWrapper, message) {\n  if (isConstructable(ErrorWrapper)) {\n    return new ErrorWrapper({\n      message\n    });\n  }\n  return ErrorWrapper({\n    message\n  });\n}\nvar AssertionError = class extends Error {\n  constructor(options) {\n    super(options.message);\n    this.code = \"ERR_ASSERTION\";\n  }\n};\nfunction assert(value, message = \"Assertion failed.\", ErrorWrapper = AssertionError) {\n  if (!value) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    throw getError(ErrorWrapper, message);\n  }\n}\nfunction assertStruct(value, struct, errorPrefix = \"Assertion failed\", ErrorWrapper = AssertionError) {\n  try {\n    _superstruct.assert.call(void 0, value, struct);\n  } catch (error) {\n    throw getError(\n      ErrorWrapper,\n      `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`\n    );\n  }\n}\nfunction assertExhaustive(_object) {\n  throw new Error(\n    \"Invalid branch reached. Should be detected during compilation.\"\n  );\n}\n\n\n\n\n\n\nexports.AssertionError = AssertionError; exports.assert = assert; exports.assertStruct = assertStruct; exports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=chunk-6ZDHSOUV.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNlpESFNPVVYuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLEVBQUUsK0JBQStCLCtCQUErQixvQkFBb0IsV0FBVyx5QkFBeUIsbUJBQW1CLHVCQUF1QixRQUFRLDJFQUEyRSxvQkFBb0Isa0RBQWtELHVCQUF1QixxQkFBcUIsbURBQW1ELDZEQUE2RCwrQkFBK0I7O0FBRTlqQix1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7O0FBRXBEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsb0VBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsU0FBUyxZQUFZLElBQUksNENBQTRDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQSxzQkFBc0IsbUJBQW1CLGNBQWMsV0FBVyxvQkFBb0IsaUJBQWlCLHdCQUF3QjtBQUMvSCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay02WkRIU09VVi5qcz9lY2ZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7IGZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykgeyBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDsgbGV0IHZhbHVlID0gb3BzWzBdOyBsZXQgaSA9IDE7IHdoaWxlIChpIDwgb3BzLmxlbmd0aCkgeyBjb25zdCBvcCA9IG9wc1tpXTsgY29uc3QgZm4gPSBvcHNbaSArIDFdOyBpICs9IDI7IGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykgeyBsYXN0QWNjZXNzTEhTID0gdmFsdWU7IHZhbHVlID0gZm4odmFsdWUpOyB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7IHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+IHZhbHVlLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpOyBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkOyB9IH0gcmV0dXJuIHZhbHVlOyB9XG5cbnZhciBfY2h1bmtJWkMyNjZIU2pzID0gcmVxdWlyZSgnLi9jaHVuay1JWkMyNjZIUy5qcycpO1xuXG4vLyBzcmMvYXNzZXJ0LnRzXG52YXIgX3N1cGVyc3RydWN0ID0gcmVxdWlyZSgnc3VwZXJzdHJ1Y3QnKTtcbmZ1bmN0aW9uIGlzQ29uc3RydWN0YWJsZShmbikge1xuICByZXR1cm4gQm9vbGVhbih0eXBlb2YgX29wdGlvbmFsQ2hhaW4oW2ZuLCAnb3B0aW9uYWxBY2Nlc3MnLCBfID0+IF8ucHJvdG90eXBlLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi5jb25zdHJ1Y3RvciwgJ29wdGlvbmFsQWNjZXNzJywgXzMgPT4gXzMubmFtZV0pID09PSBcInN0cmluZ1wiKTtcbn1cbmZ1bmN0aW9uIGdldEVycm9yTWVzc2FnZVdpdGhvdXRUcmFpbGluZ1BlcmlvZChlcnJvcikge1xuICByZXR1cm4gX2NodW5rSVpDMjY2SFNqcy5nZXRFcnJvck1lc3NhZ2UuY2FsbCh2b2lkIDAsIGVycm9yKS5yZXBsYWNlKC9cXC4kL3UsIFwiXCIpO1xufVxuZnVuY3Rpb24gZ2V0RXJyb3IoRXJyb3JXcmFwcGVyLCBtZXNzYWdlKSB7XG4gIGlmIChpc0NvbnN0cnVjdGFibGUoRXJyb3JXcmFwcGVyKSkge1xuICAgIHJldHVybiBuZXcgRXJyb3JXcmFwcGVyKHtcbiAgICAgIG1lc3NhZ2VcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gRXJyb3JXcmFwcGVyKHtcbiAgICBtZXNzYWdlXG4gIH0pO1xufVxudmFyIEFzc2VydGlvbkVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBzdXBlcihvcHRpb25zLm1lc3NhZ2UpO1xuICAgIHRoaXMuY29kZSA9IFwiRVJSX0FTU0VSVElPTlwiO1xuICB9XG59O1xuZnVuY3Rpb24gYXNzZXJ0KHZhbHVlLCBtZXNzYWdlID0gXCJBc3NlcnRpb24gZmFpbGVkLlwiLCBFcnJvcldyYXBwZXIgPSBBc3NlcnRpb25FcnJvcikge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgaWYgKG1lc3NhZ2UgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgdGhyb3cgbWVzc2FnZTtcbiAgICB9XG4gICAgdGhyb3cgZ2V0RXJyb3IoRXJyb3JXcmFwcGVyLCBtZXNzYWdlKTtcbiAgfVxufVxuZnVuY3Rpb24gYXNzZXJ0U3RydWN0KHZhbHVlLCBzdHJ1Y3QsIGVycm9yUHJlZml4ID0gXCJBc3NlcnRpb24gZmFpbGVkXCIsIEVycm9yV3JhcHBlciA9IEFzc2VydGlvbkVycm9yKSB7XG4gIHRyeSB7XG4gICAgX3N1cGVyc3RydWN0LmFzc2VydC5jYWxsKHZvaWQgMCwgdmFsdWUsIHN0cnVjdCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgZ2V0RXJyb3IoXG4gICAgICBFcnJvcldyYXBwZXIsXG4gICAgICBgJHtlcnJvclByZWZpeH06ICR7Z2V0RXJyb3JNZXNzYWdlV2l0aG91dFRyYWlsaW5nUGVyaW9kKGVycm9yKX0uYFxuICAgICk7XG4gIH1cbn1cbmZ1bmN0aW9uIGFzc2VydEV4aGF1c3RpdmUoX29iamVjdCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgXCJJbnZhbGlkIGJyYW5jaCByZWFjaGVkLiBTaG91bGQgYmUgZGV0ZWN0ZWQgZHVyaW5nIGNvbXBpbGF0aW9uLlwiXG4gICk7XG59XG5cblxuXG5cblxuXG5leHBvcnRzLkFzc2VydGlvbkVycm9yID0gQXNzZXJ0aW9uRXJyb3I7IGV4cG9ydHMuYXNzZXJ0ID0gYXNzZXJ0OyBleHBvcnRzLmFzc2VydFN0cnVjdCA9IGFzc2VydFN0cnVjdDsgZXhwb3J0cy5hc3NlcnRFeGhhdXN0aXZlID0gYXNzZXJ0RXhoYXVzdGl2ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZaREhTT1VWLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-C6HGFEYL.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-C6HGFEYL.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));// src/promise.ts\nfunction createDeferredPromise({\n  suppressUnhandledRejection = false\n} = {}) {\n  let resolve;\n  let reject;\n  const promise = new Promise(\n    (innerResolve, innerReject) => {\n      resolve = innerResolve;\n      reject = innerReject;\n    }\n  );\n  if (suppressUnhandledRejection) {\n    promise.catch((_error) => {\n    });\n  }\n  return { promise, resolve, reject };\n}\n\n\n\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=chunk-C6HGFEYL.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstQzZIR0ZFWUwuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLENBQUM7QUFDekU7QUFDQTtBQUNBLEVBQUUsSUFBSTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVztBQUNYOzs7O0FBSUEsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay91dGlscy9kaXN0L2NodW5rLUM2SEdGRVlMLmpzPzAwMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6IHRydWV9KTsvLyBzcmMvcHJvbWlzZS50c1xuZnVuY3Rpb24gY3JlYXRlRGVmZXJyZWRQcm9taXNlKHtcbiAgc3VwcHJlc3NVbmhhbmRsZWRSZWplY3Rpb24gPSBmYWxzZVxufSA9IHt9KSB7XG4gIGxldCByZXNvbHZlO1xuICBsZXQgcmVqZWN0O1xuICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoXG4gICAgKGlubmVyUmVzb2x2ZSwgaW5uZXJSZWplY3QpID0+IHtcbiAgICAgIHJlc29sdmUgPSBpbm5lclJlc29sdmU7XG4gICAgICByZWplY3QgPSBpbm5lclJlamVjdDtcbiAgICB9XG4gICk7XG4gIGlmIChzdXBwcmVzc1VuaGFuZGxlZFJlamVjdGlvbikge1xuICAgIHByb21pc2UuY2F0Y2goKF9lcnJvcikgPT4ge1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB7IHByb21pc2UsIHJlc29sdmUsIHJlamVjdCB9O1xufVxuXG5cblxuZXhwb3J0cy5jcmVhdGVEZWZlcnJlZFByb21pc2UgPSBjcmVhdGVEZWZlcnJlZFByb21pc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1DNkhHRkVZTC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-C6HGFEYL.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-DHVKFDHQ.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-DHVKFDHQ.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\n\n\nvar _chunkQEPVHEP7js = __webpack_require__(/*! ./chunk-QEPVHEP7.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-QEPVHEP7.js\");\n\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n// src/coercers.ts\n\n\n\n\n\n\n\n\n\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nvar NumberLikeStruct = _superstruct.union.call(void 0, [_superstruct.number.call(void 0, ), _superstruct.bigint.call(void 0, ), _superstruct.string.call(void 0, ), _chunkQEPVHEP7js.StrictHexStruct]);\nvar NumberCoercer = _superstruct.coerce.call(void 0, _superstruct.number.call(void 0, ), NumberLikeStruct, Number);\nvar BigIntCoercer = _superstruct.coerce.call(void 0, _superstruct.bigint.call(void 0, ), NumberLikeStruct, BigInt);\nvar BytesLikeStruct = _superstruct.union.call(void 0, [_chunkQEPVHEP7js.StrictHexStruct, _superstruct.instance.call(void 0, Uint8Array)]);\nvar BytesCoercer = _superstruct.coerce.call(void 0, \n  _superstruct.instance.call(void 0, Uint8Array),\n  _superstruct.union.call(void 0, [_chunkQEPVHEP7js.StrictHexStruct]),\n  _chunkQEPVHEP7js.hexToBytes\n);\nvar HexCoercer = _superstruct.coerce.call(void 0, _chunkQEPVHEP7js.StrictHexStruct, _superstruct.instance.call(void 0, Uint8Array), _chunkQEPVHEP7js.bytesToHex);\nfunction createNumber(value) {\n  try {\n    const result = _superstruct.create.call(void 0, value, NumberCoercer);\n    _chunk6ZDHSOUVjs.assert.call(void 0, \n      Number.isFinite(result),\n      `Expected a number-like value, got \"${value}\".`\n    );\n    return result;\n  } catch (error) {\n    if (error instanceof _superstruct.StructError) {\n      throw new Error(`Expected a number-like value, got \"${value}\".`);\n    }\n    throw error;\n  }\n}\nfunction createBigInt(value) {\n  try {\n    return _superstruct.create.call(void 0, value, BigIntCoercer);\n  } catch (error) {\n    if (error instanceof _superstruct.StructError) {\n      throw new Error(\n        `Expected a number-like value, got \"${String(error.value)}\".`\n      );\n    }\n    throw error;\n  }\n}\nfunction createBytes(value) {\n  if (typeof value === \"string\" && value.toLowerCase() === \"0x\") {\n    return new Uint8Array();\n  }\n  try {\n    return _superstruct.create.call(void 0, value, BytesCoercer);\n  } catch (error) {\n    if (error instanceof _superstruct.StructError) {\n      throw new Error(\n        `Expected a bytes-like value, got \"${String(error.value)}\".`\n      );\n    }\n    throw error;\n  }\n}\nfunction createHex(value) {\n  if (value instanceof Uint8Array && value.length === 0 || typeof value === \"string\" && value.toLowerCase() === \"0x\") {\n    return \"0x\";\n  }\n  try {\n    return _superstruct.create.call(void 0, value, HexCoercer);\n  } catch (error) {\n    if (error instanceof _superstruct.StructError) {\n      throw new Error(\n        `Expected a bytes-like value, got \"${String(error.value)}\".`\n      );\n    }\n    throw error;\n  }\n}\n\n\n\n\n\n\nexports.createNumber = createNumber; exports.createBigInt = createBigInt; exports.createBytes = createBytes; exports.createHex = createHex;\n//# sourceMappingURL=chunk-DHVKFDHQ.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstREhWS0ZESFEuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDOzs7O0FBSXhFLHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjs7O0FBR3BELHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjs7QUFFcEQ7Ozs7Ozs7Ozs7QUFVQSxtQkFBbUIsbUJBQU8sQ0FBQyxvRUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsTUFBTTtBQUNsRDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsNERBQTRELE1BQU07QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLDhDQUE4QyxvQkFBb0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsNkNBQTZDLG9CQUFvQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSw2Q0FBNkMsb0JBQW9CO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQSxvQkFBb0IsaUJBQWlCLG9CQUFvQixpQkFBaUIsbUJBQW1CLGdCQUFnQixpQkFBaUI7QUFDOUgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstREhWS0ZESFEuanM/OGNiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogdHJ1ZX0pO1xuXG5cblxudmFyIF9jaHVua1FFUFZIRVA3anMgPSByZXF1aXJlKCcuL2NodW5rLVFFUFZIRVA3LmpzJyk7XG5cblxudmFyIF9jaHVuazZaREhTT1VWanMgPSByZXF1aXJlKCcuL2NodW5rLTZaREhTT1VWLmpzJyk7XG5cbi8vIHNyYy9jb2VyY2Vycy50c1xuXG5cblxuXG5cblxuXG5cblxudmFyIF9zdXBlcnN0cnVjdCA9IHJlcXVpcmUoJ3N1cGVyc3RydWN0Jyk7XG52YXIgTnVtYmVyTGlrZVN0cnVjdCA9IF9zdXBlcnN0cnVjdC51bmlvbi5jYWxsKHZvaWQgMCwgW19zdXBlcnN0cnVjdC5udW1iZXIuY2FsbCh2b2lkIDAsICksIF9zdXBlcnN0cnVjdC5iaWdpbnQuY2FsbCh2b2lkIDAsICksIF9zdXBlcnN0cnVjdC5zdHJpbmcuY2FsbCh2b2lkIDAsICksIF9jaHVua1FFUFZIRVA3anMuU3RyaWN0SGV4U3RydWN0XSk7XG52YXIgTnVtYmVyQ29lcmNlciA9IF9zdXBlcnN0cnVjdC5jb2VyY2UuY2FsbCh2b2lkIDAsIF9zdXBlcnN0cnVjdC5udW1iZXIuY2FsbCh2b2lkIDAsICksIE51bWJlckxpa2VTdHJ1Y3QsIE51bWJlcik7XG52YXIgQmlnSW50Q29lcmNlciA9IF9zdXBlcnN0cnVjdC5jb2VyY2UuY2FsbCh2b2lkIDAsIF9zdXBlcnN0cnVjdC5iaWdpbnQuY2FsbCh2b2lkIDAsICksIE51bWJlckxpa2VTdHJ1Y3QsIEJpZ0ludCk7XG52YXIgQnl0ZXNMaWtlU3RydWN0ID0gX3N1cGVyc3RydWN0LnVuaW9uLmNhbGwodm9pZCAwLCBbX2NodW5rUUVQVkhFUDdqcy5TdHJpY3RIZXhTdHJ1Y3QsIF9zdXBlcnN0cnVjdC5pbnN0YW5jZS5jYWxsKHZvaWQgMCwgVWludDhBcnJheSldKTtcbnZhciBCeXRlc0NvZXJjZXIgPSBfc3VwZXJzdHJ1Y3QuY29lcmNlLmNhbGwodm9pZCAwLCBcbiAgX3N1cGVyc3RydWN0Lmluc3RhbmNlLmNhbGwodm9pZCAwLCBVaW50OEFycmF5KSxcbiAgX3N1cGVyc3RydWN0LnVuaW9uLmNhbGwodm9pZCAwLCBbX2NodW5rUUVQVkhFUDdqcy5TdHJpY3RIZXhTdHJ1Y3RdKSxcbiAgX2NodW5rUUVQVkhFUDdqcy5oZXhUb0J5dGVzXG4pO1xudmFyIEhleENvZXJjZXIgPSBfc3VwZXJzdHJ1Y3QuY29lcmNlLmNhbGwodm9pZCAwLCBfY2h1bmtRRVBWSEVQN2pzLlN0cmljdEhleFN0cnVjdCwgX3N1cGVyc3RydWN0Lmluc3RhbmNlLmNhbGwodm9pZCAwLCBVaW50OEFycmF5KSwgX2NodW5rUUVQVkhFUDdqcy5ieXRlc1RvSGV4KTtcbmZ1bmN0aW9uIGNyZWF0ZU51bWJlcih2YWx1ZSkge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3VsdCA9IF9zdXBlcnN0cnVjdC5jcmVhdGUuY2FsbCh2b2lkIDAsIHZhbHVlLCBOdW1iZXJDb2VyY2VyKTtcbiAgICBfY2h1bms2WkRIU09VVmpzLmFzc2VydC5jYWxsKHZvaWQgMCwgXG4gICAgICBOdW1iZXIuaXNGaW5pdGUocmVzdWx0KSxcbiAgICAgIGBFeHBlY3RlZCBhIG51bWJlci1saWtlIHZhbHVlLCBnb3QgXCIke3ZhbHVlfVwiLmBcbiAgICApO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgX3N1cGVyc3RydWN0LlN0cnVjdEVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGEgbnVtYmVyLWxpa2UgdmFsdWUsIGdvdCBcIiR7dmFsdWV9XCIuYCk7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVCaWdJbnQodmFsdWUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gX3N1cGVyc3RydWN0LmNyZWF0ZS5jYWxsKHZvaWQgMCwgdmFsdWUsIEJpZ0ludENvZXJjZXIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIF9zdXBlcnN0cnVjdC5TdHJ1Y3RFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgYSBudW1iZXItbGlrZSB2YWx1ZSwgZ290IFwiJHtTdHJpbmcoZXJyb3IudmFsdWUpfVwiLmBcbiAgICAgICk7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVCeXRlcyh2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09IFwiMHhcIikge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheSgpO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIF9zdXBlcnN0cnVjdC5jcmVhdGUuY2FsbCh2b2lkIDAsIHZhbHVlLCBCeXRlc0NvZXJjZXIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIF9zdXBlcnN0cnVjdC5TdHJ1Y3RFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgYSBieXRlcy1saWtlIHZhbHVlLCBnb3QgXCIke1N0cmluZyhlcnJvci52YWx1ZSl9XCIuYFxuICAgICAgKTtcbiAgICB9XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZUhleCh2YWx1ZSkge1xuICBpZiAodmFsdWUgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIHZhbHVlLmxlbmd0aCA9PT0gMCB8fCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gXCIweFwiKSB7XG4gICAgcmV0dXJuIFwiMHhcIjtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBfc3VwZXJzdHJ1Y3QuY3JlYXRlLmNhbGwodm9pZCAwLCB2YWx1ZSwgSGV4Q29lcmNlcik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgX3N1cGVyc3RydWN0LlN0cnVjdEVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBFeHBlY3RlZCBhIGJ5dGVzLWxpa2UgdmFsdWUsIGdvdCBcIiR7U3RyaW5nKGVycm9yLnZhbHVlKX1cIi5gXG4gICAgICApO1xuICAgIH1cbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5cblxuXG5cblxuZXhwb3J0cy5jcmVhdGVOdW1iZXIgPSBjcmVhdGVOdW1iZXI7IGV4cG9ydHMuY3JlYXRlQmlnSW50ID0gY3JlYXRlQmlnSW50OyBleHBvcnRzLmNyZWF0ZUJ5dGVzID0gY3JlYXRlQnl0ZXM7IGV4cG9ydHMuY3JlYXRlSGV4ID0gY3JlYXRlSGV4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstREhWS0ZESFEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-DHVKFDHQ.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-E4C7EW4R.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-E4C7EW4R.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\nvar _chunk6NZW4WK4js = __webpack_require__(/*! ./chunk-6NZW4WK4.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6NZW4WK4.js\");\n\n// src/checksum.ts\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nvar ChecksumStruct = _superstruct.size.call(void 0, \n  _chunk6NZW4WK4js.base64.call(void 0, _superstruct.string.call(void 0, ), { paddingRequired: true }),\n  44,\n  44\n);\n\n\n\nexports.ChecksumStruct = ChecksumStruct;\n//# sourceMappingURL=chunk-E4C7EW4R.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstRTRDN0VXNFIuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDOztBQUV4RSx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7O0FBRXBEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsb0VBQWE7QUFDeEM7QUFDQSw2RUFBNkUsdUJBQXVCO0FBQ3BHO0FBQ0E7QUFDQTs7OztBQUlBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay1FNEM3RVc0Ui5qcz81OThmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7XG5cbnZhciBfY2h1bms2TlpXNFdLNGpzID0gcmVxdWlyZSgnLi9jaHVuay02TlpXNFdLNC5qcycpO1xuXG4vLyBzcmMvY2hlY2tzdW0udHNcbnZhciBfc3VwZXJzdHJ1Y3QgPSByZXF1aXJlKCdzdXBlcnN0cnVjdCcpO1xudmFyIENoZWNrc3VtU3RydWN0ID0gX3N1cGVyc3RydWN0LnNpemUuY2FsbCh2b2lkIDAsIFxuICBfY2h1bms2TlpXNFdLNGpzLmJhc2U2NC5jYWxsKHZvaWQgMCwgX3N1cGVyc3RydWN0LnN0cmluZy5jYWxsKHZvaWQgMCwgKSwgeyBwYWRkaW5nUmVxdWlyZWQ6IHRydWUgfSksXG4gIDQ0LFxuICA0NFxuKTtcblxuXG5cbmV4cG9ydHMuQ2hlY2tzdW1TdHJ1Y3QgPSBDaGVja3N1bVN0cnVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUU0QzdFVzRSLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-E4C7EW4R.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-EQMZL4XU.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-EQMZL4XU.js ***!
  \*************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=chunk-EQMZL4XU.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstRVFNWkw0WFUuanMiLCJtYXBwaW5ncyI6IkFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstRVFNWkw0WFUuanM/OWM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjsvLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1FUU1aTDRYVS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-EQMZL4XU.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-IZC266HS.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-IZC266HS.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\n\nvar _chunkQVEKZRZ2js = __webpack_require__(/*! ./chunk-QVEKZRZ2.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-QVEKZRZ2.js\");\n\n// src/errors.ts\nvar _ponycause = __webpack_require__(/*! pony-cause */ \"(ssr)/./node_modules/pony-cause/index.js\");\nfunction isError(error) {\n  return error instanceof Error || _chunkQVEKZRZ2js.isObject.call(void 0, error) && error.constructor.name === \"Error\";\n}\nfunction isErrorWithCode(error) {\n  return typeof error === \"object\" && error !== null && \"code\" in error;\n}\nfunction isErrorWithMessage(error) {\n  return typeof error === \"object\" && error !== null && \"message\" in error;\n}\nfunction isErrorWithStack(error) {\n  return typeof error === \"object\" && error !== null && \"stack\" in error;\n}\nfunction getErrorMessage(error) {\n  if (isErrorWithMessage(error) && typeof error.message === \"string\") {\n    return error.message;\n  }\n  if (_chunkQVEKZRZ2js.isNullOrUndefined.call(void 0, error)) {\n    return \"\";\n  }\n  return String(error);\n}\nfunction wrapError(originalError, message) {\n  if (isError(originalError)) {\n    let error;\n    if (Error.length === 2) {\n      error = new Error(message, { cause: originalError });\n    } else {\n      error = new (0, _ponycause.ErrorWithCause)(message, { cause: originalError });\n    }\n    if (isErrorWithCode(originalError)) {\n      error.code = originalError.code;\n    }\n    return error;\n  }\n  if (message.length > 0) {\n    return new Error(`${String(originalError)}: ${message}`);\n  }\n  return new Error(String(originalError));\n}\n\n\n\n\n\n\n\nexports.isErrorWithCode = isErrorWithCode; exports.isErrorWithMessage = isErrorWithMessage; exports.isErrorWithStack = isErrorWithStack; exports.getErrorMessage = getErrorMessage; exports.wrapError = wrapError;\n//# sourceMappingURL=chunk-IZC266HS.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstSVpDMjY2SFMuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDOzs7QUFHeEUsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQXFCOztBQUVwRDtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLDREQUFZO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHNCQUFzQjtBQUN6RCxNQUFNO0FBQ04sNERBQTRELHNCQUFzQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzQkFBc0IsSUFBSSxRQUFRO0FBQzFEO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQSx1QkFBdUIsb0JBQW9CLDBCQUEwQix1QkFBdUIsd0JBQXdCLHFCQUFxQix1QkFBdUIsb0JBQW9CLGlCQUFpQjtBQUNyTSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay1JWkMyNjZIUy5qcz82MzMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7XG5cblxudmFyIF9jaHVua1FWRUtaUloyanMgPSByZXF1aXJlKCcuL2NodW5rLVFWRUtaUloyLmpzJyk7XG5cbi8vIHNyYy9lcnJvcnMudHNcbnZhciBfcG9ueWNhdXNlID0gcmVxdWlyZSgncG9ueS1jYXVzZScpO1xuZnVuY3Rpb24gaXNFcnJvcihlcnJvcikge1xuICByZXR1cm4gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciB8fCBfY2h1bmtRVkVLWlJaMmpzLmlzT2JqZWN0LmNhbGwodm9pZCAwLCBlcnJvcikgJiYgZXJyb3IuY29uc3RydWN0b3IubmFtZSA9PT0gXCJFcnJvclwiO1xufVxuZnVuY3Rpb24gaXNFcnJvcldpdGhDb2RlKGVycm9yKSB7XG4gIHJldHVybiB0eXBlb2YgZXJyb3IgPT09IFwib2JqZWN0XCIgJiYgZXJyb3IgIT09IG51bGwgJiYgXCJjb2RlXCIgaW4gZXJyb3I7XG59XG5mdW5jdGlvbiBpc0Vycm9yV2l0aE1lc3NhZ2UoZXJyb3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBlcnJvciA9PT0gXCJvYmplY3RcIiAmJiBlcnJvciAhPT0gbnVsbCAmJiBcIm1lc3NhZ2VcIiBpbiBlcnJvcjtcbn1cbmZ1bmN0aW9uIGlzRXJyb3JXaXRoU3RhY2soZXJyb3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBlcnJvciA9PT0gXCJvYmplY3RcIiAmJiBlcnJvciAhPT0gbnVsbCAmJiBcInN0YWNrXCIgaW4gZXJyb3I7XG59XG5mdW5jdGlvbiBnZXRFcnJvck1lc3NhZ2UoZXJyb3IpIHtcbiAgaWYgKGlzRXJyb3JXaXRoTWVzc2FnZShlcnJvcikgJiYgdHlwZW9mIGVycm9yLm1lc3NhZ2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gZXJyb3IubWVzc2FnZTtcbiAgfVxuICBpZiAoX2NodW5rUVZFS1pSWjJqcy5pc051bGxPclVuZGVmaW5lZC5jYWxsKHZvaWQgMCwgZXJyb3IpKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyhlcnJvcik7XG59XG5mdW5jdGlvbiB3cmFwRXJyb3Iob3JpZ2luYWxFcnJvciwgbWVzc2FnZSkge1xuICBpZiAoaXNFcnJvcihvcmlnaW5hbEVycm9yKSkge1xuICAgIGxldCBlcnJvcjtcbiAgICBpZiAoRXJyb3IubGVuZ3RoID09PSAyKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlLCB7IGNhdXNlOiBvcmlnaW5hbEVycm9yIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvciA9IG5ldyAoMCwgX3BvbnljYXVzZS5FcnJvcldpdGhDYXVzZSkobWVzc2FnZSwgeyBjYXVzZTogb3JpZ2luYWxFcnJvciB9KTtcbiAgICB9XG4gICAgaWYgKGlzRXJyb3JXaXRoQ29kZShvcmlnaW5hbEVycm9yKSkge1xuICAgICAgZXJyb3IuY29kZSA9IG9yaWdpbmFsRXJyb3IuY29kZTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yO1xuICB9XG4gIGlmIChtZXNzYWdlLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKGAke1N0cmluZyhvcmlnaW5hbEVycm9yKX06ICR7bWVzc2FnZX1gKTtcbiAgfVxuICByZXR1cm4gbmV3IEVycm9yKFN0cmluZyhvcmlnaW5hbEVycm9yKSk7XG59XG5cblxuXG5cblxuXG5cbmV4cG9ydHMuaXNFcnJvcldpdGhDb2RlID0gaXNFcnJvcldpdGhDb2RlOyBleHBvcnRzLmlzRXJyb3JXaXRoTWVzc2FnZSA9IGlzRXJyb3JXaXRoTWVzc2FnZTsgZXhwb3J0cy5pc0Vycm9yV2l0aFN0YWNrID0gaXNFcnJvcldpdGhTdGFjazsgZXhwb3J0cy5nZXRFcnJvck1lc3NhZ2UgPSBnZXRFcnJvck1lc3NhZ2U7IGV4cG9ydHMud3JhcEVycm9yID0gd3JhcEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstSVpDMjY2SFMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-IZC266HS.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-LC2CRSWD.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-LC2CRSWD.js ***!
  \*************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=chunk-LC2CRSWD.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstTEMyQ1JTV0QuanMiLCJtYXBwaW5ncyI6IkFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstTEMyQ1JTV0QuanM/OWNlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjsvLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1MQzJDUlNXRC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-LC2CRSWD.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-OLLG4H35.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-OLLG4H35.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n\nvar _chunkQVEKZRZ2js = __webpack_require__(/*! ./chunk-QVEKZRZ2.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-QVEKZRZ2.js\");\n\n// src/json.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nvar object = (schema) => (\n  // The type is slightly different from a regular object struct, because we\n  // want to make properties with `undefined` in their type optional, but not\n  // `undefined` itself. This means that we need a type cast.\n  _superstruct.object.call(void 0, schema)\n);\nfunction hasOptional({ path, branch }) {\n  const field = path[path.length - 1];\n  return _chunkQVEKZRZ2js.hasProperty.call(void 0, branch[branch.length - 2], field);\n}\nfunction exactOptional(struct) {\n  return new (0, _superstruct.Struct)({\n    ...struct,\n    type: `optional ${struct.type}`,\n    validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n    refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context)\n  });\n}\nvar finiteNumber = () => _superstruct.define.call(void 0, \"finite number\", (value) => {\n  return _superstruct.is.call(void 0, value, _superstruct.number.call(void 0, )) && Number.isFinite(value);\n});\nvar UnsafeJsonStruct = _superstruct.union.call(void 0, [\n  _superstruct.literal.call(void 0, null),\n  _superstruct.boolean.call(void 0, ),\n  finiteNumber(),\n  _superstruct.string.call(void 0, ),\n  _superstruct.array.call(void 0, _superstruct.lazy.call(void 0, () => UnsafeJsonStruct)),\n  _superstruct.record.call(void 0, \n    _superstruct.string.call(void 0, ),\n    _superstruct.lazy.call(void 0, () => UnsafeJsonStruct)\n  )\n]);\nvar JsonStruct = _superstruct.coerce.call(void 0, UnsafeJsonStruct, _superstruct.any.call(void 0, ), (value) => {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, value, UnsafeJsonStruct);\n  return JSON.parse(\n    JSON.stringify(value, (propKey, propValue) => {\n      if (propKey === \"__proto__\" || propKey === \"constructor\") {\n        return void 0;\n      }\n      return propValue;\n    })\n  );\n});\nfunction isValidJson(value) {\n  try {\n    getSafeJson(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getSafeJson(value) {\n  return _superstruct.create.call(void 0, value, JsonStruct);\n}\nfunction getJsonSize(value) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, value, JsonStruct, \"Invalid JSON value\");\n  const json = JSON.stringify(value);\n  return new TextEncoder().encode(json).byteLength;\n}\nvar jsonrpc2 = \"2.0\";\nvar JsonRpcVersionStruct = _superstruct.literal.call(void 0, jsonrpc2);\nvar JsonRpcIdStruct = _superstruct.nullable.call(void 0, _superstruct.union.call(void 0, [_superstruct.number.call(void 0, ), _superstruct.string.call(void 0, )]));\nvar JsonRpcErrorStruct = object({\n  code: _superstruct.integer.call(void 0, ),\n  message: _superstruct.string.call(void 0, ),\n  data: exactOptional(JsonStruct),\n  stack: exactOptional(_superstruct.string.call(void 0, ))\n});\nvar JsonRpcParamsStruct = _superstruct.union.call(void 0, [_superstruct.record.call(void 0, _superstruct.string.call(void 0, ), JsonStruct), _superstruct.array.call(void 0, JsonStruct)]);\nvar JsonRpcRequestStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  method: _superstruct.string.call(void 0, ),\n  params: exactOptional(JsonRpcParamsStruct)\n});\nvar JsonRpcNotificationStruct = object({\n  jsonrpc: JsonRpcVersionStruct,\n  method: _superstruct.string.call(void 0, ),\n  params: exactOptional(JsonRpcParamsStruct)\n});\nfunction isJsonRpcNotification(value) {\n  return _superstruct.is.call(void 0, value, JsonRpcNotificationStruct);\n}\nfunction assertIsJsonRpcNotification(value, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    value,\n    JsonRpcNotificationStruct,\n    \"Invalid JSON-RPC notification\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcRequest(value) {\n  return _superstruct.is.call(void 0, value, JsonRpcRequestStruct);\n}\nfunction assertIsJsonRpcRequest(value, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    value,\n    JsonRpcRequestStruct,\n    \"Invalid JSON-RPC request\",\n    ErrorWrapper\n  );\n}\nvar PendingJsonRpcResponseStruct = _superstruct.object.call(void 0, {\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: _superstruct.optional.call(void 0, _superstruct.unknown.call(void 0, )),\n  error: _superstruct.optional.call(void 0, JsonRpcErrorStruct)\n});\nvar JsonRpcSuccessStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: JsonStruct\n});\nvar JsonRpcFailureStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  error: JsonRpcErrorStruct\n});\nvar JsonRpcResponseStruct = _superstruct.union.call(void 0, [\n  JsonRpcSuccessStruct,\n  JsonRpcFailureStruct\n]);\nfunction isPendingJsonRpcResponse(response) {\n  return _superstruct.is.call(void 0, response, PendingJsonRpcResponseStruct);\n}\nfunction assertIsPendingJsonRpcResponse(response, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    response,\n    PendingJsonRpcResponseStruct,\n    \"Invalid pending JSON-RPC response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcResponse(response) {\n  return _superstruct.is.call(void 0, response, JsonRpcResponseStruct);\n}\nfunction assertIsJsonRpcResponse(value, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    value,\n    JsonRpcResponseStruct,\n    \"Invalid JSON-RPC response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcSuccess(value) {\n  return _superstruct.is.call(void 0, value, JsonRpcSuccessStruct);\n}\nfunction assertIsJsonRpcSuccess(value, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    value,\n    JsonRpcSuccessStruct,\n    \"Invalid JSON-RPC success response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcFailure(value) {\n  return _superstruct.is.call(void 0, value, JsonRpcFailureStruct);\n}\nfunction assertIsJsonRpcFailure(value, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    value,\n    JsonRpcFailureStruct,\n    \"Invalid JSON-RPC failure response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcError(value) {\n  return _superstruct.is.call(void 0, value, JsonRpcErrorStruct);\n}\nfunction assertIsJsonRpcError(value, ErrorWrapper) {\n  _chunk6ZDHSOUVjs.assertStruct.call(void 0, \n    value,\n    JsonRpcErrorStruct,\n    \"Invalid JSON-RPC error\",\n    ErrorWrapper\n  );\n}\nfunction getJsonRpcIdValidator(options) {\n  const { permitEmptyString, permitFractions, permitNull } = {\n    permitEmptyString: true,\n    permitFractions: false,\n    permitNull: true,\n    ...options\n  };\n  const isValidJsonRpcId = (id) => {\n    return Boolean(\n      typeof id === \"number\" && (permitFractions || Number.isInteger(id)) || typeof id === \"string\" && (permitEmptyString || id.length > 0) || permitNull && id === null\n    );\n  };\n  return isValidJsonRpcId;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.object = object; exports.exactOptional = exactOptional; exports.UnsafeJsonStruct = UnsafeJsonStruct; exports.JsonStruct = JsonStruct; exports.isValidJson = isValidJson; exports.getSafeJson = getSafeJson; exports.getJsonSize = getJsonSize; exports.jsonrpc2 = jsonrpc2; exports.JsonRpcVersionStruct = JsonRpcVersionStruct; exports.JsonRpcIdStruct = JsonRpcIdStruct; exports.JsonRpcErrorStruct = JsonRpcErrorStruct; exports.JsonRpcParamsStruct = JsonRpcParamsStruct; exports.JsonRpcRequestStruct = JsonRpcRequestStruct; exports.JsonRpcNotificationStruct = JsonRpcNotificationStruct; exports.isJsonRpcNotification = isJsonRpcNotification; exports.assertIsJsonRpcNotification = assertIsJsonRpcNotification; exports.isJsonRpcRequest = isJsonRpcRequest; exports.assertIsJsonRpcRequest = assertIsJsonRpcRequest; exports.PendingJsonRpcResponseStruct = PendingJsonRpcResponseStruct; exports.JsonRpcSuccessStruct = JsonRpcSuccessStruct; exports.JsonRpcFailureStruct = JsonRpcFailureStruct; exports.JsonRpcResponseStruct = JsonRpcResponseStruct; exports.isPendingJsonRpcResponse = isPendingJsonRpcResponse; exports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse; exports.isJsonRpcResponse = isJsonRpcResponse; exports.assertIsJsonRpcResponse = assertIsJsonRpcResponse; exports.isJsonRpcSuccess = isJsonRpcSuccess; exports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess; exports.isJsonRpcFailure = isJsonRpcFailure; exports.assertIsJsonRpcFailure = assertIsJsonRpcFailure; exports.isJsonRpcError = isJsonRpcError; exports.assertIsJsonRpcError = assertIsJsonRpcError; exports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=chunk-OLLG4H35.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-OLLG4H35.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-QEPVHEP7.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-QEPVHEP7.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true})); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n// src/hex.ts\nvar _sha3 = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/sha3.js\");\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\n\n// src/bytes.ts\nvar _base = __webpack_require__(/*! @scure/base */ \"(ssr)/./node_modules/@scure/base/lib/index.js\");\nvar HEX_MINIMUM_NUMBER_CHARACTER = 48;\nvar HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nvar HEX_CHARACTER_OFFSET = 87;\nfunction getPrecomputedHexValuesBuilder() {\n  const lookupTable = [];\n  return () => {\n    if (lookupTable.length === 0) {\n      for (let i = 0; i < 256; i++) {\n        lookupTable.push(i.toString(16).padStart(2, \"0\"));\n      }\n    }\n    return lookupTable;\n  };\n}\nvar getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\nfunction isBytes(value) {\n  return value instanceof Uint8Array;\n}\nfunction assertIsBytes(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, isBytes(value), \"Value must be a Uint8Array.\");\n}\nfunction bytesToHex(bytes) {\n  assertIsBytes(bytes);\n  if (bytes.length === 0) {\n    return \"0x\";\n  }\n  const lookupTable = getPrecomputedHexValues();\n  const hexadecimal = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    hexadecimal[i] = lookupTable[bytes[i]];\n  }\n  return add0x(hexadecimal.join(\"\"));\n}\nfunction bytesToBigInt(bytes) {\n  assertIsBytes(bytes);\n  const hexadecimal = bytesToHex(bytes);\n  return BigInt(hexadecimal);\n}\nfunction bytesToSignedBigInt(bytes) {\n  assertIsBytes(bytes);\n  let value = BigInt(0);\n  for (const byte of bytes) {\n    value = (value << BigInt(8)) + BigInt(byte);\n  }\n  return BigInt.asIntN(bytes.length * 8, value);\n}\nfunction bytesToNumber(bytes) {\n  assertIsBytes(bytes);\n  const bigint = bytesToBigInt(bytes);\n  _chunk6ZDHSOUVjs.assert.call(void 0, \n    bigint <= BigInt(Number.MAX_SAFE_INTEGER),\n    \"Number is not a safe integer. Use `bytesToBigInt` instead.\"\n  );\n  return Number(bigint);\n}\nfunction bytesToString(bytes) {\n  assertIsBytes(bytes);\n  return new TextDecoder().decode(bytes);\n}\nfunction bytesToBase64(bytes) {\n  assertIsBytes(bytes);\n  return _base.base64.encode(bytes);\n}\nfunction hexToBytes(value) {\n  if (_optionalChain([value, 'optionalAccess', _ => _.toLowerCase, 'optionalCall', _2 => _2()]) === \"0x\") {\n    return new Uint8Array();\n  }\n  assertIsHexString(value);\n  const strippedValue = remove0x(value).toLowerCase();\n  const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n  const bytes = new Uint8Array(normalizedValue.length / 2);\n  for (let i = 0; i < bytes.length; i++) {\n    const c1 = normalizedValue.charCodeAt(i * 2);\n    const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n    const n1 = c1 - (c1 < HEX_MAXIMUM_NUMBER_CHARACTER ? HEX_MINIMUM_NUMBER_CHARACTER : HEX_CHARACTER_OFFSET);\n    const n2 = c2 - (c2 < HEX_MAXIMUM_NUMBER_CHARACTER ? HEX_MINIMUM_NUMBER_CHARACTER : HEX_CHARACTER_OFFSET);\n    bytes[i] = n1 * 16 + n2;\n  }\n  return bytes;\n}\nfunction bigIntToBytes(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"bigint\", \"Value must be a bigint.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, value >= BigInt(0), \"Value must be a non-negative bigint.\");\n  const hexadecimal = value.toString(16);\n  return hexToBytes(hexadecimal);\n}\nfunction bigIntFits(value, bytes) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, bytes > 0);\n  const mask = value >> BigInt(31);\n  return !((~value & mask) + (value & ~mask) >> BigInt(bytes * 8 + ~0));\n}\nfunction signedBigIntToBytes(value, byteLength) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"bigint\", \"Value must be a bigint.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof byteLength === \"number\", \"Byte length must be a number.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, byteLength > 0, \"Byte length must be greater than 0.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, \n    bigIntFits(value, byteLength),\n    \"Byte length is too small to represent the given value.\"\n  );\n  let numberValue = value;\n  const bytes = new Uint8Array(byteLength);\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = Number(BigInt.asUintN(8, numberValue));\n    numberValue >>= BigInt(8);\n  }\n  return bytes.reverse();\n}\nfunction numberToBytes(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"number\", \"Value must be a number.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, value >= 0, \"Value must be a non-negative number.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, \n    Number.isSafeInteger(value),\n    \"Value is not a safe integer. Use `bigIntToBytes` instead.\"\n  );\n  const hexadecimal = value.toString(16);\n  return hexToBytes(hexadecimal);\n}\nfunction stringToBytes(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"string\", \"Value must be a string.\");\n  return new TextEncoder().encode(value);\n}\nfunction base64ToBytes(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"string\", \"Value must be a string.\");\n  return _base.base64.decode(value);\n}\nfunction valueToBytes(value) {\n  if (typeof value === \"bigint\") {\n    return bigIntToBytes(value);\n  }\n  if (typeof value === \"number\") {\n    return numberToBytes(value);\n  }\n  if (typeof value === \"string\") {\n    if (value.startsWith(\"0x\")) {\n      return hexToBytes(value);\n    }\n    return stringToBytes(value);\n  }\n  if (isBytes(value)) {\n    return value;\n  }\n  throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nfunction concatBytes(values) {\n  const normalizedValues = new Array(values.length);\n  let byteLength = 0;\n  for (let i = 0; i < values.length; i++) {\n    const value = valueToBytes(values[i]);\n    normalizedValues[i] = value;\n    byteLength += value.length;\n  }\n  const bytes = new Uint8Array(byteLength);\n  for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n    bytes.set(normalizedValues[i], offset);\n    offset += normalizedValues[i].length;\n  }\n  return bytes;\n}\nfunction createDataView(bytes) {\n  if (typeof Buffer !== \"undefined\" && bytes instanceof Buffer) {\n    const buffer = bytes.buffer.slice(\n      bytes.byteOffset,\n      bytes.byteOffset + bytes.byteLength\n    );\n    return new DataView(buffer);\n  }\n  return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\n\n// src/hex.ts\nvar HexStruct = _superstruct.pattern.call(void 0, _superstruct.string.call(void 0, ), /^(?:0x)?[0-9a-f]+$/iu);\nvar StrictHexStruct = _superstruct.pattern.call(void 0, _superstruct.string.call(void 0, ), /^0x[0-9a-f]+$/iu);\nvar HexAddressStruct = _superstruct.pattern.call(void 0, \n  _superstruct.string.call(void 0, ),\n  /^0x[0-9a-f]{40}$/u\n);\nvar HexChecksumAddressStruct = _superstruct.pattern.call(void 0, \n  _superstruct.string.call(void 0, ),\n  /^0x[0-9a-fA-F]{40}$/u\n);\nfunction isHexString(value) {\n  return _superstruct.is.call(void 0, value, HexStruct);\n}\nfunction isStrictHexString(value) {\n  return _superstruct.is.call(void 0, value, StrictHexStruct);\n}\nfunction assertIsHexString(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, isHexString(value), \"Value must be a hexadecimal string.\");\n}\nfunction assertIsStrictHexString(value) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, \n    isStrictHexString(value),\n    'Value must be a hexadecimal string, starting with \"0x\".'\n  );\n}\nfunction isValidHexAddress(possibleAddress) {\n  return _superstruct.is.call(void 0, possibleAddress, HexAddressStruct) || isValidChecksumAddress(possibleAddress);\n}\nfunction getChecksumAddress(address) {\n  _chunk6ZDHSOUVjs.assert.call(void 0, _superstruct.is.call(void 0, address, HexChecksumAddressStruct), \"Invalid hex address.\");\n  const unPrefixed = remove0x(address.toLowerCase());\n  const unPrefixedHash = remove0x(bytesToHex(_sha3.keccak_256.call(void 0, unPrefixed)));\n  return `0x${unPrefixed.split(\"\").map((character, nibbleIndex) => {\n    const hashCharacter = unPrefixedHash[nibbleIndex];\n    _chunk6ZDHSOUVjs.assert.call(void 0, _superstruct.is.call(void 0, hashCharacter, _superstruct.string.call(void 0, )), \"Hash shorter than address.\");\n    return parseInt(hashCharacter, 16) > 7 ? character.toUpperCase() : character;\n  }).join(\"\")}`;\n}\nfunction isValidChecksumAddress(possibleChecksum) {\n  if (!_superstruct.is.call(void 0, possibleChecksum, HexChecksumAddressStruct)) {\n    return false;\n  }\n  return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nfunction add0x(hexadecimal) {\n  if (hexadecimal.startsWith(\"0x\")) {\n    return hexadecimal;\n  }\n  if (hexadecimal.startsWith(\"0X\")) {\n    return `0x${hexadecimal.substring(2)}`;\n  }\n  return `0x${hexadecimal}`;\n}\nfunction remove0x(hexadecimal) {\n  if (hexadecimal.startsWith(\"0x\") || hexadecimal.startsWith(\"0X\")) {\n    return hexadecimal.substring(2);\n  }\n  return hexadecimal;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.HexStruct = HexStruct; exports.StrictHexStruct = StrictHexStruct; exports.HexAddressStruct = HexAddressStruct; exports.HexChecksumAddressStruct = HexChecksumAddressStruct; exports.isHexString = isHexString; exports.isStrictHexString = isStrictHexString; exports.assertIsHexString = assertIsHexString; exports.assertIsStrictHexString = assertIsStrictHexString; exports.isValidHexAddress = isValidHexAddress; exports.getChecksumAddress = getChecksumAddress; exports.isValidChecksumAddress = isValidChecksumAddress; exports.add0x = add0x; exports.remove0x = remove0x; exports.isBytes = isBytes; exports.assertIsBytes = assertIsBytes; exports.bytesToHex = bytesToHex; exports.bytesToBigInt = bytesToBigInt; exports.bytesToSignedBigInt = bytesToSignedBigInt; exports.bytesToNumber = bytesToNumber; exports.bytesToString = bytesToString; exports.bytesToBase64 = bytesToBase64; exports.hexToBytes = hexToBytes; exports.bigIntToBytes = bigIntToBytes; exports.signedBigIntToBytes = signedBigIntToBytes; exports.numberToBytes = numberToBytes; exports.stringToBytes = stringToBytes; exports.base64ToBytes = base64ToBytes; exports.valueToBytes = valueToBytes; exports.concatBytes = concatBytes; exports.createDataView = createDataView;\n//# sourceMappingURL=chunk-QEPVHEP7.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-QEPVHEP7.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-QVEKZRZ2.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-QVEKZRZ2.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true})); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }// src/misc.ts\nfunction isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}\nfunction isNullOrUndefined(value) {\n  return value === null || value === void 0;\n}\nfunction isObject(value) {\n  return Boolean(value) && typeof value === \"object\" && !Array.isArray(value);\n}\nvar hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nfunction getKnownPropertyNames(object) {\n  return Object.getOwnPropertyNames(object);\n}\nvar JsonSize = /* @__PURE__ */ ((JsonSize2) => {\n  JsonSize2[JsonSize2[\"Null\"] = 4] = \"Null\";\n  JsonSize2[JsonSize2[\"Comma\"] = 1] = \"Comma\";\n  JsonSize2[JsonSize2[\"Wrapper\"] = 1] = \"Wrapper\";\n  JsonSize2[JsonSize2[\"True\"] = 4] = \"True\";\n  JsonSize2[JsonSize2[\"False\"] = 5] = \"False\";\n  JsonSize2[JsonSize2[\"Quote\"] = 1] = \"Quote\";\n  JsonSize2[JsonSize2[\"Colon\"] = 1] = \"Colon\";\n  JsonSize2[JsonSize2[\"Date\"] = 24] = \"Date\";\n  return JsonSize2;\n})(JsonSize || {});\nvar ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n  try {\n    let proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(value) === proto;\n  } catch (_) {\n    return false;\n  }\n}\nfunction isASCII(character) {\n  return character.charCodeAt(0) <= 127;\n}\nfunction calculateStringSize(value) {\n  const size = value.split(\"\").reduce((total, character) => {\n    if (isASCII(character)) {\n      return total + 1;\n    }\n    return total + 2;\n  }, 0);\n  return size + (_nullishCoalesce(value.match(ESCAPE_CHARACTERS_REGEXP), () => ( []))).length;\n}\nfunction calculateNumberSize(value) {\n  return value.toString().length;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.isNonEmptyArray = isNonEmptyArray; exports.isNullOrUndefined = isNullOrUndefined; exports.isObject = isObject; exports.hasProperty = hasProperty; exports.getKnownPropertyNames = getKnownPropertyNames; exports.JsonSize = JsonSize; exports.ESCAPE_CHARACTERS_REGEXP = ESCAPE_CHARACTERS_REGEXP; exports.isPlainObject = isPlainObject; exports.isASCII = isASCII; exports.calculateStringSize = calculateStringSize; exports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=chunk-QVEKZRZ2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstUVZFS1pSWjIuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLEVBQUUsd0NBQXdDLG1CQUFtQixjQUFjLE9BQU8sbUJBQW1CO0FBQzdLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7OztBQWNBLHVCQUF1QixvQkFBb0IseUJBQXlCLHNCQUFzQixnQkFBZ0IsYUFBYSxtQkFBbUIsZ0JBQWdCLDZCQUE2QiwwQkFBMEIsZ0JBQWdCLGFBQWEsZ0NBQWdDLDZCQUE2QixxQkFBcUIsa0JBQWtCLGVBQWUsWUFBWSwyQkFBMkIsd0JBQXdCLDJCQUEyQjtBQUMzYiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay1RVkVLWlJaMi5qcz8wNDAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7IGZ1bmN0aW9uIF9udWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikgeyBpZiAobGhzICE9IG51bGwpIHsgcmV0dXJuIGxoczsgfSBlbHNlIHsgcmV0dXJuIHJoc0ZuKCk7IH0gfS8vIHNyYy9taXNjLnRzXG5mdW5jdGlvbiBpc05vbkVtcHR5QXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA+IDA7XG59XG5mdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiBCb29sZWFuKHZhbHVlKSAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxudmFyIGhhc1Byb3BlcnR5ID0gKG9iamVjdFRvQ2hlY2ssIG5hbWUpID0+IE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdFRvQ2hlY2ssIG5hbWUpO1xuZnVuY3Rpb24gZ2V0S25vd25Qcm9wZXJ0eU5hbWVzKG9iamVjdCkge1xuICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqZWN0KTtcbn1cbnZhciBKc29uU2l6ZSA9IC8qIEBfX1BVUkVfXyAqLyAoKEpzb25TaXplMikgPT4ge1xuICBKc29uU2l6ZTJbSnNvblNpemUyW1wiTnVsbFwiXSA9IDRdID0gXCJOdWxsXCI7XG4gIEpzb25TaXplMltKc29uU2l6ZTJbXCJDb21tYVwiXSA9IDFdID0gXCJDb21tYVwiO1xuICBKc29uU2l6ZTJbSnNvblNpemUyW1wiV3JhcHBlclwiXSA9IDFdID0gXCJXcmFwcGVyXCI7XG4gIEpzb25TaXplMltKc29uU2l6ZTJbXCJUcnVlXCJdID0gNF0gPSBcIlRydWVcIjtcbiAgSnNvblNpemUyW0pzb25TaXplMltcIkZhbHNlXCJdID0gNV0gPSBcIkZhbHNlXCI7XG4gIEpzb25TaXplMltKc29uU2l6ZTJbXCJRdW90ZVwiXSA9IDFdID0gXCJRdW90ZVwiO1xuICBKc29uU2l6ZTJbSnNvblNpemUyW1wiQ29sb25cIl0gPSAxXSA9IFwiQ29sb25cIjtcbiAgSnNvblNpemUyW0pzb25TaXplMltcIkRhdGVcIl0gPSAyNF0gPSBcIkRhdGVcIjtcbiAgcmV0dXJuIEpzb25TaXplMjtcbn0pKEpzb25TaXplIHx8IHt9KTtcbnZhciBFU0NBUEVfQ0hBUkFDVEVSU19SRUdFWFAgPSAvXCJ8XFxcXHxcXG58XFxyfFxcdC9ndTtcbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB0cnkge1xuICAgIGxldCBwcm90byA9IHZhbHVlO1xuICAgIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpID09PSBwcm90bztcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZnVuY3Rpb24gaXNBU0NJSShjaGFyYWN0ZXIpIHtcbiAgcmV0dXJuIGNoYXJhY3Rlci5jaGFyQ29kZUF0KDApIDw9IDEyNztcbn1cbmZ1bmN0aW9uIGNhbGN1bGF0ZVN0cmluZ1NpemUodmFsdWUpIHtcbiAgY29uc3Qgc2l6ZSA9IHZhbHVlLnNwbGl0KFwiXCIpLnJlZHVjZSgodG90YWwsIGNoYXJhY3RlcikgPT4ge1xuICAgIGlmIChpc0FTQ0lJKGNoYXJhY3RlcikpIHtcbiAgICAgIHJldHVybiB0b3RhbCArIDE7XG4gICAgfVxuICAgIHJldHVybiB0b3RhbCArIDI7XG4gIH0sIDApO1xuICByZXR1cm4gc2l6ZSArIChfbnVsbGlzaENvYWxlc2NlKHZhbHVlLm1hdGNoKEVTQ0FQRV9DSEFSQUNURVJTX1JFR0VYUCksICgpID0+ICggW10pKSkubGVuZ3RoO1xufVxuZnVuY3Rpb24gY2FsY3VsYXRlTnVtYmVyU2l6ZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKS5sZW5ndGg7XG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbmV4cG9ydHMuaXNOb25FbXB0eUFycmF5ID0gaXNOb25FbXB0eUFycmF5OyBleHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7IGV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDsgZXhwb3J0cy5oYXNQcm9wZXJ0eSA9IGhhc1Byb3BlcnR5OyBleHBvcnRzLmdldEtub3duUHJvcGVydHlOYW1lcyA9IGdldEtub3duUHJvcGVydHlOYW1lczsgZXhwb3J0cy5Kc29uU2l6ZSA9IEpzb25TaXplOyBleHBvcnRzLkVTQ0FQRV9DSEFSQUNURVJTX1JFR0VYUCA9IEVTQ0FQRV9DSEFSQUNURVJTX1JFR0VYUDsgZXhwb3J0cy5pc1BsYWluT2JqZWN0ID0gaXNQbGFpbk9iamVjdDsgZXhwb3J0cy5pc0FTQ0lJID0gaXNBU0NJSTsgZXhwb3J0cy5jYWxjdWxhdGVTdHJpbmdTaXplID0gY2FsY3VsYXRlU3RyaW5nU2l6ZTsgZXhwb3J0cy5jYWxjdWxhdGVOdW1iZXJTaXplID0gY2FsY3VsYXRlTnVtYmVyU2l6ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVFWRUtaUloyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-QVEKZRZ2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-RKRGAFXY.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-RKRGAFXY.js ***!
  \*************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=chunk-RKRGAFXY.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstUktSR0FGWFkuanMiLCJtYXBwaW5ncyI6IkFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstUktSR0FGWFkuanM/NzM2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjsvLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1SS1JHQUZYWS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-RKRGAFXY.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-UOTVU7OQ.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-UOTVU7OQ.js ***!
  \*************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=chunk-UOTVU7OQ.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstVU9UVlU3T1EuanMiLCJtYXBwaW5ncyI6IkFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstVU9UVlU3T1EuanM/MDgzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjsvLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1VT1RWVTdPUS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-UOTVU7OQ.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-VFXTVNXN.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-VFXTVNXN.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\n\nvar _chunkQEPVHEP7js = __webpack_require__(/*! ./chunk-QEPVHEP7.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-QEPVHEP7.js\");\n\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n// src/number.ts\nvar numberToHex = (value) => {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"number\", \"Value must be a number.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, value >= 0, \"Value must be a non-negative number.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, \n    Number.isSafeInteger(value),\n    \"Value is not a safe integer. Use `bigIntToHex` instead.\"\n  );\n  return _chunkQEPVHEP7js.add0x.call(void 0, value.toString(16));\n};\nvar bigIntToHex = (value) => {\n  _chunk6ZDHSOUVjs.assert.call(void 0, typeof value === \"bigint\", \"Value must be a bigint.\");\n  _chunk6ZDHSOUVjs.assert.call(void 0, value >= 0, \"Value must be a non-negative bigint.\");\n  return _chunkQEPVHEP7js.add0x.call(void 0, value.toString(16));\n};\nvar hexToNumber = (value) => {\n  _chunkQEPVHEP7js.assertIsHexString.call(void 0, value);\n  const numberValue = parseInt(value, 16);\n  _chunk6ZDHSOUVjs.assert.call(void 0, \n    Number.isSafeInteger(numberValue),\n    \"Value is not a safe integer. Use `hexToBigInt` instead.\"\n  );\n  return numberValue;\n};\nvar hexToBigInt = (value) => {\n  _chunkQEPVHEP7js.assertIsHexString.call(void 0, value);\n  return BigInt(_chunkQEPVHEP7js.add0x.call(void 0, value));\n};\n\n\n\n\n\n\nexports.numberToHex = numberToHex; exports.bigIntToHex = bigIntToHex; exports.hexToNumber = hexToNumber; exports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=chunk-VFXTVNXN.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstVkZYVFZOWE4uanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDOzs7QUFHeEUsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQXFCOzs7QUFHcEQsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQXFCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BLG1CQUFtQixnQkFBZ0IsbUJBQW1CLGdCQUFnQixtQkFBbUIsZ0JBQWdCLG1CQUFtQjtBQUM1SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svdXRpbHMvZGlzdC9jaHVuay1WRlhUVk5YTi5qcz83OGE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge3ZhbHVlOiB0cnVlfSk7XG5cblxudmFyIF9jaHVua1FFUFZIRVA3anMgPSByZXF1aXJlKCcuL2NodW5rLVFFUFZIRVA3LmpzJyk7XG5cblxudmFyIF9jaHVuazZaREhTT1VWanMgPSByZXF1aXJlKCcuL2NodW5rLTZaREhTT1VWLmpzJyk7XG5cbi8vIHNyYy9udW1iZXIudHNcbnZhciBudW1iZXJUb0hleCA9ICh2YWx1ZSkgPT4ge1xuICBfY2h1bms2WkRIU09VVmpzLmFzc2VydC5jYWxsKHZvaWQgMCwgdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiLCBcIlZhbHVlIG11c3QgYmUgYSBudW1iZXIuXCIpO1xuICBfY2h1bms2WkRIU09VVmpzLmFzc2VydC5jYWxsKHZvaWQgMCwgdmFsdWUgPj0gMCwgXCJWYWx1ZSBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIG51bWJlci5cIik7XG4gIF9jaHVuazZaREhTT1VWanMuYXNzZXJ0LmNhbGwodm9pZCAwLCBcbiAgICBOdW1iZXIuaXNTYWZlSW50ZWdlcih2YWx1ZSksXG4gICAgXCJWYWx1ZSBpcyBub3QgYSBzYWZlIGludGVnZXIuIFVzZSBgYmlnSW50VG9IZXhgIGluc3RlYWQuXCJcbiAgKTtcbiAgcmV0dXJuIF9jaHVua1FFUFZIRVA3anMuYWRkMHguY2FsbCh2b2lkIDAsIHZhbHVlLnRvU3RyaW5nKDE2KSk7XG59O1xudmFyIGJpZ0ludFRvSGV4ID0gKHZhbHVlKSA9PiB7XG4gIF9jaHVuazZaREhTT1VWanMuYXNzZXJ0LmNhbGwodm9pZCAwLCB0eXBlb2YgdmFsdWUgPT09IFwiYmlnaW50XCIsIFwiVmFsdWUgbXVzdCBiZSBhIGJpZ2ludC5cIik7XG4gIF9jaHVuazZaREhTT1VWanMuYXNzZXJ0LmNhbGwodm9pZCAwLCB2YWx1ZSA+PSAwLCBcIlZhbHVlIG11c3QgYmUgYSBub24tbmVnYXRpdmUgYmlnaW50LlwiKTtcbiAgcmV0dXJuIF9jaHVua1FFUFZIRVA3anMuYWRkMHguY2FsbCh2b2lkIDAsIHZhbHVlLnRvU3RyaW5nKDE2KSk7XG59O1xudmFyIGhleFRvTnVtYmVyID0gKHZhbHVlKSA9PiB7XG4gIF9jaHVua1FFUFZIRVA3anMuYXNzZXJ0SXNIZXhTdHJpbmcuY2FsbCh2b2lkIDAsIHZhbHVlKTtcbiAgY29uc3QgbnVtYmVyVmFsdWUgPSBwYXJzZUludCh2YWx1ZSwgMTYpO1xuICBfY2h1bms2WkRIU09VVmpzLmFzc2VydC5jYWxsKHZvaWQgMCwgXG4gICAgTnVtYmVyLmlzU2FmZUludGVnZXIobnVtYmVyVmFsdWUpLFxuICAgIFwiVmFsdWUgaXMgbm90IGEgc2FmZSBpbnRlZ2VyLiBVc2UgYGhleFRvQmlnSW50YCBpbnN0ZWFkLlwiXG4gICk7XG4gIHJldHVybiBudW1iZXJWYWx1ZTtcbn07XG52YXIgaGV4VG9CaWdJbnQgPSAodmFsdWUpID0+IHtcbiAgX2NodW5rUUVQVkhFUDdqcy5hc3NlcnRJc0hleFN0cmluZy5jYWxsKHZvaWQgMCwgdmFsdWUpO1xuICByZXR1cm4gQmlnSW50KF9jaHVua1FFUFZIRVA3anMuYWRkMHguY2FsbCh2b2lkIDAsIHZhbHVlKSk7XG59O1xuXG5cblxuXG5cblxuZXhwb3J0cy5udW1iZXJUb0hleCA9IG51bWJlclRvSGV4OyBleHBvcnRzLmJpZ0ludFRvSGV4ID0gYmlnSW50VG9IZXg7IGV4cG9ydHMuaGV4VG9OdW1iZXIgPSBoZXhUb051bWJlcjsgZXhwb3J0cy5oZXhUb0JpZ0ludCA9IGhleFRvQmlnSW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVkZYVFZOWE4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-VFXTVNXN.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-YWAID473.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-YWAID473.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true})); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }// src/caip-types.ts\nvar _superstruct = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\nvar CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nvar CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nvar CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nvar CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nvar CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\nvar CaipChainIdStruct = _superstruct.pattern.call(void 0, _superstruct.string.call(void 0, ), CAIP_CHAIN_ID_REGEX);\nvar CaipNamespaceStruct = _superstruct.pattern.call(void 0, _superstruct.string.call(void 0, ), CAIP_NAMESPACE_REGEX);\nvar CaipReferenceStruct = _superstruct.pattern.call(void 0, _superstruct.string.call(void 0, ), CAIP_REFERENCE_REGEX);\nvar CaipAccountIdStruct = _superstruct.pattern.call(void 0, _superstruct.string.call(void 0, ), CAIP_ACCOUNT_ID_REGEX);\nvar CaipAccountAddressStruct = _superstruct.pattern.call(void 0, \n  _superstruct.string.call(void 0, ),\n  CAIP_ACCOUNT_ADDRESS_REGEX\n);\nvar KnownCaipNamespace = /* @__PURE__ */ ((KnownCaipNamespace2) => {\n  KnownCaipNamespace2[\"Eip155\"] = \"eip155\";\n  return KnownCaipNamespace2;\n})(KnownCaipNamespace || {});\nfunction isCaipChainId(value) {\n  return _superstruct.is.call(void 0, value, CaipChainIdStruct);\n}\nfunction isCaipNamespace(value) {\n  return _superstruct.is.call(void 0, value, CaipNamespaceStruct);\n}\nfunction isCaipReference(value) {\n  return _superstruct.is.call(void 0, value, CaipReferenceStruct);\n}\nfunction isCaipAccountId(value) {\n  return _superstruct.is.call(void 0, value, CaipAccountIdStruct);\n}\nfunction isCaipAccountAddress(value) {\n  return _superstruct.is.call(void 0, value, CaipAccountAddressStruct);\n}\nfunction parseCaipChainId(caipChainId) {\n  const match = CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n  if (!_optionalChain([match, 'optionalAccess', _ => _.groups])) {\n    throw new Error(\"Invalid CAIP chain ID.\");\n  }\n  return {\n    namespace: match.groups.namespace,\n    reference: match.groups.reference\n  };\n}\nfunction parseCaipAccountId(caipAccountId) {\n  const match = CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n  if (!_optionalChain([match, 'optionalAccess', _2 => _2.groups])) {\n    throw new Error(\"Invalid CAIP account ID.\");\n  }\n  return {\n    address: match.groups.accountAddress,\n    chainId: match.groups.chainId,\n    chain: {\n      namespace: match.groups.namespace,\n      reference: match.groups.reference\n    }\n  };\n}\nfunction toCaipChainId(namespace, reference) {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`\n    );\n  }\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`\n    );\n  }\n  return `${namespace}:${reference}`;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.CAIP_CHAIN_ID_REGEX = CAIP_CHAIN_ID_REGEX; exports.CAIP_NAMESPACE_REGEX = CAIP_NAMESPACE_REGEX; exports.CAIP_REFERENCE_REGEX = CAIP_REFERENCE_REGEX; exports.CAIP_ACCOUNT_ID_REGEX = CAIP_ACCOUNT_ID_REGEX; exports.CAIP_ACCOUNT_ADDRESS_REGEX = CAIP_ACCOUNT_ADDRESS_REGEX; exports.CaipChainIdStruct = CaipChainIdStruct; exports.CaipNamespaceStruct = CaipNamespaceStruct; exports.CaipReferenceStruct = CaipReferenceStruct; exports.CaipAccountIdStruct = CaipAccountIdStruct; exports.CaipAccountAddressStruct = CaipAccountAddressStruct; exports.KnownCaipNamespace = KnownCaipNamespace; exports.isCaipChainId = isCaipChainId; exports.isCaipNamespace = isCaipNamespace; exports.isCaipReference = isCaipReference; exports.isCaipAccountId = isCaipAccountId; exports.isCaipAccountAddress = isCaipAccountAddress; exports.parseCaipChainId = parseCaipChainId; exports.parseCaipAccountId = parseCaipAccountId; exports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=chunk-YWAID473.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstWVdBSUQ0NzMuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLEVBQUUsK0JBQStCLCtCQUErQixvQkFBb0IsV0FBVyx5QkFBeUIsbUJBQW1CLHVCQUF1QixRQUFRLDJFQUEyRSxvQkFBb0Isa0RBQWtELHVCQUF1QixxQkFBcUIsbURBQW1ELDZEQUE2RCwrQkFBK0IsZUFBZTtBQUM3a0IsbUJBQW1CLG1CQUFPLENBQUMsb0VBQWE7QUFDeEMsbURBQW1ELElBQUksNkJBQTZCLEtBQUs7QUFDekYsdUNBQXVDLElBQUk7QUFDM0MsMkNBQTJDLEtBQUs7QUFDaEQsZ0VBQWdFLElBQUksNkJBQTZCLEtBQUssb0NBQW9DLE1BQU07QUFDaEosa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxnQ0FBZ0M7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsZ0NBQWdDO0FBQzFFO0FBQ0E7QUFDQSxZQUFZLFVBQVUsR0FBRyxVQUFVO0FBQ25DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBLDJCQUEyQix3QkFBd0IsNEJBQTRCLHlCQUF5Qiw0QkFBNEIseUJBQXlCLDZCQUE2QiwwQkFBMEIsa0NBQWtDLCtCQUErQix5QkFBeUIsc0JBQXNCLDJCQUEyQix3QkFBd0IsMkJBQTJCLHdCQUF3QiwyQkFBMkIsd0JBQXdCLGdDQUFnQyw2QkFBNkIsMEJBQTBCLHVCQUF1QixxQkFBcUIsa0JBQWtCLHVCQUF1QixvQkFBb0IsdUJBQXVCLG9CQUFvQix1QkFBdUIsb0JBQW9CLDRCQUE0Qix5QkFBeUIsd0JBQXdCLHFCQUFxQiwwQkFBMEIsdUJBQXVCLHFCQUFxQjtBQUMzNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstWVdBSUQ0NzMuanM/ZjE4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogdHJ1ZX0pOyBmdW5jdGlvbiBfb3B0aW9uYWxDaGFpbihvcHMpIHsgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7IGxldCB2YWx1ZSA9IG9wc1swXTsgbGV0IGkgPSAxOyB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHsgY29uc3Qgb3AgPSBvcHNbaV07IGNvbnN0IGZuID0gb3BzW2kgKyAxXTsgaSArPSAyOyBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHsgbGFzdEFjY2Vzc0xIUyA9IHZhbHVlOyB2YWx1ZSA9IGZuKHZhbHVlKTsgfSBlbHNlIGlmIChvcCA9PT0gJ2NhbGwnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgeyB2YWx1ZSA9IGZuKCguLi5hcmdzKSA9PiB2YWx1ZS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTsgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDsgfSB9IHJldHVybiB2YWx1ZTsgfS8vIHNyYy9jYWlwLXR5cGVzLnRzXG52YXIgX3N1cGVyc3RydWN0ID0gcmVxdWlyZSgnc3VwZXJzdHJ1Y3QnKTtcbnZhciBDQUlQX0NIQUlOX0lEX1JFR0VYID0gL14oPzxuYW1lc3BhY2U+Wy1hLXowLTldezMsOH0pOig/PHJlZmVyZW5jZT5bLV9hLXpBLVowLTldezEsMzJ9KSQvdTtcbnZhciBDQUlQX05BTUVTUEFDRV9SRUdFWCA9IC9eWy1hLXowLTldezMsOH0kL3U7XG52YXIgQ0FJUF9SRUZFUkVOQ0VfUkVHRVggPSAvXlstX2EtekEtWjAtOV17MSwzMn0kL3U7XG52YXIgQ0FJUF9BQ0NPVU5UX0lEX1JFR0VYID0gL14oPzxjaGFpbklkPig/PG5hbWVzcGFjZT5bLWEtejAtOV17Myw4fSk6KD88cmVmZXJlbmNlPlstX2EtekEtWjAtOV17MSwzMn0pKTooPzxhY2NvdW50QWRkcmVzcz5bLS4lYS16QS1aMC05XXsxLDEyOH0pJC91O1xudmFyIENBSVBfQUNDT1VOVF9BRERSRVNTX1JFR0VYID0gL15bLS4lYS16QS1aMC05XXsxLDEyOH0kL3U7XG52YXIgQ2FpcENoYWluSWRTdHJ1Y3QgPSBfc3VwZXJzdHJ1Y3QucGF0dGVybi5jYWxsKHZvaWQgMCwgX3N1cGVyc3RydWN0LnN0cmluZy5jYWxsKHZvaWQgMCwgKSwgQ0FJUF9DSEFJTl9JRF9SRUdFWCk7XG52YXIgQ2FpcE5hbWVzcGFjZVN0cnVjdCA9IF9zdXBlcnN0cnVjdC5wYXR0ZXJuLmNhbGwodm9pZCAwLCBfc3VwZXJzdHJ1Y3Quc3RyaW5nLmNhbGwodm9pZCAwLCApLCBDQUlQX05BTUVTUEFDRV9SRUdFWCk7XG52YXIgQ2FpcFJlZmVyZW5jZVN0cnVjdCA9IF9zdXBlcnN0cnVjdC5wYXR0ZXJuLmNhbGwodm9pZCAwLCBfc3VwZXJzdHJ1Y3Quc3RyaW5nLmNhbGwodm9pZCAwLCApLCBDQUlQX1JFRkVSRU5DRV9SRUdFWCk7XG52YXIgQ2FpcEFjY291bnRJZFN0cnVjdCA9IF9zdXBlcnN0cnVjdC5wYXR0ZXJuLmNhbGwodm9pZCAwLCBfc3VwZXJzdHJ1Y3Quc3RyaW5nLmNhbGwodm9pZCAwLCApLCBDQUlQX0FDQ09VTlRfSURfUkVHRVgpO1xudmFyIENhaXBBY2NvdW50QWRkcmVzc1N0cnVjdCA9IF9zdXBlcnN0cnVjdC5wYXR0ZXJuLmNhbGwodm9pZCAwLCBcbiAgX3N1cGVyc3RydWN0LnN0cmluZy5jYWxsKHZvaWQgMCwgKSxcbiAgQ0FJUF9BQ0NPVU5UX0FERFJFU1NfUkVHRVhcbik7XG52YXIgS25vd25DYWlwTmFtZXNwYWNlID0gLyogQF9fUFVSRV9fICovICgoS25vd25DYWlwTmFtZXNwYWNlMikgPT4ge1xuICBLbm93bkNhaXBOYW1lc3BhY2UyW1wiRWlwMTU1XCJdID0gXCJlaXAxNTVcIjtcbiAgcmV0dXJuIEtub3duQ2FpcE5hbWVzcGFjZTI7XG59KShLbm93bkNhaXBOYW1lc3BhY2UgfHwge30pO1xuZnVuY3Rpb24gaXNDYWlwQ2hhaW5JZCh2YWx1ZSkge1xuICByZXR1cm4gX3N1cGVyc3RydWN0LmlzLmNhbGwodm9pZCAwLCB2YWx1ZSwgQ2FpcENoYWluSWRTdHJ1Y3QpO1xufVxuZnVuY3Rpb24gaXNDYWlwTmFtZXNwYWNlKHZhbHVlKSB7XG4gIHJldHVybiBfc3VwZXJzdHJ1Y3QuaXMuY2FsbCh2b2lkIDAsIHZhbHVlLCBDYWlwTmFtZXNwYWNlU3RydWN0KTtcbn1cbmZ1bmN0aW9uIGlzQ2FpcFJlZmVyZW5jZSh2YWx1ZSkge1xuICByZXR1cm4gX3N1cGVyc3RydWN0LmlzLmNhbGwodm9pZCAwLCB2YWx1ZSwgQ2FpcFJlZmVyZW5jZVN0cnVjdCk7XG59XG5mdW5jdGlvbiBpc0NhaXBBY2NvdW50SWQodmFsdWUpIHtcbiAgcmV0dXJuIF9zdXBlcnN0cnVjdC5pcy5jYWxsKHZvaWQgMCwgdmFsdWUsIENhaXBBY2NvdW50SWRTdHJ1Y3QpO1xufVxuZnVuY3Rpb24gaXNDYWlwQWNjb3VudEFkZHJlc3ModmFsdWUpIHtcbiAgcmV0dXJuIF9zdXBlcnN0cnVjdC5pcy5jYWxsKHZvaWQgMCwgdmFsdWUsIENhaXBBY2NvdW50QWRkcmVzc1N0cnVjdCk7XG59XG5mdW5jdGlvbiBwYXJzZUNhaXBDaGFpbklkKGNhaXBDaGFpbklkKSB7XG4gIGNvbnN0IG1hdGNoID0gQ0FJUF9DSEFJTl9JRF9SRUdFWC5leGVjKGNhaXBDaGFpbklkKTtcbiAgaWYgKCFfb3B0aW9uYWxDaGFpbihbbWF0Y2gsICdvcHRpb25hbEFjY2VzcycsIF8gPT4gXy5ncm91cHNdKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgQ0FJUCBjaGFpbiBJRC5cIik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBuYW1lc3BhY2U6IG1hdGNoLmdyb3Vwcy5uYW1lc3BhY2UsXG4gICAgcmVmZXJlbmNlOiBtYXRjaC5ncm91cHMucmVmZXJlbmNlXG4gIH07XG59XG5mdW5jdGlvbiBwYXJzZUNhaXBBY2NvdW50SWQoY2FpcEFjY291bnRJZCkge1xuICBjb25zdCBtYXRjaCA9IENBSVBfQUNDT1VOVF9JRF9SRUdFWC5leGVjKGNhaXBBY2NvdW50SWQpO1xuICBpZiAoIV9vcHRpb25hbENoYWluKFttYXRjaCwgJ29wdGlvbmFsQWNjZXNzJywgXzIgPT4gXzIuZ3JvdXBzXSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIENBSVAgYWNjb3VudCBJRC5cIik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBhZGRyZXNzOiBtYXRjaC5ncm91cHMuYWNjb3VudEFkZHJlc3MsXG4gICAgY2hhaW5JZDogbWF0Y2guZ3JvdXBzLmNoYWluSWQsXG4gICAgY2hhaW46IHtcbiAgICAgIG5hbWVzcGFjZTogbWF0Y2guZ3JvdXBzLm5hbWVzcGFjZSxcbiAgICAgIHJlZmVyZW5jZTogbWF0Y2guZ3JvdXBzLnJlZmVyZW5jZVxuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIHRvQ2FpcENoYWluSWQobmFtZXNwYWNlLCByZWZlcmVuY2UpIHtcbiAgaWYgKCFpc0NhaXBOYW1lc3BhY2UobmFtZXNwYWNlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIFwibmFtZXNwYWNlXCIsIG11c3QgbWF0Y2g6ICR7Q0FJUF9OQU1FU1BBQ0VfUkVHRVgudG9TdHJpbmcoKX1gXG4gICAgKTtcbiAgfVxuICBpZiAoIWlzQ2FpcFJlZmVyZW5jZShyZWZlcmVuY2UpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEludmFsaWQgXCJyZWZlcmVuY2VcIiwgbXVzdCBtYXRjaDogJHtDQUlQX1JFRkVSRU5DRV9SRUdFWC50b1N0cmluZygpfWBcbiAgICApO1xuICB9XG4gIHJldHVybiBgJHtuYW1lc3BhY2V9OiR7cmVmZXJlbmNlfWA7XG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5leHBvcnRzLkNBSVBfQ0hBSU5fSURfUkVHRVggPSBDQUlQX0NIQUlOX0lEX1JFR0VYOyBleHBvcnRzLkNBSVBfTkFNRVNQQUNFX1JFR0VYID0gQ0FJUF9OQU1FU1BBQ0VfUkVHRVg7IGV4cG9ydHMuQ0FJUF9SRUZFUkVOQ0VfUkVHRVggPSBDQUlQX1JFRkVSRU5DRV9SRUdFWDsgZXhwb3J0cy5DQUlQX0FDQ09VTlRfSURfUkVHRVggPSBDQUlQX0FDQ09VTlRfSURfUkVHRVg7IGV4cG9ydHMuQ0FJUF9BQ0NPVU5UX0FERFJFU1NfUkVHRVggPSBDQUlQX0FDQ09VTlRfQUREUkVTU19SRUdFWDsgZXhwb3J0cy5DYWlwQ2hhaW5JZFN0cnVjdCA9IENhaXBDaGFpbklkU3RydWN0OyBleHBvcnRzLkNhaXBOYW1lc3BhY2VTdHJ1Y3QgPSBDYWlwTmFtZXNwYWNlU3RydWN0OyBleHBvcnRzLkNhaXBSZWZlcmVuY2VTdHJ1Y3QgPSBDYWlwUmVmZXJlbmNlU3RydWN0OyBleHBvcnRzLkNhaXBBY2NvdW50SWRTdHJ1Y3QgPSBDYWlwQWNjb3VudElkU3RydWN0OyBleHBvcnRzLkNhaXBBY2NvdW50QWRkcmVzc1N0cnVjdCA9IENhaXBBY2NvdW50QWRkcmVzc1N0cnVjdDsgZXhwb3J0cy5Lbm93bkNhaXBOYW1lc3BhY2UgPSBLbm93bkNhaXBOYW1lc3BhY2U7IGV4cG9ydHMuaXNDYWlwQ2hhaW5JZCA9IGlzQ2FpcENoYWluSWQ7IGV4cG9ydHMuaXNDYWlwTmFtZXNwYWNlID0gaXNDYWlwTmFtZXNwYWNlOyBleHBvcnRzLmlzQ2FpcFJlZmVyZW5jZSA9IGlzQ2FpcFJlZmVyZW5jZTsgZXhwb3J0cy5pc0NhaXBBY2NvdW50SWQgPSBpc0NhaXBBY2NvdW50SWQ7IGV4cG9ydHMuaXNDYWlwQWNjb3VudEFkZHJlc3MgPSBpc0NhaXBBY2NvdW50QWRkcmVzczsgZXhwb3J0cy5wYXJzZUNhaXBDaGFpbklkID0gcGFyc2VDYWlwQ2hhaW5JZDsgZXhwb3J0cy5wYXJzZUNhaXBBY2NvdW50SWQgPSBwYXJzZUNhaXBBY2NvdW50SWQ7IGV4cG9ydHMudG9DYWlwQ2hhaW5JZCA9IHRvQ2FpcENoYWluSWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1ZV0FJRDQ3My5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-YWAID473.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-Z2RGWDD7.js":
/*!*************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-Z2RGWDD7.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));\n\n\n\nvar _chunk3W5G4CYIjs = __webpack_require__(/*! ./chunk-3W5G4CYI.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-3W5G4CYI.js\");\n\n// src/collections.ts\nvar _map;\nvar FrozenMap = class {\n  constructor(entries) {\n    _chunk3W5G4CYIjs.__privateAdd.call(void 0, this, _map, void 0);\n    _chunk3W5G4CYIjs.__privateSet.call(void 0, this, _map, new Map(entries));\n    Object.freeze(this);\n  }\n  get size() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).size;\n  }\n  [Symbol.iterator]() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map)[Symbol.iterator]();\n  }\n  entries() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).entries();\n  }\n  forEach(callbackfn, thisArg) {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).forEach(\n      (value, key, _map2) => callbackfn.call(thisArg, value, key, this)\n    );\n  }\n  get(key) {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).get(key);\n  }\n  has(key) {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).has(key);\n  }\n  keys() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).keys();\n  }\n  values() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _map).values();\n  }\n  toString() {\n    return `FrozenMap(${this.size}) {${this.size > 0 ? ` ${[...this.entries()].map(([key, value]) => `${String(key)} => ${String(value)}`).join(\", \")} ` : \"\"}}`;\n  }\n};\n_map = new WeakMap();\nvar _set;\nvar FrozenSet = class {\n  constructor(values) {\n    _chunk3W5G4CYIjs.__privateAdd.call(void 0, this, _set, void 0);\n    _chunk3W5G4CYIjs.__privateSet.call(void 0, this, _set, new Set(values));\n    Object.freeze(this);\n  }\n  get size() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set).size;\n  }\n  [Symbol.iterator]() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set)[Symbol.iterator]();\n  }\n  entries() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set).entries();\n  }\n  forEach(callbackfn, thisArg) {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set).forEach(\n      (value, value2, _set2) => callbackfn.call(thisArg, value, value2, this)\n    );\n  }\n  has(value) {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set).has(value);\n  }\n  keys() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set).keys();\n  }\n  values() {\n    return _chunk3W5G4CYIjs.__privateGet.call(void 0, this, _set).values();\n  }\n  toString() {\n    return `FrozenSet(${this.size}) {${this.size > 0 ? ` ${[...this.values()].map((member) => String(member)).join(\", \")} ` : \"\"}}`;\n  }\n};\n_set = new WeakMap();\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n\n\n\n\nexports.FrozenMap = FrozenMap; exports.FrozenSet = FrozenSet;\n//# sourceMappingURL=chunk-Z2RGWDD7.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstWjJSR1dERDcuanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDOzs7O0FBSXhFLHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVLEdBQUcsRUFBRSxvQkFBb0IsNkNBQTZDLGFBQWEsS0FBSyxjQUFjLGVBQWUsUUFBUTtBQUMvSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVLEdBQUcsRUFBRSxvQkFBb0IsK0RBQStELFFBQVE7QUFDbEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0EsaUJBQWlCLGNBQWMsaUJBQWlCO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay91dGlscy9kaXN0L2NodW5rLVoyUkdXREQ3LmpzP2Y4ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7dmFsdWU6IHRydWV9KTtcblxuXG5cbnZhciBfY2h1bmszVzVHNENZSWpzID0gcmVxdWlyZSgnLi9jaHVuay0zVzVHNENZSS5qcycpO1xuXG4vLyBzcmMvY29sbGVjdGlvbnMudHNcbnZhciBfbWFwO1xudmFyIEZyb3plbk1hcCA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoZW50cmllcykge1xuICAgIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlQWRkLmNhbGwodm9pZCAwLCB0aGlzLCBfbWFwLCB2b2lkIDApO1xuICAgIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlU2V0LmNhbGwodm9pZCAwLCB0aGlzLCBfbWFwLCBuZXcgTWFwKGVudHJpZXMpKTtcbiAgICBPYmplY3QuZnJlZXplKHRoaXMpO1xuICB9XG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiBfY2h1bmszVzVHNENZSWpzLl9fcHJpdmF0ZUdldC5jYWxsKHZvaWQgMCwgdGhpcywgX21hcCkuc2l6ZTtcbiAgfVxuICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVHZXQuY2FsbCh2b2lkIDAsIHRoaXMsIF9tYXApW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgfVxuICBlbnRyaWVzKCkge1xuICAgIHJldHVybiBfY2h1bmszVzVHNENZSWpzLl9fcHJpdmF0ZUdldC5jYWxsKHZvaWQgMCwgdGhpcywgX21hcCkuZW50cmllcygpO1xuICB9XG4gIGZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZykge1xuICAgIHJldHVybiBfY2h1bmszVzVHNENZSWpzLl9fcHJpdmF0ZUdldC5jYWxsKHZvaWQgMCwgdGhpcywgX21hcCkuZm9yRWFjaChcbiAgICAgICh2YWx1ZSwga2V5LCBfbWFwMikgPT4gY2FsbGJhY2tmbi5jYWxsKHRoaXNBcmcsIHZhbHVlLCBrZXksIHRoaXMpXG4gICAgKTtcbiAgfVxuICBnZXQoa2V5KSB7XG4gICAgcmV0dXJuIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlR2V0LmNhbGwodm9pZCAwLCB0aGlzLCBfbWFwKS5nZXQoa2V5KTtcbiAgfVxuICBoYXMoa2V5KSB7XG4gICAgcmV0dXJuIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlR2V0LmNhbGwodm9pZCAwLCB0aGlzLCBfbWFwKS5oYXMoa2V5KTtcbiAgfVxuICBrZXlzKCkge1xuICAgIHJldHVybiBfY2h1bmszVzVHNENZSWpzLl9fcHJpdmF0ZUdldC5jYWxsKHZvaWQgMCwgdGhpcywgX21hcCkua2V5cygpO1xuICB9XG4gIHZhbHVlcygpIHtcbiAgICByZXR1cm4gX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVHZXQuY2FsbCh2b2lkIDAsIHRoaXMsIF9tYXApLnZhbHVlcygpO1xuICB9XG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBgRnJvemVuTWFwKCR7dGhpcy5zaXplfSkgeyR7dGhpcy5zaXplID4gMCA/IGAgJHtbLi4udGhpcy5lbnRyaWVzKCldLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBgJHtTdHJpbmcoa2V5KX0gPT4gJHtTdHJpbmcodmFsdWUpfWApLmpvaW4oXCIsIFwiKX0gYCA6IFwiXCJ9fWA7XG4gIH1cbn07XG5fbWFwID0gbmV3IFdlYWtNYXAoKTtcbnZhciBfc2V0O1xudmFyIEZyb3plblNldCA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IodmFsdWVzKSB7XG4gICAgX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVBZGQuY2FsbCh2b2lkIDAsIHRoaXMsIF9zZXQsIHZvaWQgMCk7XG4gICAgX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVTZXQuY2FsbCh2b2lkIDAsIHRoaXMsIF9zZXQsIG5ldyBTZXQodmFsdWVzKSk7XG4gICAgT2JqZWN0LmZyZWV6ZSh0aGlzKTtcbiAgfVxuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVHZXQuY2FsbCh2b2lkIDAsIHRoaXMsIF9zZXQpLnNpemU7XG4gIH1cbiAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgcmV0dXJuIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlR2V0LmNhbGwodm9pZCAwLCB0aGlzLCBfc2V0KVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gIH1cbiAgZW50cmllcygpIHtcbiAgICByZXR1cm4gX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVHZXQuY2FsbCh2b2lkIDAsIHRoaXMsIF9zZXQpLmVudHJpZXMoKTtcbiAgfVxuICBmb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcpIHtcbiAgICByZXR1cm4gX2NodW5rM1c1RzRDWUlqcy5fX3ByaXZhdGVHZXQuY2FsbCh2b2lkIDAsIHRoaXMsIF9zZXQpLmZvckVhY2goXG4gICAgICAodmFsdWUsIHZhbHVlMiwgX3NldDIpID0+IGNhbGxiYWNrZm4uY2FsbCh0aGlzQXJnLCB2YWx1ZSwgdmFsdWUyLCB0aGlzKVxuICAgICk7XG4gIH1cbiAgaGFzKHZhbHVlKSB7XG4gICAgcmV0dXJuIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlR2V0LmNhbGwodm9pZCAwLCB0aGlzLCBfc2V0KS5oYXModmFsdWUpO1xuICB9XG4gIGtleXMoKSB7XG4gICAgcmV0dXJuIF9jaHVuazNXNUc0Q1lJanMuX19wcml2YXRlR2V0LmNhbGwodm9pZCAwLCB0aGlzLCBfc2V0KS5rZXlzKCk7XG4gIH1cbiAgdmFsdWVzKCkge1xuICAgIHJldHVybiBfY2h1bmszVzVHNENZSWpzLl9fcHJpdmF0ZUdldC5jYWxsKHZvaWQgMCwgdGhpcywgX3NldCkudmFsdWVzKCk7XG4gIH1cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIGBGcm96ZW5TZXQoJHt0aGlzLnNpemV9KSB7JHt0aGlzLnNpemUgPiAwID8gYCAke1suLi50aGlzLnZhbHVlcygpXS5tYXAoKG1lbWJlcikgPT4gU3RyaW5nKG1lbWJlcikpLmpvaW4oXCIsIFwiKX0gYCA6IFwiXCJ9fWA7XG4gIH1cbn07XG5fc2V0ID0gbmV3IFdlYWtNYXAoKTtcbk9iamVjdC5mcmVlemUoRnJvemVuTWFwKTtcbk9iamVjdC5mcmVlemUoRnJvemVuTWFwLnByb3RvdHlwZSk7XG5PYmplY3QuZnJlZXplKEZyb3plblNldCk7XG5PYmplY3QuZnJlZXplKEZyb3plblNldC5wcm90b3R5cGUpO1xuXG5cblxuXG5leHBvcnRzLkZyb3plbk1hcCA9IEZyb3plbk1hcDsgZXhwb3J0cy5Gcm96ZW5TZXQgPSBGcm96ZW5TZXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1aMlJHV0RENy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-Z2RGWDD7.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value: true}));__webpack_require__(/*! ./chunk-5AVWINSB.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-5AVWINSB.js\");\n\n\n\n\n\nvar _chunkVFXTVNXNjs = __webpack_require__(/*! ./chunk-VFXTVNXN.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-VFXTVNXN.js\");\n__webpack_require__(/*! ./chunk-LC2CRSWD.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-LC2CRSWD.js\");\n\n\nvar _chunkC6HGFEYLjs = __webpack_require__(/*! ./chunk-C6HGFEYL.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-C6HGFEYL.js\");\n\n\n\n\nvar _chunk4RMX5YWEjs = __webpack_require__(/*! ./chunk-4RMX5YWE.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-4RMX5YWE.js\");\n__webpack_require__(/*! ./chunk-UOTVU7OQ.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-UOTVU7OQ.js\");\n\n\n\n\n\n\n\n\n\n\nvar _chunk4D6XQBHAjs = __webpack_require__(/*! ./chunk-4D6XQBHA.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-4D6XQBHA.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkOLLG4H35js = __webpack_require__(/*! ./chunk-OLLG4H35.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-OLLG4H35.js\");\n__webpack_require__(/*! ./chunk-RKRGAFXY.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-RKRGAFXY.js\");\n\n\n\nvar _chunk2LBGT4GHjs = __webpack_require__(/*! ./chunk-2LBGT4GH.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-2LBGT4GH.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkYWAID473js = __webpack_require__(/*! ./chunk-YWAID473.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-YWAID473.js\");\n\n\nvar _chunkE4C7EW4Rjs = __webpack_require__(/*! ./chunk-E4C7EW4R.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-E4C7EW4R.js\");\n\n\nvar _chunk6NZW4WK4js = __webpack_require__(/*! ./chunk-6NZW4WK4.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6NZW4WK4.js\");\n\n\n\n\n\nvar _chunkDHVKFDHQjs = __webpack_require__(/*! ./chunk-DHVKFDHQ.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-DHVKFDHQ.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkQEPVHEP7js = __webpack_require__(/*! ./chunk-QEPVHEP7.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-QEPVHEP7.js\");\n\n\n\n\n\nvar _chunk6ZDHSOUVjs = __webpack_require__(/*! ./chunk-6ZDHSOUV.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6ZDHSOUV.js\");\n\n\n\n\n\n\nvar _chunkIZC266HSjs = __webpack_require__(/*! ./chunk-IZC266HS.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-IZC266HS.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkQVEKZRZ2js = __webpack_require__(/*! ./chunk-QVEKZRZ2.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-QVEKZRZ2.js\");\n\n\n\nvar _chunkZ2RGWDD7js = __webpack_require__(/*! ./chunk-Z2RGWDD7.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-Z2RGWDD7.js\");\n__webpack_require__(/*! ./chunk-3W5G4CYI.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-3W5G4CYI.js\");\n__webpack_require__(/*! ./chunk-EQMZL4XU.js */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-EQMZL4XU.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.AssertionError = _chunk6ZDHSOUVjs.AssertionError; exports.CAIP_ACCOUNT_ADDRESS_REGEX = _chunkYWAID473js.CAIP_ACCOUNT_ADDRESS_REGEX; exports.CAIP_ACCOUNT_ID_REGEX = _chunkYWAID473js.CAIP_ACCOUNT_ID_REGEX; exports.CAIP_CHAIN_ID_REGEX = _chunkYWAID473js.CAIP_CHAIN_ID_REGEX; exports.CAIP_NAMESPACE_REGEX = _chunkYWAID473js.CAIP_NAMESPACE_REGEX; exports.CAIP_REFERENCE_REGEX = _chunkYWAID473js.CAIP_REFERENCE_REGEX; exports.CaipAccountAddressStruct = _chunkYWAID473js.CaipAccountAddressStruct; exports.CaipAccountIdStruct = _chunkYWAID473js.CaipAccountIdStruct; exports.CaipChainIdStruct = _chunkYWAID473js.CaipChainIdStruct; exports.CaipNamespaceStruct = _chunkYWAID473js.CaipNamespaceStruct; exports.CaipReferenceStruct = _chunkYWAID473js.CaipReferenceStruct; exports.ChecksumStruct = _chunkE4C7EW4Rjs.ChecksumStruct; exports.Duration = _chunk4RMX5YWEjs.Duration; exports.ESCAPE_CHARACTERS_REGEXP = _chunkQVEKZRZ2js.ESCAPE_CHARACTERS_REGEXP; exports.FrozenMap = _chunkZ2RGWDD7js.FrozenMap; exports.FrozenSet = _chunkZ2RGWDD7js.FrozenSet; exports.HexAddressStruct = _chunkQEPVHEP7js.HexAddressStruct; exports.HexChecksumAddressStruct = _chunkQEPVHEP7js.HexChecksumAddressStruct; exports.HexStruct = _chunkQEPVHEP7js.HexStruct; exports.JsonRpcErrorStruct = _chunkOLLG4H35js.JsonRpcErrorStruct; exports.JsonRpcFailureStruct = _chunkOLLG4H35js.JsonRpcFailureStruct; exports.JsonRpcIdStruct = _chunkOLLG4H35js.JsonRpcIdStruct; exports.JsonRpcNotificationStruct = _chunkOLLG4H35js.JsonRpcNotificationStruct; exports.JsonRpcParamsStruct = _chunkOLLG4H35js.JsonRpcParamsStruct; exports.JsonRpcRequestStruct = _chunkOLLG4H35js.JsonRpcRequestStruct; exports.JsonRpcResponseStruct = _chunkOLLG4H35js.JsonRpcResponseStruct; exports.JsonRpcSuccessStruct = _chunkOLLG4H35js.JsonRpcSuccessStruct; exports.JsonRpcVersionStruct = _chunkOLLG4H35js.JsonRpcVersionStruct; exports.JsonSize = _chunkQVEKZRZ2js.JsonSize; exports.JsonStruct = _chunkOLLG4H35js.JsonStruct; exports.KnownCaipNamespace = _chunkYWAID473js.KnownCaipNamespace; exports.PendingJsonRpcResponseStruct = _chunkOLLG4H35js.PendingJsonRpcResponseStruct; exports.StrictHexStruct = _chunkQEPVHEP7js.StrictHexStruct; exports.UnsafeJsonStruct = _chunkOLLG4H35js.UnsafeJsonStruct; exports.VersionRangeStruct = _chunk4D6XQBHAjs.VersionRangeStruct; exports.VersionStruct = _chunk4D6XQBHAjs.VersionStruct; exports.add0x = _chunkQEPVHEP7js.add0x; exports.assert = _chunk6ZDHSOUVjs.assert; exports.assertExhaustive = _chunk6ZDHSOUVjs.assertExhaustive; exports.assertIsBytes = _chunkQEPVHEP7js.assertIsBytes; exports.assertIsHexString = _chunkQEPVHEP7js.assertIsHexString; exports.assertIsJsonRpcError = _chunkOLLG4H35js.assertIsJsonRpcError; exports.assertIsJsonRpcFailure = _chunkOLLG4H35js.assertIsJsonRpcFailure; exports.assertIsJsonRpcNotification = _chunkOLLG4H35js.assertIsJsonRpcNotification; exports.assertIsJsonRpcRequest = _chunkOLLG4H35js.assertIsJsonRpcRequest; exports.assertIsJsonRpcResponse = _chunkOLLG4H35js.assertIsJsonRpcResponse; exports.assertIsJsonRpcSuccess = _chunkOLLG4H35js.assertIsJsonRpcSuccess; exports.assertIsPendingJsonRpcResponse = _chunkOLLG4H35js.assertIsPendingJsonRpcResponse; exports.assertIsSemVerRange = _chunk4D6XQBHAjs.assertIsSemVerRange; exports.assertIsSemVerVersion = _chunk4D6XQBHAjs.assertIsSemVerVersion; exports.assertIsStrictHexString = _chunkQEPVHEP7js.assertIsStrictHexString; exports.assertStruct = _chunk6ZDHSOUVjs.assertStruct; exports.base64 = _chunk6NZW4WK4js.base64; exports.base64ToBytes = _chunkQEPVHEP7js.base64ToBytes; exports.bigIntToBytes = _chunkQEPVHEP7js.bigIntToBytes; exports.bigIntToHex = _chunkVFXTVNXNjs.bigIntToHex; exports.bytesToBase64 = _chunkQEPVHEP7js.bytesToBase64; exports.bytesToBigInt = _chunkQEPVHEP7js.bytesToBigInt; exports.bytesToHex = _chunkQEPVHEP7js.bytesToHex; exports.bytesToNumber = _chunkQEPVHEP7js.bytesToNumber; exports.bytesToSignedBigInt = _chunkQEPVHEP7js.bytesToSignedBigInt; exports.bytesToString = _chunkQEPVHEP7js.bytesToString; exports.calculateNumberSize = _chunkQVEKZRZ2js.calculateNumberSize; exports.calculateStringSize = _chunkQVEKZRZ2js.calculateStringSize; exports.concatBytes = _chunkQEPVHEP7js.concatBytes; exports.createBigInt = _chunkDHVKFDHQjs.createBigInt; exports.createBytes = _chunkDHVKFDHQjs.createBytes; exports.createDataView = _chunkQEPVHEP7js.createDataView; exports.createDeferredPromise = _chunkC6HGFEYLjs.createDeferredPromise; exports.createHex = _chunkDHVKFDHQjs.createHex; exports.createModuleLogger = _chunk2LBGT4GHjs.createModuleLogger; exports.createNumber = _chunkDHVKFDHQjs.createNumber; exports.createProjectLogger = _chunk2LBGT4GHjs.createProjectLogger; exports.exactOptional = _chunkOLLG4H35js.exactOptional; exports.getChecksumAddress = _chunkQEPVHEP7js.getChecksumAddress; exports.getErrorMessage = _chunkIZC266HSjs.getErrorMessage; exports.getJsonRpcIdValidator = _chunkOLLG4H35js.getJsonRpcIdValidator; exports.getJsonSize = _chunkOLLG4H35js.getJsonSize; exports.getKnownPropertyNames = _chunkQVEKZRZ2js.getKnownPropertyNames; exports.getSafeJson = _chunkOLLG4H35js.getSafeJson; exports.gtRange = _chunk4D6XQBHAjs.gtRange; exports.gtVersion = _chunk4D6XQBHAjs.gtVersion; exports.hasProperty = _chunkQVEKZRZ2js.hasProperty; exports.hexToBigInt = _chunkVFXTVNXNjs.hexToBigInt; exports.hexToBytes = _chunkQEPVHEP7js.hexToBytes; exports.hexToNumber = _chunkVFXTVNXNjs.hexToNumber; exports.inMilliseconds = _chunk4RMX5YWEjs.inMilliseconds; exports.isASCII = _chunkQVEKZRZ2js.isASCII; exports.isBytes = _chunkQEPVHEP7js.isBytes; exports.isCaipAccountAddress = _chunkYWAID473js.isCaipAccountAddress; exports.isCaipAccountId = _chunkYWAID473js.isCaipAccountId; exports.isCaipChainId = _chunkYWAID473js.isCaipChainId; exports.isCaipNamespace = _chunkYWAID473js.isCaipNamespace; exports.isCaipReference = _chunkYWAID473js.isCaipReference; exports.isErrorWithCode = _chunkIZC266HSjs.isErrorWithCode; exports.isErrorWithMessage = _chunkIZC266HSjs.isErrorWithMessage; exports.isErrorWithStack = _chunkIZC266HSjs.isErrorWithStack; exports.isHexString = _chunkQEPVHEP7js.isHexString; exports.isJsonRpcError = _chunkOLLG4H35js.isJsonRpcError; exports.isJsonRpcFailure = _chunkOLLG4H35js.isJsonRpcFailure; exports.isJsonRpcNotification = _chunkOLLG4H35js.isJsonRpcNotification; exports.isJsonRpcRequest = _chunkOLLG4H35js.isJsonRpcRequest; exports.isJsonRpcResponse = _chunkOLLG4H35js.isJsonRpcResponse; exports.isJsonRpcSuccess = _chunkOLLG4H35js.isJsonRpcSuccess; exports.isNonEmptyArray = _chunkQVEKZRZ2js.isNonEmptyArray; exports.isNullOrUndefined = _chunkQVEKZRZ2js.isNullOrUndefined; exports.isObject = _chunkQVEKZRZ2js.isObject; exports.isPendingJsonRpcResponse = _chunkOLLG4H35js.isPendingJsonRpcResponse; exports.isPlainObject = _chunkQVEKZRZ2js.isPlainObject; exports.isStrictHexString = _chunkQEPVHEP7js.isStrictHexString; exports.isValidChecksumAddress = _chunkQEPVHEP7js.isValidChecksumAddress; exports.isValidHexAddress = _chunkQEPVHEP7js.isValidHexAddress; exports.isValidJson = _chunkOLLG4H35js.isValidJson; exports.isValidSemVerRange = _chunk4D6XQBHAjs.isValidSemVerRange; exports.isValidSemVerVersion = _chunk4D6XQBHAjs.isValidSemVerVersion; exports.jsonrpc2 = _chunkOLLG4H35js.jsonrpc2; exports.numberToBytes = _chunkQEPVHEP7js.numberToBytes; exports.numberToHex = _chunkVFXTVNXNjs.numberToHex; exports.object = _chunkOLLG4H35js.object; exports.parseCaipAccountId = _chunkYWAID473js.parseCaipAccountId; exports.parseCaipChainId = _chunkYWAID473js.parseCaipChainId; exports.remove0x = _chunkQEPVHEP7js.remove0x; exports.satisfiesVersionRange = _chunk4D6XQBHAjs.satisfiesVersionRange; exports.signedBigIntToBytes = _chunkQEPVHEP7js.signedBigIntToBytes; exports.stringToBytes = _chunkQEPVHEP7js.stringToBytes; exports.timeSince = _chunk4RMX5YWEjs.timeSince; exports.toCaipChainId = _chunkYWAID473js.toCaipChainId; exports.valueToBytes = _chunkQEPVHEP7js.valueToBytes; exports.wrapError = _chunkIZC266HSjs.wrapError;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWEsOENBQTZDLENBQUMsWUFBWSxFQUFDLENBQUMsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7OztBQU10Ryx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7QUFDcEQsbUJBQU8sQ0FBQyx3RkFBcUI7OztBQUc3Qix1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7O0FBS3BELHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjtBQUNwRCxtQkFBTyxDQUFDLHdGQUFxQjs7Ozs7Ozs7Ozs7QUFXN0IsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQXFCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1DcEQsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQXFCO0FBQ3BELG1CQUFPLENBQUMsd0ZBQXFCOzs7O0FBSTdCLHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJwRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7OztBQUdwRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7OztBQUdwRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7OztBQU1wRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0NwRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7OztBQU1wRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7Ozs7QUFPcEQsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQXFCOzs7Ozs7Ozs7Ozs7O0FBYXBELHVCQUF1QixtQkFBTyxDQUFDLHdGQUFxQjs7OztBQUlwRCx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBcUI7QUFDcEQsbUJBQU8sQ0FBQyx3RkFBcUI7QUFDN0IsbUJBQU8sQ0FBQyx3RkFBcUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUk3QixzQkFBc0Isb0NBQW9DLGtDQUFrQyxnREFBZ0QsNkJBQTZCLDJDQUEyQywyQkFBMkIseUNBQXlDLDRCQUE0QiwwQ0FBMEMsNEJBQTRCLDBDQUEwQyxnQ0FBZ0MsOENBQThDLDJCQUEyQix5Q0FBeUMseUJBQXlCLHVDQUF1QywyQkFBMkIseUNBQXlDLDJCQUEyQix5Q0FBeUMsc0JBQXNCLG9DQUFvQyxnQkFBZ0IsOEJBQThCLGdDQUFnQyw4Q0FBOEMsaUJBQWlCLCtCQUErQixpQkFBaUIsK0JBQStCLHdCQUF3QixzQ0FBc0MsZ0NBQWdDLDhDQUE4QyxpQkFBaUIsK0JBQStCLDBCQUEwQix3Q0FBd0MsNEJBQTRCLDBDQUEwQyx1QkFBdUIscUNBQXFDLGlDQUFpQywrQ0FBK0MsMkJBQTJCLHlDQUF5Qyw0QkFBNEIsMENBQTBDLDZCQUE2QiwyQ0FBMkMsNEJBQTRCLDBDQUEwQyw0QkFBNEIsMENBQTBDLGdCQUFnQiw4QkFBOEIsa0JBQWtCLGdDQUFnQywwQkFBMEIsd0NBQXdDLG9DQUFvQyxrREFBa0QsdUJBQXVCLHFDQUFxQyx3QkFBd0Isc0NBQXNDLDBCQUEwQix3Q0FBd0MscUJBQXFCLG1DQUFtQyxhQUFhLDJCQUEyQixjQUFjLDRCQUE0Qix3QkFBd0Isc0NBQXNDLHFCQUFxQixtQ0FBbUMseUJBQXlCLHVDQUF1Qyw0QkFBNEIsMENBQTBDLDhCQUE4Qiw0Q0FBNEMsbUNBQW1DLGlEQUFpRCw4QkFBOEIsNENBQTRDLCtCQUErQiw2Q0FBNkMsOEJBQThCLDRDQUE0QyxzQ0FBc0Msb0RBQW9ELDJCQUEyQix5Q0FBeUMsNkJBQTZCLDJDQUEyQywrQkFBK0IsNkNBQTZDLG9CQUFvQixrQ0FBa0MsY0FBYyw0QkFBNEIscUJBQXFCLG1DQUFtQyxxQkFBcUIsbUNBQW1DLG1CQUFtQixpQ0FBaUMscUJBQXFCLG1DQUFtQyxxQkFBcUIsbUNBQW1DLGtCQUFrQixnQ0FBZ0MscUJBQXFCLG1DQUFtQywyQkFBMkIseUNBQXlDLHFCQUFxQixtQ0FBbUMsMkJBQTJCLHlDQUF5QywyQkFBMkIseUNBQXlDLG1CQUFtQixpQ0FBaUMsb0JBQW9CLGtDQUFrQyxtQkFBbUIsaUNBQWlDLHNCQUFzQixvQ0FBb0MsNkJBQTZCLDJDQUEyQyxpQkFBaUIsK0JBQStCLDBCQUEwQix3Q0FBd0Msb0JBQW9CLGtDQUFrQywyQkFBMkIseUNBQXlDLHFCQUFxQixtQ0FBbUMsMEJBQTBCLHdDQUF3Qyx1QkFBdUIscUNBQXFDLDZCQUE2QiwyQ0FBMkMsbUJBQW1CLGlDQUFpQyw2QkFBNkIsMkNBQTJDLG1CQUFtQixpQ0FBaUMsZUFBZSw2QkFBNkIsaUJBQWlCLCtCQUErQixtQkFBbUIsaUNBQWlDLG1CQUFtQixpQ0FBaUMsa0JBQWtCLGdDQUFnQyxtQkFBbUIsaUNBQWlDLHNCQUFzQixvQ0FBb0MsZUFBZSw2QkFBNkIsZUFBZSw2QkFBNkIsNEJBQTRCLDBDQUEwQyx1QkFBdUIscUNBQXFDLHFCQUFxQixtQ0FBbUMsdUJBQXVCLHFDQUFxQyx1QkFBdUIscUNBQXFDLHVCQUF1QixxQ0FBcUMsMEJBQTBCLHdDQUF3Qyx3QkFBd0Isc0NBQXNDLG1CQUFtQixpQ0FBaUMsc0JBQXNCLG9DQUFvQyx3QkFBd0Isc0NBQXNDLDZCQUE2QiwyQ0FBMkMsd0JBQXdCLHNDQUFzQyx5QkFBeUIsdUNBQXVDLHdCQUF3QixzQ0FBc0MsdUJBQXVCLHFDQUFxQyx5QkFBeUIsdUNBQXVDLGdCQUFnQiw4QkFBOEIsZ0NBQWdDLDhDQUE4QyxxQkFBcUIsbUNBQW1DLHlCQUF5Qix1Q0FBdUMsOEJBQThCLDRDQUE0Qyx5QkFBeUIsdUNBQXVDLG1CQUFtQixpQ0FBaUMsMEJBQTBCLHdDQUF3Qyw0QkFBNEIsMENBQTBDLGdCQUFnQiw4QkFBOEIscUJBQXFCLG1DQUFtQyxtQkFBbUIsaUNBQWlDLGNBQWMsNEJBQTRCLDBCQUEwQix3Q0FBd0Msd0JBQXdCLHNDQUFzQyxnQkFBZ0IsOEJBQThCLDZCQUE2QiwyQ0FBMkMsMkJBQTJCLHlDQUF5QyxxQkFBcUIsbUNBQW1DLGlCQUFpQiwrQkFBK0IscUJBQXFCLG1DQUFtQyxvQkFBb0Isa0NBQWtDLGlCQUFpQjtBQUM3clAiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvaW5kZXguanM/NDBjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogdHJ1ZX0pO3JlcXVpcmUoJy4vY2h1bmstNUFWV0lOU0IuanMnKTtcblxuXG5cblxuXG52YXIgX2NodW5rVkZYVFZOWE5qcyA9IHJlcXVpcmUoJy4vY2h1bmstVkZYVFZOWE4uanMnKTtcbnJlcXVpcmUoJy4vY2h1bmstTEMyQ1JTV0QuanMnKTtcblxuXG52YXIgX2NodW5rQzZIR0ZFWUxqcyA9IHJlcXVpcmUoJy4vY2h1bmstQzZIR0ZFWUwuanMnKTtcblxuXG5cblxudmFyIF9jaHVuazRSTVg1WVdFanMgPSByZXF1aXJlKCcuL2NodW5rLTRSTVg1WVdFLmpzJyk7XG5yZXF1aXJlKCcuL2NodW5rLVVPVFZVN09RLmpzJyk7XG5cblxuXG5cblxuXG5cblxuXG5cbnZhciBfY2h1bms0RDZYUUJIQWpzID0gcmVxdWlyZSgnLi9jaHVuay00RDZYUUJIQS5qcycpO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG52YXIgX2NodW5rT0xMRzRIMzVqcyA9IHJlcXVpcmUoJy4vY2h1bmstT0xMRzRIMzUuanMnKTtcbnJlcXVpcmUoJy4vY2h1bmstUktSR0FGWFkuanMnKTtcblxuXG5cbnZhciBfY2h1bmsyTEJHVDRHSGpzID0gcmVxdWlyZSgnLi9jaHVuay0yTEJHVDRHSC5qcycpO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbnZhciBfY2h1bmtZV0FJRDQ3M2pzID0gcmVxdWlyZSgnLi9jaHVuay1ZV0FJRDQ3My5qcycpO1xuXG5cbnZhciBfY2h1bmtFNEM3RVc0UmpzID0gcmVxdWlyZSgnLi9jaHVuay1FNEM3RVc0Ui5qcycpO1xuXG5cbnZhciBfY2h1bms2TlpXNFdLNGpzID0gcmVxdWlyZSgnLi9jaHVuay02TlpXNFdLNC5qcycpO1xuXG5cblxuXG5cbnZhciBfY2h1bmtESFZLRkRIUWpzID0gcmVxdWlyZSgnLi9jaHVuay1ESFZLRkRIUS5qcycpO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG52YXIgX2NodW5rUUVQVkhFUDdqcyA9IHJlcXVpcmUoJy4vY2h1bmstUUVQVkhFUDcuanMnKTtcblxuXG5cblxuXG52YXIgX2NodW5rNlpESFNPVVZqcyA9IHJlcXVpcmUoJy4vY2h1bmstNlpESFNPVVYuanMnKTtcblxuXG5cblxuXG5cbnZhciBfY2h1bmtJWkMyNjZIU2pzID0gcmVxdWlyZSgnLi9jaHVuay1JWkMyNjZIUy5qcycpO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxudmFyIF9jaHVua1FWRUtaUloyanMgPSByZXF1aXJlKCcuL2NodW5rLVFWRUtaUloyLmpzJyk7XG5cblxuXG52YXIgX2NodW5rWjJSR1dERDdqcyA9IHJlcXVpcmUoJy4vY2h1bmstWjJSR1dERDcuanMnKTtcbnJlcXVpcmUoJy4vY2h1bmstM1c1RzRDWUkuanMnKTtcbnJlcXVpcmUoJy4vY2h1bmstRVFNWkw0WFUuanMnKTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuZXhwb3J0cy5Bc3NlcnRpb25FcnJvciA9IF9jaHVuazZaREhTT1VWanMuQXNzZXJ0aW9uRXJyb3I7IGV4cG9ydHMuQ0FJUF9BQ0NPVU5UX0FERFJFU1NfUkVHRVggPSBfY2h1bmtZV0FJRDQ3M2pzLkNBSVBfQUNDT1VOVF9BRERSRVNTX1JFR0VYOyBleHBvcnRzLkNBSVBfQUNDT1VOVF9JRF9SRUdFWCA9IF9jaHVua1lXQUlENDczanMuQ0FJUF9BQ0NPVU5UX0lEX1JFR0VYOyBleHBvcnRzLkNBSVBfQ0hBSU5fSURfUkVHRVggPSBfY2h1bmtZV0FJRDQ3M2pzLkNBSVBfQ0hBSU5fSURfUkVHRVg7IGV4cG9ydHMuQ0FJUF9OQU1FU1BBQ0VfUkVHRVggPSBfY2h1bmtZV0FJRDQ3M2pzLkNBSVBfTkFNRVNQQUNFX1JFR0VYOyBleHBvcnRzLkNBSVBfUkVGRVJFTkNFX1JFR0VYID0gX2NodW5rWVdBSUQ0NzNqcy5DQUlQX1JFRkVSRU5DRV9SRUdFWDsgZXhwb3J0cy5DYWlwQWNjb3VudEFkZHJlc3NTdHJ1Y3QgPSBfY2h1bmtZV0FJRDQ3M2pzLkNhaXBBY2NvdW50QWRkcmVzc1N0cnVjdDsgZXhwb3J0cy5DYWlwQWNjb3VudElkU3RydWN0ID0gX2NodW5rWVdBSUQ0NzNqcy5DYWlwQWNjb3VudElkU3RydWN0OyBleHBvcnRzLkNhaXBDaGFpbklkU3RydWN0ID0gX2NodW5rWVdBSUQ0NzNqcy5DYWlwQ2hhaW5JZFN0cnVjdDsgZXhwb3J0cy5DYWlwTmFtZXNwYWNlU3RydWN0ID0gX2NodW5rWVdBSUQ0NzNqcy5DYWlwTmFtZXNwYWNlU3RydWN0OyBleHBvcnRzLkNhaXBSZWZlcmVuY2VTdHJ1Y3QgPSBfY2h1bmtZV0FJRDQ3M2pzLkNhaXBSZWZlcmVuY2VTdHJ1Y3Q7IGV4cG9ydHMuQ2hlY2tzdW1TdHJ1Y3QgPSBfY2h1bmtFNEM3RVc0UmpzLkNoZWNrc3VtU3RydWN0OyBleHBvcnRzLkR1cmF0aW9uID0gX2NodW5rNFJNWDVZV0Vqcy5EdXJhdGlvbjsgZXhwb3J0cy5FU0NBUEVfQ0hBUkFDVEVSU19SRUdFWFAgPSBfY2h1bmtRVkVLWlJaMmpzLkVTQ0FQRV9DSEFSQUNURVJTX1JFR0VYUDsgZXhwb3J0cy5Gcm96ZW5NYXAgPSBfY2h1bmtaMlJHV0REN2pzLkZyb3plbk1hcDsgZXhwb3J0cy5Gcm96ZW5TZXQgPSBfY2h1bmtaMlJHV0REN2pzLkZyb3plblNldDsgZXhwb3J0cy5IZXhBZGRyZXNzU3RydWN0ID0gX2NodW5rUUVQVkhFUDdqcy5IZXhBZGRyZXNzU3RydWN0OyBleHBvcnRzLkhleENoZWNrc3VtQWRkcmVzc1N0cnVjdCA9IF9jaHVua1FFUFZIRVA3anMuSGV4Q2hlY2tzdW1BZGRyZXNzU3RydWN0OyBleHBvcnRzLkhleFN0cnVjdCA9IF9jaHVua1FFUFZIRVA3anMuSGV4U3RydWN0OyBleHBvcnRzLkpzb25ScGNFcnJvclN0cnVjdCA9IF9jaHVua09MTEc0SDM1anMuSnNvblJwY0Vycm9yU3RydWN0OyBleHBvcnRzLkpzb25ScGNGYWlsdXJlU3RydWN0ID0gX2NodW5rT0xMRzRIMzVqcy5Kc29uUnBjRmFpbHVyZVN0cnVjdDsgZXhwb3J0cy5Kc29uUnBjSWRTdHJ1Y3QgPSBfY2h1bmtPTExHNEgzNWpzLkpzb25ScGNJZFN0cnVjdDsgZXhwb3J0cy5Kc29uUnBjTm90aWZpY2F0aW9uU3RydWN0ID0gX2NodW5rT0xMRzRIMzVqcy5Kc29uUnBjTm90aWZpY2F0aW9uU3RydWN0OyBleHBvcnRzLkpzb25ScGNQYXJhbXNTdHJ1Y3QgPSBfY2h1bmtPTExHNEgzNWpzLkpzb25ScGNQYXJhbXNTdHJ1Y3Q7IGV4cG9ydHMuSnNvblJwY1JlcXVlc3RTdHJ1Y3QgPSBfY2h1bmtPTExHNEgzNWpzLkpzb25ScGNSZXF1ZXN0U3RydWN0OyBleHBvcnRzLkpzb25ScGNSZXNwb25zZVN0cnVjdCA9IF9jaHVua09MTEc0SDM1anMuSnNvblJwY1Jlc3BvbnNlU3RydWN0OyBleHBvcnRzLkpzb25ScGNTdWNjZXNzU3RydWN0ID0gX2NodW5rT0xMRzRIMzVqcy5Kc29uUnBjU3VjY2Vzc1N0cnVjdDsgZXhwb3J0cy5Kc29uUnBjVmVyc2lvblN0cnVjdCA9IF9jaHVua09MTEc0SDM1anMuSnNvblJwY1ZlcnNpb25TdHJ1Y3Q7IGV4cG9ydHMuSnNvblNpemUgPSBfY2h1bmtRVkVLWlJaMmpzLkpzb25TaXplOyBleHBvcnRzLkpzb25TdHJ1Y3QgPSBfY2h1bmtPTExHNEgzNWpzLkpzb25TdHJ1Y3Q7IGV4cG9ydHMuS25vd25DYWlwTmFtZXNwYWNlID0gX2NodW5rWVdBSUQ0NzNqcy5Lbm93bkNhaXBOYW1lc3BhY2U7IGV4cG9ydHMuUGVuZGluZ0pzb25ScGNSZXNwb25zZVN0cnVjdCA9IF9jaHVua09MTEc0SDM1anMuUGVuZGluZ0pzb25ScGNSZXNwb25zZVN0cnVjdDsgZXhwb3J0cy5TdHJpY3RIZXhTdHJ1Y3QgPSBfY2h1bmtRRVBWSEVQN2pzLlN0cmljdEhleFN0cnVjdDsgZXhwb3J0cy5VbnNhZmVKc29uU3RydWN0ID0gX2NodW5rT0xMRzRIMzVqcy5VbnNhZmVKc29uU3RydWN0OyBleHBvcnRzLlZlcnNpb25SYW5nZVN0cnVjdCA9IF9jaHVuazRENlhRQkhBanMuVmVyc2lvblJhbmdlU3RydWN0OyBleHBvcnRzLlZlcnNpb25TdHJ1Y3QgPSBfY2h1bms0RDZYUUJIQWpzLlZlcnNpb25TdHJ1Y3Q7IGV4cG9ydHMuYWRkMHggPSBfY2h1bmtRRVBWSEVQN2pzLmFkZDB4OyBleHBvcnRzLmFzc2VydCA9IF9jaHVuazZaREhTT1VWanMuYXNzZXJ0OyBleHBvcnRzLmFzc2VydEV4aGF1c3RpdmUgPSBfY2h1bms2WkRIU09VVmpzLmFzc2VydEV4aGF1c3RpdmU7IGV4cG9ydHMuYXNzZXJ0SXNCeXRlcyA9IF9jaHVua1FFUFZIRVA3anMuYXNzZXJ0SXNCeXRlczsgZXhwb3J0cy5hc3NlcnRJc0hleFN0cmluZyA9IF9jaHVua1FFUFZIRVA3anMuYXNzZXJ0SXNIZXhTdHJpbmc7IGV4cG9ydHMuYXNzZXJ0SXNKc29uUnBjRXJyb3IgPSBfY2h1bmtPTExHNEgzNWpzLmFzc2VydElzSnNvblJwY0Vycm9yOyBleHBvcnRzLmFzc2VydElzSnNvblJwY0ZhaWx1cmUgPSBfY2h1bmtPTExHNEgzNWpzLmFzc2VydElzSnNvblJwY0ZhaWx1cmU7IGV4cG9ydHMuYXNzZXJ0SXNKc29uUnBjTm90aWZpY2F0aW9uID0gX2NodW5rT0xMRzRIMzVqcy5hc3NlcnRJc0pzb25ScGNOb3RpZmljYXRpb247IGV4cG9ydHMuYXNzZXJ0SXNKc29uUnBjUmVxdWVzdCA9IF9jaHVua09MTEc0SDM1anMuYXNzZXJ0SXNKc29uUnBjUmVxdWVzdDsgZXhwb3J0cy5hc3NlcnRJc0pzb25ScGNSZXNwb25zZSA9IF9jaHVua09MTEc0SDM1anMuYXNzZXJ0SXNKc29uUnBjUmVzcG9uc2U7IGV4cG9ydHMuYXNzZXJ0SXNKc29uUnBjU3VjY2VzcyA9IF9jaHVua09MTEc0SDM1anMuYXNzZXJ0SXNKc29uUnBjU3VjY2VzczsgZXhwb3J0cy5hc3NlcnRJc1BlbmRpbmdKc29uUnBjUmVzcG9uc2UgPSBfY2h1bmtPTExHNEgzNWpzLmFzc2VydElzUGVuZGluZ0pzb25ScGNSZXNwb25zZTsgZXhwb3J0cy5hc3NlcnRJc1NlbVZlclJhbmdlID0gX2NodW5rNEQ2WFFCSEFqcy5hc3NlcnRJc1NlbVZlclJhbmdlOyBleHBvcnRzLmFzc2VydElzU2VtVmVyVmVyc2lvbiA9IF9jaHVuazRENlhRQkhBanMuYXNzZXJ0SXNTZW1WZXJWZXJzaW9uOyBleHBvcnRzLmFzc2VydElzU3RyaWN0SGV4U3RyaW5nID0gX2NodW5rUUVQVkhFUDdqcy5hc3NlcnRJc1N0cmljdEhleFN0cmluZzsgZXhwb3J0cy5hc3NlcnRTdHJ1Y3QgPSBfY2h1bms2WkRIU09VVmpzLmFzc2VydFN0cnVjdDsgZXhwb3J0cy5iYXNlNjQgPSBfY2h1bms2TlpXNFdLNGpzLmJhc2U2NDsgZXhwb3J0cy5iYXNlNjRUb0J5dGVzID0gX2NodW5rUUVQVkhFUDdqcy5iYXNlNjRUb0J5dGVzOyBleHBvcnRzLmJpZ0ludFRvQnl0ZXMgPSBfY2h1bmtRRVBWSEVQN2pzLmJpZ0ludFRvQnl0ZXM7IGV4cG9ydHMuYmlnSW50VG9IZXggPSBfY2h1bmtWRlhUVk5YTmpzLmJpZ0ludFRvSGV4OyBleHBvcnRzLmJ5dGVzVG9CYXNlNjQgPSBfY2h1bmtRRVBWSEVQN2pzLmJ5dGVzVG9CYXNlNjQ7IGV4cG9ydHMuYnl0ZXNUb0JpZ0ludCA9IF9jaHVua1FFUFZIRVA3anMuYnl0ZXNUb0JpZ0ludDsgZXhwb3J0cy5ieXRlc1RvSGV4ID0gX2NodW5rUUVQVkhFUDdqcy5ieXRlc1RvSGV4OyBleHBvcnRzLmJ5dGVzVG9OdW1iZXIgPSBfY2h1bmtRRVBWSEVQN2pzLmJ5dGVzVG9OdW1iZXI7IGV4cG9ydHMuYnl0ZXNUb1NpZ25lZEJpZ0ludCA9IF9jaHVua1FFUFZIRVA3anMuYnl0ZXNUb1NpZ25lZEJpZ0ludDsgZXhwb3J0cy5ieXRlc1RvU3RyaW5nID0gX2NodW5rUUVQVkhFUDdqcy5ieXRlc1RvU3RyaW5nOyBleHBvcnRzLmNhbGN1bGF0ZU51bWJlclNpemUgPSBfY2h1bmtRVkVLWlJaMmpzLmNhbGN1bGF0ZU51bWJlclNpemU7IGV4cG9ydHMuY2FsY3VsYXRlU3RyaW5nU2l6ZSA9IF9jaHVua1FWRUtaUloyanMuY2FsY3VsYXRlU3RyaW5nU2l6ZTsgZXhwb3J0cy5jb25jYXRCeXRlcyA9IF9jaHVua1FFUFZIRVA3anMuY29uY2F0Qnl0ZXM7IGV4cG9ydHMuY3JlYXRlQmlnSW50ID0gX2NodW5rREhWS0ZESFFqcy5jcmVhdGVCaWdJbnQ7IGV4cG9ydHMuY3JlYXRlQnl0ZXMgPSBfY2h1bmtESFZLRkRIUWpzLmNyZWF0ZUJ5dGVzOyBleHBvcnRzLmNyZWF0ZURhdGFWaWV3ID0gX2NodW5rUUVQVkhFUDdqcy5jcmVhdGVEYXRhVmlldzsgZXhwb3J0cy5jcmVhdGVEZWZlcnJlZFByb21pc2UgPSBfY2h1bmtDNkhHRkVZTGpzLmNyZWF0ZURlZmVycmVkUHJvbWlzZTsgZXhwb3J0cy5jcmVhdGVIZXggPSBfY2h1bmtESFZLRkRIUWpzLmNyZWF0ZUhleDsgZXhwb3J0cy5jcmVhdGVNb2R1bGVMb2dnZXIgPSBfY2h1bmsyTEJHVDRHSGpzLmNyZWF0ZU1vZHVsZUxvZ2dlcjsgZXhwb3J0cy5jcmVhdGVOdW1iZXIgPSBfY2h1bmtESFZLRkRIUWpzLmNyZWF0ZU51bWJlcjsgZXhwb3J0cy5jcmVhdGVQcm9qZWN0TG9nZ2VyID0gX2NodW5rMkxCR1Q0R0hqcy5jcmVhdGVQcm9qZWN0TG9nZ2VyOyBleHBvcnRzLmV4YWN0T3B0aW9uYWwgPSBfY2h1bmtPTExHNEgzNWpzLmV4YWN0T3B0aW9uYWw7IGV4cG9ydHMuZ2V0Q2hlY2tzdW1BZGRyZXNzID0gX2NodW5rUUVQVkhFUDdqcy5nZXRDaGVja3N1bUFkZHJlc3M7IGV4cG9ydHMuZ2V0RXJyb3JNZXNzYWdlID0gX2NodW5rSVpDMjY2SFNqcy5nZXRFcnJvck1lc3NhZ2U7IGV4cG9ydHMuZ2V0SnNvblJwY0lkVmFsaWRhdG9yID0gX2NodW5rT0xMRzRIMzVqcy5nZXRKc29uUnBjSWRWYWxpZGF0b3I7IGV4cG9ydHMuZ2V0SnNvblNpemUgPSBfY2h1bmtPTExHNEgzNWpzLmdldEpzb25TaXplOyBleHBvcnRzLmdldEtub3duUHJvcGVydHlOYW1lcyA9IF9jaHVua1FWRUtaUloyanMuZ2V0S25vd25Qcm9wZXJ0eU5hbWVzOyBleHBvcnRzLmdldFNhZmVKc29uID0gX2NodW5rT0xMRzRIMzVqcy5nZXRTYWZlSnNvbjsgZXhwb3J0cy5ndFJhbmdlID0gX2NodW5rNEQ2WFFCSEFqcy5ndFJhbmdlOyBleHBvcnRzLmd0VmVyc2lvbiA9IF9jaHVuazRENlhRQkhBanMuZ3RWZXJzaW9uOyBleHBvcnRzLmhhc1Byb3BlcnR5ID0gX2NodW5rUVZFS1pSWjJqcy5oYXNQcm9wZXJ0eTsgZXhwb3J0cy5oZXhUb0JpZ0ludCA9IF9jaHVua1ZGWFRWTlhOanMuaGV4VG9CaWdJbnQ7IGV4cG9ydHMuaGV4VG9CeXRlcyA9IF9jaHVua1FFUFZIRVA3anMuaGV4VG9CeXRlczsgZXhwb3J0cy5oZXhUb051bWJlciA9IF9jaHVua1ZGWFRWTlhOanMuaGV4VG9OdW1iZXI7IGV4cG9ydHMuaW5NaWxsaXNlY29uZHMgPSBfY2h1bms0Uk1YNVlXRWpzLmluTWlsbGlzZWNvbmRzOyBleHBvcnRzLmlzQVNDSUkgPSBfY2h1bmtRVkVLWlJaMmpzLmlzQVNDSUk7IGV4cG9ydHMuaXNCeXRlcyA9IF9jaHVua1FFUFZIRVA3anMuaXNCeXRlczsgZXhwb3J0cy5pc0NhaXBBY2NvdW50QWRkcmVzcyA9IF9jaHVua1lXQUlENDczanMuaXNDYWlwQWNjb3VudEFkZHJlc3M7IGV4cG9ydHMuaXNDYWlwQWNjb3VudElkID0gX2NodW5rWVdBSUQ0NzNqcy5pc0NhaXBBY2NvdW50SWQ7IGV4cG9ydHMuaXNDYWlwQ2hhaW5JZCA9IF9jaHVua1lXQUlENDczanMuaXNDYWlwQ2hhaW5JZDsgZXhwb3J0cy5pc0NhaXBOYW1lc3BhY2UgPSBfY2h1bmtZV0FJRDQ3M2pzLmlzQ2FpcE5hbWVzcGFjZTsgZXhwb3J0cy5pc0NhaXBSZWZlcmVuY2UgPSBfY2h1bmtZV0FJRDQ3M2pzLmlzQ2FpcFJlZmVyZW5jZTsgZXhwb3J0cy5pc0Vycm9yV2l0aENvZGUgPSBfY2h1bmtJWkMyNjZIU2pzLmlzRXJyb3JXaXRoQ29kZTsgZXhwb3J0cy5pc0Vycm9yV2l0aE1lc3NhZ2UgPSBfY2h1bmtJWkMyNjZIU2pzLmlzRXJyb3JXaXRoTWVzc2FnZTsgZXhwb3J0cy5pc0Vycm9yV2l0aFN0YWNrID0gX2NodW5rSVpDMjY2SFNqcy5pc0Vycm9yV2l0aFN0YWNrOyBleHBvcnRzLmlzSGV4U3RyaW5nID0gX2NodW5rUUVQVkhFUDdqcy5pc0hleFN0cmluZzsgZXhwb3J0cy5pc0pzb25ScGNFcnJvciA9IF9jaHVua09MTEc0SDM1anMuaXNKc29uUnBjRXJyb3I7IGV4cG9ydHMuaXNKc29uUnBjRmFpbHVyZSA9IF9jaHVua09MTEc0SDM1anMuaXNKc29uUnBjRmFpbHVyZTsgZXhwb3J0cy5pc0pzb25ScGNOb3RpZmljYXRpb24gPSBfY2h1bmtPTExHNEgzNWpzLmlzSnNvblJwY05vdGlmaWNhdGlvbjsgZXhwb3J0cy5pc0pzb25ScGNSZXF1ZXN0ID0gX2NodW5rT0xMRzRIMzVqcy5pc0pzb25ScGNSZXF1ZXN0OyBleHBvcnRzLmlzSnNvblJwY1Jlc3BvbnNlID0gX2NodW5rT0xMRzRIMzVqcy5pc0pzb25ScGNSZXNwb25zZTsgZXhwb3J0cy5pc0pzb25ScGNTdWNjZXNzID0gX2NodW5rT0xMRzRIMzVqcy5pc0pzb25ScGNTdWNjZXNzOyBleHBvcnRzLmlzTm9uRW1wdHlBcnJheSA9IF9jaHVua1FWRUtaUloyanMuaXNOb25FbXB0eUFycmF5OyBleHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gX2NodW5rUVZFS1pSWjJqcy5pc051bGxPclVuZGVmaW5lZDsgZXhwb3J0cy5pc09iamVjdCA9IF9jaHVua1FWRUtaUloyanMuaXNPYmplY3Q7IGV4cG9ydHMuaXNQZW5kaW5nSnNvblJwY1Jlc3BvbnNlID0gX2NodW5rT0xMRzRIMzVqcy5pc1BlbmRpbmdKc29uUnBjUmVzcG9uc2U7IGV4cG9ydHMuaXNQbGFpbk9iamVjdCA9IF9jaHVua1FWRUtaUloyanMuaXNQbGFpbk9iamVjdDsgZXhwb3J0cy5pc1N0cmljdEhleFN0cmluZyA9IF9jaHVua1FFUFZIRVA3anMuaXNTdHJpY3RIZXhTdHJpbmc7IGV4cG9ydHMuaXNWYWxpZENoZWNrc3VtQWRkcmVzcyA9IF9jaHVua1FFUFZIRVA3anMuaXNWYWxpZENoZWNrc3VtQWRkcmVzczsgZXhwb3J0cy5pc1ZhbGlkSGV4QWRkcmVzcyA9IF9jaHVua1FFUFZIRVA3anMuaXNWYWxpZEhleEFkZHJlc3M7IGV4cG9ydHMuaXNWYWxpZEpzb24gPSBfY2h1bmtPTExHNEgzNWpzLmlzVmFsaWRKc29uOyBleHBvcnRzLmlzVmFsaWRTZW1WZXJSYW5nZSA9IF9jaHVuazRENlhRQkhBanMuaXNWYWxpZFNlbVZlclJhbmdlOyBleHBvcnRzLmlzVmFsaWRTZW1WZXJWZXJzaW9uID0gX2NodW5rNEQ2WFFCSEFqcy5pc1ZhbGlkU2VtVmVyVmVyc2lvbjsgZXhwb3J0cy5qc29ucnBjMiA9IF9jaHVua09MTEc0SDM1anMuanNvbnJwYzI7IGV4cG9ydHMubnVtYmVyVG9CeXRlcyA9IF9jaHVua1FFUFZIRVA3anMubnVtYmVyVG9CeXRlczsgZXhwb3J0cy5udW1iZXJUb0hleCA9IF9jaHVua1ZGWFRWTlhOanMubnVtYmVyVG9IZXg7IGV4cG9ydHMub2JqZWN0ID0gX2NodW5rT0xMRzRIMzVqcy5vYmplY3Q7IGV4cG9ydHMucGFyc2VDYWlwQWNjb3VudElkID0gX2NodW5rWVdBSUQ0NzNqcy5wYXJzZUNhaXBBY2NvdW50SWQ7IGV4cG9ydHMucGFyc2VDYWlwQ2hhaW5JZCA9IF9jaHVua1lXQUlENDczanMucGFyc2VDYWlwQ2hhaW5JZDsgZXhwb3J0cy5yZW1vdmUweCA9IF9jaHVua1FFUFZIRVA3anMucmVtb3ZlMHg7IGV4cG9ydHMuc2F0aXNmaWVzVmVyc2lvblJhbmdlID0gX2NodW5rNEQ2WFFCSEFqcy5zYXRpc2ZpZXNWZXJzaW9uUmFuZ2U7IGV4cG9ydHMuc2lnbmVkQmlnSW50VG9CeXRlcyA9IF9jaHVua1FFUFZIRVA3anMuc2lnbmVkQmlnSW50VG9CeXRlczsgZXhwb3J0cy5zdHJpbmdUb0J5dGVzID0gX2NodW5rUUVQVkhFUDdqcy5zdHJpbmdUb0J5dGVzOyBleHBvcnRzLnRpbWVTaW5jZSA9IF9jaHVuazRSTVg1WVdFanMudGltZVNpbmNlOyBleHBvcnRzLnRvQ2FpcENoYWluSWQgPSBfY2h1bmtZV0FJRDQ3M2pzLnRvQ2FpcENoYWluSWQ7IGV4cG9ydHMudmFsdWVUb0J5dGVzID0gX2NodW5rUUVQVkhFUDdqcy52YWx1ZVRvQnl0ZXM7IGV4cG9ydHMud3JhcEVycm9yID0gX2NodW5rSVpDMjY2SFNqcy53cmFwRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-KYP27U3C.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@metamask/rpc-errors/dist/chunk-KYP27U3C.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   providerErrors: () => (/* binding */ providerErrors),\n/* harmony export */   rpcErrors: () => (/* binding */ rpcErrors)\n/* harmony export */ });\n/* harmony import */ var _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-XSKO3GXZ.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-XSKO3GXZ.mjs\");\n/* harmony import */ var _chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-MPU3CVX3.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs\");\n/* harmony import */ var _chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-MIW4NMY6.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs\");\n\n\n\n\n// src/errors.ts\nvar rpcErrors = {\n  /**\n   * Get a JSON RPC 2.0 Parse (-32700) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  parse: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.parse, arg),\n  /**\n   * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidRequest: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.invalidRequest, arg),\n  /**\n   * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidParams: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.invalidParams, arg),\n  /**\n   * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  methodNotFound: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.methodNotFound, arg),\n  /**\n   * Get a JSON RPC 2.0 Internal (-32603) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  internal: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.internal, arg),\n  /**\n   * Get a JSON RPC 2.0 Server error.\n   * Permits integer error codes in the [ -32099 <= -32005 ] range.\n   * Codes -32000 through -32004 are reserved by EIP-1474.\n   *\n   * @param opts - The error options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  server: (opts) => {\n    if (!opts || typeof opts !== \"object\" || Array.isArray(opts)) {\n      throw new Error(\n        \"Ethereum RPC Server errors must provide single object argument.\"\n      );\n    }\n    const { code } = opts;\n    if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n      throw new Error(\n        '\"code\" must be an integer such that: -32099 <= code <= -32005'\n      );\n    }\n    return getJsonRpcError(code, opts);\n  },\n  /**\n   * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidInput: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.invalidInput, arg),\n  /**\n   * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  resourceNotFound: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.resourceNotFound, arg),\n  /**\n   * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  resourceUnavailable: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.resourceUnavailable, arg),\n  /**\n   * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  transactionRejected: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.transactionRejected, arg),\n  /**\n   * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  methodNotSupported: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.methodNotSupported, arg),\n  /**\n   * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  limitExceeded: (arg) => getJsonRpcError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.rpc.limitExceeded, arg)\n};\nvar providerErrors = {\n  /**\n   * Get an Ethereum Provider User Rejected Request (4001) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  userRejectedRequest: (arg) => {\n    return getEthProviderError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.provider.userRejectedRequest, arg);\n  },\n  /**\n   * Get an Ethereum Provider Unauthorized (4100) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  unauthorized: (arg) => {\n    return getEthProviderError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.provider.unauthorized, arg);\n  },\n  /**\n   * Get an Ethereum Provider Unsupported Method (4200) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  unsupportedMethod: (arg) => {\n    return getEthProviderError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.provider.unsupportedMethod, arg);\n  },\n  /**\n   * Get an Ethereum Provider Not Connected (4900) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  disconnected: (arg) => {\n    return getEthProviderError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.provider.disconnected, arg);\n  },\n  /**\n   * Get an Ethereum Provider Chain Not Connected (4901) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  chainDisconnected: (arg) => {\n    return getEthProviderError(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_2__.errorCodes.provider.chainDisconnected, arg);\n  },\n  /**\n   * Get a custom Ethereum Provider error.\n   *\n   * @param opts - The error options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  custom: (opts) => {\n    if (!opts || typeof opts !== \"object\" || Array.isArray(opts)) {\n      throw new Error(\n        \"Ethereum Provider custom errors must provide single object argument.\"\n      );\n    }\n    const { code, message, data } = opts;\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string');\n    }\n    return new _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_0__.EthereumProviderError(code, message, data);\n  }\n};\nfunction getJsonRpcError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_0__.JsonRpcError(code, message ?? (0,_chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_1__.getMessageFromCode)(code), data);\n}\nfunction getEthProviderError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_0__.EthereumProviderError(\n    code,\n    message ?? (0,_chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_1__.getMessageFromCode)(code),\n    data\n  );\n}\nfunction parseOpts(arg) {\n  if (arg) {\n    if (typeof arg === \"string\") {\n      return [arg];\n    } else if (typeof arg === \"object\" && !Array.isArray(arg)) {\n      const { message, data } = arg;\n      if (message && typeof message !== \"string\") {\n        throw new Error(\"Must specify string message.\");\n      }\n      return [message ?? void 0, data];\n    }\n  }\n  return [];\n}\n\n\n//# sourceMappingURL=chunk-KYP27U3C.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-KYP27U3C.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorCodes: () => (/* binding */ errorCodes),\n/* harmony export */   errorValues: () => (/* binding */ errorValues)\n/* harmony export */ });\n// src/error-constants.ts\nvar errorCodes = {\n  rpc: {\n    invalidInput: -32e3,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    limitExceeded: -32005,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n    disconnected: 4900,\n    chainDisconnected: 4901\n  }\n};\nvar errorValues = {\n  \"-32700\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.\"\n  },\n  \"-32600\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"The JSON sent is not a valid Request object.\"\n  },\n  \"-32601\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"The method does not exist / is not available.\"\n  },\n  \"-32602\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Invalid method parameter(s).\"\n  },\n  \"-32603\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Internal JSON-RPC error.\"\n  },\n  \"-32000\": {\n    standard: \"EIP-1474\",\n    message: \"Invalid input.\"\n  },\n  \"-32001\": {\n    standard: \"EIP-1474\",\n    message: \"Resource not found.\"\n  },\n  \"-32002\": {\n    standard: \"EIP-1474\",\n    message: \"Resource unavailable.\"\n  },\n  \"-32003\": {\n    standard: \"EIP-1474\",\n    message: \"Transaction rejected.\"\n  },\n  \"-32004\": {\n    standard: \"EIP-1474\",\n    message: \"Method not supported.\"\n  },\n  \"-32005\": {\n    standard: \"EIP-1474\",\n    message: \"Request limit exceeded.\"\n  },\n  \"4001\": {\n    standard: \"EIP-1193\",\n    message: \"User rejected the request.\"\n  },\n  \"4100\": {\n    standard: \"EIP-1193\",\n    message: \"The requested account and/or method has not been authorized by the user.\"\n  },\n  \"4200\": {\n    standard: \"EIP-1193\",\n    message: \"The requested method is not supported by this Ethereum provider.\"\n  },\n  \"4900\": {\n    standard: \"EIP-1193\",\n    message: \"The provider is disconnected from all chains.\"\n  },\n  \"4901\": {\n    standard: \"EIP-1193\",\n    message: \"The provider is disconnected from the specified chain.\"\n  }\n};\n\n\n//# sourceMappingURL=chunk-MIW4NMY6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3JwYy1lcnJvcnMvZGlzdC9jaHVuay1NSVc0Tk1ZNi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svcnBjLWVycm9ycy9kaXN0L2NodW5rLU1JVzROTVk2Lm1qcz85YTc1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lcnJvci1jb25zdGFudHMudHNcbnZhciBlcnJvckNvZGVzID0ge1xuICBycGM6IHtcbiAgICBpbnZhbGlkSW5wdXQ6IC0zMmUzLFxuICAgIHJlc291cmNlTm90Rm91bmQ6IC0zMjAwMSxcbiAgICByZXNvdXJjZVVuYXZhaWxhYmxlOiAtMzIwMDIsXG4gICAgdHJhbnNhY3Rpb25SZWplY3RlZDogLTMyMDAzLFxuICAgIG1ldGhvZE5vdFN1cHBvcnRlZDogLTMyMDA0LFxuICAgIGxpbWl0RXhjZWVkZWQ6IC0zMjAwNSxcbiAgICBwYXJzZTogLTMyNzAwLFxuICAgIGludmFsaWRSZXF1ZXN0OiAtMzI2MDAsXG4gICAgbWV0aG9kTm90Rm91bmQ6IC0zMjYwMSxcbiAgICBpbnZhbGlkUGFyYW1zOiAtMzI2MDIsXG4gICAgaW50ZXJuYWw6IC0zMjYwM1xuICB9LFxuICBwcm92aWRlcjoge1xuICAgIHVzZXJSZWplY3RlZFJlcXVlc3Q6IDQwMDEsXG4gICAgdW5hdXRob3JpemVkOiA0MTAwLFxuICAgIHVuc3VwcG9ydGVkTWV0aG9kOiA0MjAwLFxuICAgIGRpc2Nvbm5lY3RlZDogNDkwMCxcbiAgICBjaGFpbkRpc2Nvbm5lY3RlZDogNDkwMVxuICB9XG59O1xudmFyIGVycm9yVmFsdWVzID0ge1xuICBcIi0zMjcwMFwiOiB7XG4gICAgc3RhbmRhcmQ6IFwiSlNPTiBSUEMgMi4wXCIsXG4gICAgbWVzc2FnZTogXCJJbnZhbGlkIEpTT04gd2FzIHJlY2VpdmVkIGJ5IHRoZSBzZXJ2ZXIuIEFuIGVycm9yIG9jY3VycmVkIG9uIHRoZSBzZXJ2ZXIgd2hpbGUgcGFyc2luZyB0aGUgSlNPTiB0ZXh0LlwiXG4gIH0sXG4gIFwiLTMyNjAwXCI6IHtcbiAgICBzdGFuZGFyZDogXCJKU09OIFJQQyAyLjBcIixcbiAgICBtZXNzYWdlOiBcIlRoZSBKU09OIHNlbnQgaXMgbm90IGEgdmFsaWQgUmVxdWVzdCBvYmplY3QuXCJcbiAgfSxcbiAgXCItMzI2MDFcIjoge1xuICAgIHN0YW5kYXJkOiBcIkpTT04gUlBDIDIuMFwiLFxuICAgIG1lc3NhZ2U6IFwiVGhlIG1ldGhvZCBkb2VzIG5vdCBleGlzdCAvIGlzIG5vdCBhdmFpbGFibGUuXCJcbiAgfSxcbiAgXCItMzI2MDJcIjoge1xuICAgIHN0YW5kYXJkOiBcIkpTT04gUlBDIDIuMFwiLFxuICAgIG1lc3NhZ2U6IFwiSW52YWxpZCBtZXRob2QgcGFyYW1ldGVyKHMpLlwiXG4gIH0sXG4gIFwiLTMyNjAzXCI6IHtcbiAgICBzdGFuZGFyZDogXCJKU09OIFJQQyAyLjBcIixcbiAgICBtZXNzYWdlOiBcIkludGVybmFsIEpTT04tUlBDIGVycm9yLlwiXG4gIH0sXG4gIFwiLTMyMDAwXCI6IHtcbiAgICBzdGFuZGFyZDogXCJFSVAtMTQ3NFwiLFxuICAgIG1lc3NhZ2U6IFwiSW52YWxpZCBpbnB1dC5cIlxuICB9LFxuICBcIi0zMjAwMVwiOiB7XG4gICAgc3RhbmRhcmQ6IFwiRUlQLTE0NzRcIixcbiAgICBtZXNzYWdlOiBcIlJlc291cmNlIG5vdCBmb3VuZC5cIlxuICB9LFxuICBcIi0zMjAwMlwiOiB7XG4gICAgc3RhbmRhcmQ6IFwiRUlQLTE0NzRcIixcbiAgICBtZXNzYWdlOiBcIlJlc291cmNlIHVuYXZhaWxhYmxlLlwiXG4gIH0sXG4gIFwiLTMyMDAzXCI6IHtcbiAgICBzdGFuZGFyZDogXCJFSVAtMTQ3NFwiLFxuICAgIG1lc3NhZ2U6IFwiVHJhbnNhY3Rpb24gcmVqZWN0ZWQuXCJcbiAgfSxcbiAgXCItMzIwMDRcIjoge1xuICAgIHN0YW5kYXJkOiBcIkVJUC0xNDc0XCIsXG4gICAgbWVzc2FnZTogXCJNZXRob2Qgbm90IHN1cHBvcnRlZC5cIlxuICB9LFxuICBcIi0zMjAwNVwiOiB7XG4gICAgc3RhbmRhcmQ6IFwiRUlQLTE0NzRcIixcbiAgICBtZXNzYWdlOiBcIlJlcXVlc3QgbGltaXQgZXhjZWVkZWQuXCJcbiAgfSxcbiAgXCI0MDAxXCI6IHtcbiAgICBzdGFuZGFyZDogXCJFSVAtMTE5M1wiLFxuICAgIG1lc3NhZ2U6IFwiVXNlciByZWplY3RlZCB0aGUgcmVxdWVzdC5cIlxuICB9LFxuICBcIjQxMDBcIjoge1xuICAgIHN0YW5kYXJkOiBcIkVJUC0xMTkzXCIsXG4gICAgbWVzc2FnZTogXCJUaGUgcmVxdWVzdGVkIGFjY291bnQgYW5kL29yIG1ldGhvZCBoYXMgbm90IGJlZW4gYXV0aG9yaXplZCBieSB0aGUgdXNlci5cIlxuICB9LFxuICBcIjQyMDBcIjoge1xuICAgIHN0YW5kYXJkOiBcIkVJUC0xMTkzXCIsXG4gICAgbWVzc2FnZTogXCJUaGUgcmVxdWVzdGVkIG1ldGhvZCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgRXRoZXJldW0gcHJvdmlkZXIuXCJcbiAgfSxcbiAgXCI0OTAwXCI6IHtcbiAgICBzdGFuZGFyZDogXCJFSVAtMTE5M1wiLFxuICAgIG1lc3NhZ2U6IFwiVGhlIHByb3ZpZGVyIGlzIGRpc2Nvbm5lY3RlZCBmcm9tIGFsbCBjaGFpbnMuXCJcbiAgfSxcbiAgXCI0OTAxXCI6IHtcbiAgICBzdGFuZGFyZDogXCJFSVAtMTE5M1wiLFxuICAgIG1lc3NhZ2U6IFwiVGhlIHByb3ZpZGVyIGlzIGRpc2Nvbm5lY3RlZCBmcm9tIHRoZSBzcGVjaWZpZWQgY2hhaW4uXCJcbiAgfVxufTtcblxuZXhwb3J0IHtcbiAgZXJyb3JDb2RlcyxcbiAgZXJyb3JWYWx1ZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1NSVc0Tk1ZNi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSON_RPC_SERVER_ERROR_MESSAGE: () => (/* binding */ JSON_RPC_SERVER_ERROR_MESSAGE),\n/* harmony export */   getMessageFromCode: () => (/* binding */ getMessageFromCode),\n/* harmony export */   isValidCode: () => (/* binding */ isValidCode),\n/* harmony export */   serializeCause: () => (/* binding */ serializeCause),\n/* harmony export */   serializeError: () => (/* binding */ serializeError)\n/* harmony export */ });\n/* harmony import */ var _chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-MIW4NMY6.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs\");\n/* harmony import */ var _metamask_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs\");\n/* harmony import */ var _metamask_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-6C35XQOF.mjs\");\n\n\n// src/utils.ts\n\nvar FALLBACK_ERROR_CODE = _chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_0__.errorCodes.rpc.internal;\nvar FALLBACK_MESSAGE = \"Unspecified error message. This is a bug, please report it.\";\nvar FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n};\nvar JSON_RPC_SERVER_ERROR_MESSAGE = \"Unspecified server error.\";\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n  if (isValidCode(code)) {\n    const codeString = code.toString();\n    if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_1__.hasProperty)(_chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_0__.errorValues, codeString)) {\n      return _chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_0__.errorValues[codeString].message;\n    }\n    if (isJsonRpcServerError(code)) {\n      return JSON_RPC_SERVER_ERROR_MESSAGE;\n    }\n  }\n  return fallbackMessage;\n}\nfunction isValidCode(code) {\n  return Number.isInteger(code);\n}\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = true } = {}) {\n  if (!(0,_metamask_utils__WEBPACK_IMPORTED_MODULE_2__.isJsonRpcError)(fallbackError)) {\n    throw new Error(\n      \"Must provide fallback error with integer number code and string message.\"\n    );\n  }\n  const serialized = buildError(error, fallbackError);\n  if (!shouldIncludeStack) {\n    delete serialized.stack;\n  }\n  return serialized;\n}\nfunction buildError(error, fallbackError) {\n  if (error && typeof error === \"object\" && \"serialize\" in error && typeof error.serialize === \"function\") {\n    return error.serialize();\n  }\n  if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_2__.isJsonRpcError)(error)) {\n    return error;\n  }\n  const cause = serializeCause(error);\n  const fallbackWithCause = {\n    ...fallbackError,\n    data: { cause }\n  };\n  return fallbackWithCause;\n}\nfunction isJsonRpcServerError(code) {\n  return code >= -32099 && code <= -32e3;\n}\nfunction serializeCause(error) {\n  if (Array.isArray(error)) {\n    return error.map((entry) => {\n      if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_2__.isValidJson)(entry)) {\n        return entry;\n      } else if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(entry)) {\n        return serializeObject(entry);\n      }\n      return null;\n    });\n  } else if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(error)) {\n    return serializeObject(error);\n  }\n  if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_2__.isValidJson)(error)) {\n    return error;\n  }\n  return null;\n}\nfunction serializeObject(object) {\n  return Object.getOwnPropertyNames(object).reduce(\n    (acc, key) => {\n      const value = object[key];\n      if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_2__.isValidJson)(value)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {}\n  );\n}\n\n\n//# sourceMappingURL=chunk-MPU3CVX3.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3JwYy1lcnJvcnMvZGlzdC9jaHVuay1NUFUzQ1ZYMy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHOEI7O0FBRTlCO0FBTXlCO0FBQ3pCLDBCQUEwQiwyREFBVTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFXLENBQUMsNERBQVc7QUFDL0IsYUFBYSw0REFBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw0REFBNEQsSUFBSTtBQUNqRyxPQUFPLCtEQUFjO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLCtEQUFjO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw0REFBVztBQUNyQjtBQUNBLFFBQVEsU0FBUyx5REFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxTQUFTLHlEQUFRO0FBQ3JCO0FBQ0E7QUFDQSxNQUFNLDREQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDREQUFXO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBUUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svcnBjLWVycm9ycy9kaXN0L2NodW5rLU1QVTNDVlgzLm1qcz83ZTMxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGVycm9yQ29kZXMsXG4gIGVycm9yVmFsdWVzXG59IGZyb20gXCIuL2NodW5rLU1JVzROTVk2Lm1qc1wiO1xuXG4vLyBzcmMvdXRpbHMudHNcbmltcG9ydCB7XG4gIGhhc1Byb3BlcnR5LFxuICBpc1ZhbGlkSnNvbixcbiAgaXNPYmplY3QsXG4gIGlzSnNvblJwY0Vycm9yXG59IGZyb20gXCJAbWV0YW1hc2svdXRpbHNcIjtcbnZhciBGQUxMQkFDS19FUlJPUl9DT0RFID0gZXJyb3JDb2Rlcy5ycGMuaW50ZXJuYWw7XG52YXIgRkFMTEJBQ0tfTUVTU0FHRSA9IFwiVW5zcGVjaWZpZWQgZXJyb3IgbWVzc2FnZS4gVGhpcyBpcyBhIGJ1ZywgcGxlYXNlIHJlcG9ydCBpdC5cIjtcbnZhciBGQUxMQkFDS19FUlJPUiA9IHtcbiAgY29kZTogRkFMTEJBQ0tfRVJST1JfQ09ERSxcbiAgbWVzc2FnZTogZ2V0TWVzc2FnZUZyb21Db2RlKEZBTExCQUNLX0VSUk9SX0NPREUpXG59O1xudmFyIEpTT05fUlBDX1NFUlZFUl9FUlJPUl9NRVNTQUdFID0gXCJVbnNwZWNpZmllZCBzZXJ2ZXIgZXJyb3IuXCI7XG5mdW5jdGlvbiBnZXRNZXNzYWdlRnJvbUNvZGUoY29kZSwgZmFsbGJhY2tNZXNzYWdlID0gRkFMTEJBQ0tfTUVTU0FHRSkge1xuICBpZiAoaXNWYWxpZENvZGUoY29kZSkpIHtcbiAgICBjb25zdCBjb2RlU3RyaW5nID0gY29kZS50b1N0cmluZygpO1xuICAgIGlmIChoYXNQcm9wZXJ0eShlcnJvclZhbHVlcywgY29kZVN0cmluZykpIHtcbiAgICAgIHJldHVybiBlcnJvclZhbHVlc1tjb2RlU3RyaW5nXS5tZXNzYWdlO1xuICAgIH1cbiAgICBpZiAoaXNKc29uUnBjU2VydmVyRXJyb3IoY29kZSkpIHtcbiAgICAgIHJldHVybiBKU09OX1JQQ19TRVJWRVJfRVJST1JfTUVTU0FHRTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbGxiYWNrTWVzc2FnZTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRDb2RlKGNvZGUpIHtcbiAgcmV0dXJuIE51bWJlci5pc0ludGVnZXIoY29kZSk7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVFcnJvcihlcnJvciwgeyBmYWxsYmFja0Vycm9yID0gRkFMTEJBQ0tfRVJST1IsIHNob3VsZEluY2x1ZGVTdGFjayA9IHRydWUgfSA9IHt9KSB7XG4gIGlmICghaXNKc29uUnBjRXJyb3IoZmFsbGJhY2tFcnJvcikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIk11c3QgcHJvdmlkZSBmYWxsYmFjayBlcnJvciB3aXRoIGludGVnZXIgbnVtYmVyIGNvZGUgYW5kIHN0cmluZyBtZXNzYWdlLlwiXG4gICAgKTtcbiAgfVxuICBjb25zdCBzZXJpYWxpemVkID0gYnVpbGRFcnJvcihlcnJvciwgZmFsbGJhY2tFcnJvcik7XG4gIGlmICghc2hvdWxkSW5jbHVkZVN0YWNrKSB7XG4gICAgZGVsZXRlIHNlcmlhbGl6ZWQuc3RhY2s7XG4gIH1cbiAgcmV0dXJuIHNlcmlhbGl6ZWQ7XG59XG5mdW5jdGlvbiBidWlsZEVycm9yKGVycm9yLCBmYWxsYmFja0Vycm9yKSB7XG4gIGlmIChlcnJvciAmJiB0eXBlb2YgZXJyb3IgPT09IFwib2JqZWN0XCIgJiYgXCJzZXJpYWxpemVcIiBpbiBlcnJvciAmJiB0eXBlb2YgZXJyb3Iuc2VyaWFsaXplID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gZXJyb3Iuc2VyaWFsaXplKCk7XG4gIH1cbiAgaWYgKGlzSnNvblJwY0Vycm9yKGVycm9yKSkge1xuICAgIHJldHVybiBlcnJvcjtcbiAgfVxuICBjb25zdCBjYXVzZSA9IHNlcmlhbGl6ZUNhdXNlKGVycm9yKTtcbiAgY29uc3QgZmFsbGJhY2tXaXRoQ2F1c2UgPSB7XG4gICAgLi4uZmFsbGJhY2tFcnJvcixcbiAgICBkYXRhOiB7IGNhdXNlIH1cbiAgfTtcbiAgcmV0dXJuIGZhbGxiYWNrV2l0aENhdXNlO1xufVxuZnVuY3Rpb24gaXNKc29uUnBjU2VydmVyRXJyb3IoY29kZSkge1xuICByZXR1cm4gY29kZSA+PSAtMzIwOTkgJiYgY29kZSA8PSAtMzJlMztcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUNhdXNlKGVycm9yKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGVycm9yKSkge1xuICAgIHJldHVybiBlcnJvci5tYXAoKGVudHJ5KSA9PiB7XG4gICAgICBpZiAoaXNWYWxpZEpzb24oZW50cnkpKSB7XG4gICAgICAgIHJldHVybiBlbnRyeTtcbiAgICAgIH0gZWxzZSBpZiAoaXNPYmplY3QoZW50cnkpKSB7XG4gICAgICAgIHJldHVybiBzZXJpYWxpemVPYmplY3QoZW50cnkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoaXNPYmplY3QoZXJyb3IpKSB7XG4gICAgcmV0dXJuIHNlcmlhbGl6ZU9iamVjdChlcnJvcik7XG4gIH1cbiAgaWYgKGlzVmFsaWRKc29uKGVycm9yKSkge1xuICAgIHJldHVybiBlcnJvcjtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZU9iamVjdChvYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iamVjdCkucmVkdWNlKFxuICAgIChhY2MsIGtleSkgPT4ge1xuICAgICAgY29uc3QgdmFsdWUgPSBvYmplY3Rba2V5XTtcbiAgICAgIGlmIChpc1ZhbGlkSnNvbih2YWx1ZSkpIHtcbiAgICAgICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSxcbiAgICB7fVxuICApO1xufVxuXG5leHBvcnQge1xuICBKU09OX1JQQ19TRVJWRVJfRVJST1JfTUVTU0FHRSxcbiAgZ2V0TWVzc2FnZUZyb21Db2RlLFxuICBpc1ZhbGlkQ29kZSxcbiAgc2VyaWFsaXplRXJyb3IsXG4gIHNlcmlhbGl6ZUNhdXNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstTVBVM0NWWDMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-XSKO3GXZ.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@metamask/rpc-errors/dist/chunk-XSKO3GXZ.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProviderError: () => (/* binding */ EthereumProviderError),\n/* harmony export */   JsonRpcError: () => (/* binding */ JsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-MPU3CVX3.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs\");\n/* harmony import */ var _metamask_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @metamask/utils */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs\");\n/* harmony import */ var fast_safe_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fast-safe-stringify */ \"(ssr)/./node_modules/fast-safe-stringify/index.js\");\n\n\n// src/classes.ts\n\n\nvar JsonRpcError = class extends Error {\n  constructor(code, message, data) {\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a non-empty string.');\n    }\n    super(message);\n    this.code = code;\n    if (data !== void 0) {\n      this.data = data;\n    }\n  }\n  /**\n   * Get the error as JSON-serializable object.\n   *\n   * @returns A plain object with all public class properties.\n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message\n    };\n    if (this.data !== void 0) {\n      serialized.data = this.data;\n      if ((0,_metamask_utils__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(this.data)) {\n        serialized.data.cause = (0,_chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_0__.serializeCause)(this.data.cause);\n      }\n    }\n    if (this.stack) {\n      serialized.stack = this.stack;\n    }\n    return serialized;\n  }\n  /**\n   * Get a string representation of the serialized error, omitting any circular\n   * references.\n   *\n   * @returns A string representation of the serialized error.\n   */\n  toString() {\n    return fast_safe_stringify__WEBPACK_IMPORTED_MODULE_1__(this.serialize(), stringifyReplacer, 2);\n  }\n};\nvar EthereumProviderError = class extends JsonRpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   *\n   * @param code - The JSON-RPC error code. Must be an integer in the\n   * `1000 <= n <= 4999` range.\n   * @param message - The JSON-RPC error message.\n   * @param data - Optional data to include in the error.\n   */\n  constructor(code, message, data) {\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      );\n    }\n    super(code, message, data);\n  }\n};\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1e3 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n  if (value === \"[Circular]\") {\n    return void 0;\n  }\n  return value;\n}\n\n\n//# sourceMappingURL=chunk-XSKO3GXZ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3JwYy1lcnJvcnMvZGlzdC9jaHVuay1YU0tPM0dYWi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFOEI7O0FBRTlCO0FBQ2dEO0FBQ0E7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOERBQWE7QUFDdkIsZ0NBQWdDLG1FQUFjO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdEQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svcnBjLWVycm9ycy9kaXN0L2NodW5rLVhTS08zR1haLm1qcz8yMDJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHNlcmlhbGl6ZUNhdXNlXG59IGZyb20gXCIuL2NodW5rLU1QVTNDVlgzLm1qc1wiO1xuXG4vLyBzcmMvY2xhc3Nlcy50c1xuaW1wb3J0IHsgaXNQbGFpbk9iamVjdCB9IGZyb20gXCJAbWV0YW1hc2svdXRpbHNcIjtcbmltcG9ydCBzYWZlU3RyaW5naWZ5IGZyb20gXCJmYXN0LXNhZmUtc3RyaW5naWZ5XCI7XG52YXIgSnNvblJwY0Vycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKGNvZGUsIG1lc3NhZ2UsIGRhdGEpIHtcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoY29kZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJjb2RlXCIgbXVzdCBiZSBhbiBpbnRlZ2VyLicpO1xuICAgIH1cbiAgICBpZiAoIW1lc3NhZ2UgfHwgdHlwZW9mIG1lc3NhZ2UgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJtZXNzYWdlXCIgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcuJyk7XG4gICAgfVxuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgaWYgKGRhdGEgIT09IHZvaWQgMCkge1xuICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIEdldCB0aGUgZXJyb3IgYXMgSlNPTi1zZXJpYWxpemFibGUgb2JqZWN0LlxuICAgKlxuICAgKiBAcmV0dXJucyBBIHBsYWluIG9iamVjdCB3aXRoIGFsbCBwdWJsaWMgY2xhc3MgcHJvcGVydGllcy5cbiAgICovXG4gIHNlcmlhbGl6ZSgpIHtcbiAgICBjb25zdCBzZXJpYWxpemVkID0ge1xuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlXG4gICAgfTtcbiAgICBpZiAodGhpcy5kYXRhICE9PSB2b2lkIDApIHtcbiAgICAgIHNlcmlhbGl6ZWQuZGF0YSA9IHRoaXMuZGF0YTtcbiAgICAgIGlmIChpc1BsYWluT2JqZWN0KHRoaXMuZGF0YSkpIHtcbiAgICAgICAgc2VyaWFsaXplZC5kYXRhLmNhdXNlID0gc2VyaWFsaXplQ2F1c2UodGhpcy5kYXRhLmNhdXNlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRoaXMuc3RhY2spIHtcbiAgICAgIHNlcmlhbGl6ZWQuc3RhY2sgPSB0aGlzLnN0YWNrO1xuICAgIH1cbiAgICByZXR1cm4gc2VyaWFsaXplZDtcbiAgfVxuICAvKipcbiAgICogR2V0IGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBzZXJpYWxpemVkIGVycm9yLCBvbWl0dGluZyBhbnkgY2lyY3VsYXJcbiAgICogcmVmZXJlbmNlcy5cbiAgICpcbiAgICogQHJldHVybnMgQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHNlcmlhbGl6ZWQgZXJyb3IuXG4gICAqL1xuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gc2FmZVN0cmluZ2lmeSh0aGlzLnNlcmlhbGl6ZSgpLCBzdHJpbmdpZnlSZXBsYWNlciwgMik7XG4gIH1cbn07XG52YXIgRXRoZXJldW1Qcm92aWRlckVycm9yID0gY2xhc3MgZXh0ZW5kcyBKc29uUnBjRXJyb3Ige1xuICAvKipcbiAgICogQ3JlYXRlIGFuIEV0aGVyZXVtIFByb3ZpZGVyIEpTT04tUlBDIGVycm9yLlxuICAgKlxuICAgKiBAcGFyYW0gY29kZSAtIFRoZSBKU09OLVJQQyBlcnJvciBjb2RlLiBNdXN0IGJlIGFuIGludGVnZXIgaW4gdGhlXG4gICAqIGAxMDAwIDw9IG4gPD0gNDk5OWAgcmFuZ2UuXG4gICAqIEBwYXJhbSBtZXNzYWdlIC0gVGhlIEpTT04tUlBDIGVycm9yIG1lc3NhZ2UuXG4gICAqIEBwYXJhbSBkYXRhIC0gT3B0aW9uYWwgZGF0YSB0byBpbmNsdWRlIGluIHRoZSBlcnJvci5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGNvZGUsIG1lc3NhZ2UsIGRhdGEpIHtcbiAgICBpZiAoIWlzVmFsaWRFdGhQcm92aWRlckNvZGUoY29kZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1wiY29kZVwiIG11c3QgYmUgYW4gaW50ZWdlciBzdWNoIHRoYXQ6IDEwMDAgPD0gY29kZSA8PSA0OTk5J1xuICAgICAgKTtcbiAgICB9XG4gICAgc3VwZXIoY29kZSwgbWVzc2FnZSwgZGF0YSk7XG4gIH1cbn07XG5mdW5jdGlvbiBpc1ZhbGlkRXRoUHJvdmlkZXJDb2RlKGNvZGUpIHtcbiAgcmV0dXJuIE51bWJlci5pc0ludGVnZXIoY29kZSkgJiYgY29kZSA+PSAxZTMgJiYgY29kZSA8PSA0OTk5O1xufVxuZnVuY3Rpb24gc3RyaW5naWZ5UmVwbGFjZXIoXywgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBcIltDaXJjdWxhcl1cIikge1xuICAgIHJldHVybiB2b2lkIDA7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5leHBvcnQge1xuICBKc29uUnBjRXJyb3IsXG4gIEV0aGVyZXVtUHJvdmlkZXJFcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVhTS08zR1haLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-XSKO3GXZ.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/rpc-errors/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@metamask/rpc-errors/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProviderError: () => (/* reexport safe */ _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_1__.EthereumProviderError),\n/* harmony export */   JsonRpcError: () => (/* reexport safe */ _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_1__.JsonRpcError),\n/* harmony export */   errorCodes: () => (/* reexport safe */ _chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_3__.errorCodes),\n/* harmony export */   getMessageFromCode: () => (/* reexport safe */ _chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_2__.getMessageFromCode),\n/* harmony export */   providerErrors: () => (/* reexport safe */ _chunk_KYP27U3C_mjs__WEBPACK_IMPORTED_MODULE_0__.providerErrors),\n/* harmony export */   rpcErrors: () => (/* reexport safe */ _chunk_KYP27U3C_mjs__WEBPACK_IMPORTED_MODULE_0__.rpcErrors),\n/* harmony export */   serializeCause: () => (/* reexport safe */ _chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_2__.serializeCause),\n/* harmony export */   serializeError: () => (/* reexport safe */ _chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_2__.serializeError)\n/* harmony export */ });\n/* harmony import */ var _chunk_KYP27U3C_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-KYP27U3C.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-KYP27U3C.mjs\");\n/* harmony import */ var _chunk_XSKO3GXZ_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-XSKO3GXZ.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-XSKO3GXZ.mjs\");\n/* harmony import */ var _chunk_MPU3CVX3_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-MPU3CVX3.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs\");\n/* harmony import */ var _chunk_MIW4NMY6_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-MIW4NMY6.mjs */ \"(ssr)/./node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs\");\n\n\n\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3JwYy1lcnJvcnMvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBRzhCO0FBSUE7QUFLQTtBQUdBO0FBVTVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3JwYy1lcnJvcnMvZGlzdC9pbmRleC5tanM/MjUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBwcm92aWRlckVycm9ycyxcbiAgcnBjRXJyb3JzXG59IGZyb20gXCIuL2NodW5rLUtZUDI3VTNDLm1qc1wiO1xuaW1wb3J0IHtcbiAgRXRoZXJldW1Qcm92aWRlckVycm9yLFxuICBKc29uUnBjRXJyb3Jcbn0gZnJvbSBcIi4vY2h1bmstWFNLTzNHWFoubWpzXCI7XG5pbXBvcnQge1xuICBnZXRNZXNzYWdlRnJvbUNvZGUsXG4gIHNlcmlhbGl6ZUNhdXNlLFxuICBzZXJpYWxpemVFcnJvclxufSBmcm9tIFwiLi9jaHVuay1NUFUzQ1ZYMy5tanNcIjtcbmltcG9ydCB7XG4gIGVycm9yQ29kZXNcbn0gZnJvbSBcIi4vY2h1bmstTUlXNE5NWTYubWpzXCI7XG5leHBvcnQge1xuICBFdGhlcmV1bVByb3ZpZGVyRXJyb3IsXG4gIEpzb25ScGNFcnJvcixcbiAgZXJyb3JDb2RlcyxcbiAgZ2V0TWVzc2FnZUZyb21Db2RlLFxuICBwcm92aWRlckVycm9ycyxcbiAgcnBjRXJyb3JzLFxuICBzZXJpYWxpemVDYXVzZSxcbiAgc2VyaWFsaXplRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/rpc-errors/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-6C35XQOF.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-6C35XQOF.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcErrorStruct: () => (/* binding */ JsonRpcErrorStruct),\n/* harmony export */   JsonRpcFailureStruct: () => (/* binding */ JsonRpcFailureStruct),\n/* harmony export */   JsonRpcIdStruct: () => (/* binding */ JsonRpcIdStruct),\n/* harmony export */   JsonRpcNotificationStruct: () => (/* binding */ JsonRpcNotificationStruct),\n/* harmony export */   JsonRpcParamsStruct: () => (/* binding */ JsonRpcParamsStruct),\n/* harmony export */   JsonRpcRequestStruct: () => (/* binding */ JsonRpcRequestStruct),\n/* harmony export */   JsonRpcResponseStruct: () => (/* binding */ JsonRpcResponseStruct),\n/* harmony export */   JsonRpcSuccessStruct: () => (/* binding */ JsonRpcSuccessStruct),\n/* harmony export */   JsonRpcVersionStruct: () => (/* binding */ JsonRpcVersionStruct),\n/* harmony export */   JsonStruct: () => (/* binding */ JsonStruct),\n/* harmony export */   PendingJsonRpcResponseStruct: () => (/* binding */ PendingJsonRpcResponseStruct),\n/* harmony export */   UnsafeJsonStruct: () => (/* binding */ UnsafeJsonStruct),\n/* harmony export */   assertIsJsonRpcError: () => (/* binding */ assertIsJsonRpcError),\n/* harmony export */   assertIsJsonRpcFailure: () => (/* binding */ assertIsJsonRpcFailure),\n/* harmony export */   assertIsJsonRpcNotification: () => (/* binding */ assertIsJsonRpcNotification),\n/* harmony export */   assertIsJsonRpcRequest: () => (/* binding */ assertIsJsonRpcRequest),\n/* harmony export */   assertIsJsonRpcResponse: () => (/* binding */ assertIsJsonRpcResponse),\n/* harmony export */   assertIsJsonRpcSuccess: () => (/* binding */ assertIsJsonRpcSuccess),\n/* harmony export */   assertIsPendingJsonRpcResponse: () => (/* binding */ assertIsPendingJsonRpcResponse),\n/* harmony export */   exactOptional: () => (/* binding */ exactOptional),\n/* harmony export */   getJsonRpcIdValidator: () => (/* binding */ getJsonRpcIdValidator),\n/* harmony export */   getJsonSize: () => (/* binding */ getJsonSize),\n/* harmony export */   getSafeJson: () => (/* binding */ getSafeJson),\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcFailure: () => (/* binding */ isJsonRpcFailure),\n/* harmony export */   isJsonRpcNotification: () => (/* binding */ isJsonRpcNotification),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcSuccess: () => (/* binding */ isJsonRpcSuccess),\n/* harmony export */   isPendingJsonRpcResponse: () => (/* binding */ isPendingJsonRpcResponse),\n/* harmony export */   isValidJson: () => (/* binding */ isValidJson),\n/* harmony export */   jsonrpc2: () => (/* binding */ jsonrpc2),\n/* harmony export */   object: () => (/* binding */ object)\n/* harmony export */ });\n/* harmony import */ var _chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-74DGVJVE.mjs */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-74DGVJVE.mjs\");\n/* harmony import */ var _chunk_H4YFDLB7_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-H4YFDLB7.mjs */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\n\n\n\n// src/json.ts\n\nvar object = (schema) => (\n  // The type is slightly different from a regular object struct, because we\n  // want to make properties with `undefined` in their type optional, but not\n  // `undefined` itself. This means that we need a type cast.\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)(schema)\n);\nfunction hasOptional({ path, branch }) {\n  const field = path[path.length - 1];\n  return (0,_chunk_H4YFDLB7_mjs__WEBPACK_IMPORTED_MODULE_1__.hasProperty)(branch[branch.length - 2], field);\n}\nfunction exactOptional(struct) {\n  return new superstruct__WEBPACK_IMPORTED_MODULE_0__.Struct({\n    ...struct,\n    type: `optional ${struct.type}`,\n    validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n    refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context)\n  });\n}\nvar finiteNumber = () => (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.define)(\"finite number\", (value) => {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.number)()) && Number.isFinite(value);\n});\nvar UnsafeJsonStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(null),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.boolean)(),\n  finiteNumber(),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => UnsafeJsonStruct)),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.record)(\n    (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n    (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => UnsafeJsonStruct)\n  )\n]);\nvar JsonStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.coerce)(UnsafeJsonStruct, (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.any)(), (value) => {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(value, UnsafeJsonStruct);\n  return JSON.parse(\n    JSON.stringify(value, (propKey, propValue) => {\n      if (propKey === \"__proto__\" || propKey === \"constructor\") {\n        return void 0;\n      }\n      return propValue;\n    })\n  );\n});\nfunction isValidJson(value) {\n  try {\n    getSafeJson(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction getSafeJson(value) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.create)(value, JsonStruct);\n}\nfunction getJsonSize(value) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(value, JsonStruct, \"Invalid JSON value\");\n  const json = JSON.stringify(value);\n  return new TextEncoder().encode(json).byteLength;\n}\nvar jsonrpc2 = \"2.0\";\nvar JsonRpcVersionStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(jsonrpc2);\nvar JsonRpcIdStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.number)(), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)()]));\nvar JsonRpcErrorStruct = object({\n  code: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)(),\n  message: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  data: exactOptional(JsonStruct),\n  stack: exactOptional((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)())\n});\nvar JsonRpcParamsStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.record)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(), JsonStruct), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(JsonStruct)]);\nvar JsonRpcRequestStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  method: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  params: exactOptional(JsonRpcParamsStruct)\n});\nvar JsonRpcNotificationStruct = object({\n  jsonrpc: JsonRpcVersionStruct,\n  method: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  params: exactOptional(JsonRpcParamsStruct)\n});\nfunction isJsonRpcNotification(value) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, JsonRpcNotificationStruct);\n}\nfunction assertIsJsonRpcNotification(value, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    value,\n    JsonRpcNotificationStruct,\n    \"Invalid JSON-RPC notification\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcRequest(value) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, JsonRpcRequestStruct);\n}\nfunction assertIsJsonRpcRequest(value, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    value,\n    JsonRpcRequestStruct,\n    \"Invalid JSON-RPC request\",\n    ErrorWrapper\n  );\n}\nvar PendingJsonRpcResponseStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.unknown)()),\n  error: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)(JsonRpcErrorStruct)\n});\nvar JsonRpcSuccessStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: JsonStruct\n});\nvar JsonRpcFailureStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  error: JsonRpcErrorStruct\n});\nvar JsonRpcResponseStruct = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([\n  JsonRpcSuccessStruct,\n  JsonRpcFailureStruct\n]);\nfunction isPendingJsonRpcResponse(response) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(response, PendingJsonRpcResponseStruct);\n}\nfunction assertIsPendingJsonRpcResponse(response, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    response,\n    PendingJsonRpcResponseStruct,\n    \"Invalid pending JSON-RPC response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcResponse(response) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(response, JsonRpcResponseStruct);\n}\nfunction assertIsJsonRpcResponse(value, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    value,\n    JsonRpcResponseStruct,\n    \"Invalid JSON-RPC response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcSuccess(value) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, JsonRpcSuccessStruct);\n}\nfunction assertIsJsonRpcSuccess(value, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    value,\n    JsonRpcSuccessStruct,\n    \"Invalid JSON-RPC success response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcFailure(value) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, JsonRpcFailureStruct);\n}\nfunction assertIsJsonRpcFailure(value, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    value,\n    JsonRpcFailureStruct,\n    \"Invalid JSON-RPC failure response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcError(value) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, JsonRpcErrorStruct);\n}\nfunction assertIsJsonRpcError(value, ErrorWrapper) {\n  (0,_chunk_74DGVJVE_mjs__WEBPACK_IMPORTED_MODULE_2__.assertStruct)(\n    value,\n    JsonRpcErrorStruct,\n    \"Invalid JSON-RPC error\",\n    ErrorWrapper\n  );\n}\nfunction getJsonRpcIdValidator(options) {\n  const { permitEmptyString, permitFractions, permitNull } = {\n    permitEmptyString: true,\n    permitFractions: false,\n    permitNull: true,\n    ...options\n  };\n  const isValidJsonRpcId = (id) => {\n    return Boolean(\n      typeof id === \"number\" && (permitFractions || Number.isInteger(id)) || typeof id === \"string\" && (permitEmptyString || id.length > 0) || permitNull && id === null\n    );\n  };\n  return isValidJsonRpcId;\n}\n\n\n//# sourceMappingURL=chunk-6C35XQOF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-6C35XQOF.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-74DGVJVE.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-74DGVJVE.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssertionError: () => (/* binding */ AssertionError),\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   assertExhaustive: () => (/* binding */ assertExhaustive),\n/* harmony export */   assertStruct: () => (/* binding */ assertStruct)\n/* harmony export */ });\n/* harmony import */ var _chunk_XYGUOY6N_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-XYGUOY6N.mjs */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-XYGUOY6N.mjs\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! superstruct */ \"(ssr)/./node_modules/superstruct/dist/index.mjs\");\n\n\n// src/assert.ts\n\nfunction isConstructable(fn) {\n  return Boolean(typeof fn?.prototype?.constructor?.name === \"string\");\n}\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n  return (0,_chunk_XYGUOY6N_mjs__WEBPACK_IMPORTED_MODULE_0__.getErrorMessage)(error).replace(/\\.$/u, \"\");\n}\nfunction getError(ErrorWrapper, message) {\n  if (isConstructable(ErrorWrapper)) {\n    return new ErrorWrapper({\n      message\n    });\n  }\n  return ErrorWrapper({\n    message\n  });\n}\nvar AssertionError = class extends Error {\n  constructor(options) {\n    super(options.message);\n    this.code = \"ERR_ASSERTION\";\n  }\n};\nfunction assert(value, message = \"Assertion failed.\", ErrorWrapper = AssertionError) {\n  if (!value) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    throw getError(ErrorWrapper, message);\n  }\n}\nfunction assertStruct(value, struct, errorPrefix = \"Assertion failed\", ErrorWrapper = AssertionError) {\n  try {\n    (0,superstruct__WEBPACK_IMPORTED_MODULE_1__.assert)(value, struct);\n  } catch (error) {\n    throw getError(\n      ErrorWrapper,\n      `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`\n    );\n  }\n}\nfunction assertExhaustive(_object) {\n  throw new Error(\n    \"Invalid branch reached. Should be detected during compilation.\"\n  );\n}\n\n\n//# sourceMappingURL=chunk-74DGVJVE.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNzRER1ZKVkUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUU4Qjs7QUFFOUI7QUFDMEQ7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG9FQUFlO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG1EQUFpQjtBQUNyQixJQUFJO0FBQ0o7QUFDQTtBQUNBLFNBQVMsWUFBWSxJQUFJLDRDQUE0QztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstNzRER1ZKVkUubWpzPzIxYjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZ2V0RXJyb3JNZXNzYWdlXG59IGZyb20gXCIuL2NodW5rLVhZR1VPWTZOLm1qc1wiO1xuXG4vLyBzcmMvYXNzZXJ0LnRzXG5pbXBvcnQgeyBhc3NlcnQgYXMgYXNzZXJ0U3VwZXJzdHJ1Y3QgfSBmcm9tIFwic3VwZXJzdHJ1Y3RcIjtcbmZ1bmN0aW9uIGlzQ29uc3RydWN0YWJsZShmbikge1xuICByZXR1cm4gQm9vbGVhbih0eXBlb2YgZm4/LnByb3RvdHlwZT8uY29uc3RydWN0b3I/Lm5hbWUgPT09IFwic3RyaW5nXCIpO1xufVxuZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlV2l0aG91dFRyYWlsaW5nUGVyaW9kKGVycm9yKSB7XG4gIHJldHVybiBnZXRFcnJvck1lc3NhZ2UoZXJyb3IpLnJlcGxhY2UoL1xcLiQvdSwgXCJcIik7XG59XG5mdW5jdGlvbiBnZXRFcnJvcihFcnJvcldyYXBwZXIsIG1lc3NhZ2UpIHtcbiAgaWYgKGlzQ29uc3RydWN0YWJsZShFcnJvcldyYXBwZXIpKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcldyYXBwZXIoe1xuICAgICAgbWVzc2FnZVxuICAgIH0pO1xuICB9XG4gIHJldHVybiBFcnJvcldyYXBwZXIoe1xuICAgIG1lc3NhZ2VcbiAgfSk7XG59XG52YXIgQXNzZXJ0aW9uRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMubWVzc2FnZSk7XG4gICAgdGhpcy5jb2RlID0gXCJFUlJfQVNTRVJUSU9OXCI7XG4gIH1cbn07XG5mdW5jdGlvbiBhc3NlcnQodmFsdWUsIG1lc3NhZ2UgPSBcIkFzc2VydGlvbiBmYWlsZWQuXCIsIEVycm9yV3JhcHBlciA9IEFzc2VydGlvbkVycm9yKSB7XG4gIGlmICghdmFsdWUpIHtcbiAgICBpZiAobWVzc2FnZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICB0aHJvdyBtZXNzYWdlO1xuICAgIH1cbiAgICB0aHJvdyBnZXRFcnJvcihFcnJvcldyYXBwZXIsIG1lc3NhZ2UpO1xuICB9XG59XG5mdW5jdGlvbiBhc3NlcnRTdHJ1Y3QodmFsdWUsIHN0cnVjdCwgZXJyb3JQcmVmaXggPSBcIkFzc2VydGlvbiBmYWlsZWRcIiwgRXJyb3JXcmFwcGVyID0gQXNzZXJ0aW9uRXJyb3IpIHtcbiAgdHJ5IHtcbiAgICBhc3NlcnRTdXBlcnN0cnVjdCh2YWx1ZSwgc3RydWN0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBnZXRFcnJvcihcbiAgICAgIEVycm9yV3JhcHBlcixcbiAgICAgIGAke2Vycm9yUHJlZml4fTogJHtnZXRFcnJvck1lc3NhZ2VXaXRob3V0VHJhaWxpbmdQZXJpb2QoZXJyb3IpfS5gXG4gICAgKTtcbiAgfVxufVxuZnVuY3Rpb24gYXNzZXJ0RXhoYXVzdGl2ZShfb2JqZWN0KSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBcIkludmFsaWQgYnJhbmNoIHJlYWNoZWQuIFNob3VsZCBiZSBkZXRlY3RlZCBkdXJpbmcgY29tcGlsYXRpb24uXCJcbiAgKTtcbn1cblxuZXhwb3J0IHtcbiAgQXNzZXJ0aW9uRXJyb3IsXG4gIGFzc2VydCxcbiAgYXNzZXJ0U3RydWN0LFxuICBhc3NlcnRFeGhhdXN0aXZlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNzRER1ZKVkUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-74DGVJVE.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ESCAPE_CHARACTERS_REGEXP: () => (/* binding */ ESCAPE_CHARACTERS_REGEXP),\n/* harmony export */   JsonSize: () => (/* binding */ JsonSize),\n/* harmony export */   calculateNumberSize: () => (/* binding */ calculateNumberSize),\n/* harmony export */   calculateStringSize: () => (/* binding */ calculateStringSize),\n/* harmony export */   getKnownPropertyNames: () => (/* binding */ getKnownPropertyNames),\n/* harmony export */   hasProperty: () => (/* binding */ hasProperty),\n/* harmony export */   isASCII: () => (/* binding */ isASCII),\n/* harmony export */   isNonEmptyArray: () => (/* binding */ isNonEmptyArray),\n/* harmony export */   isNullOrUndefined: () => (/* binding */ isNullOrUndefined),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject)\n/* harmony export */ });\n// src/misc.ts\nfunction isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}\nfunction isNullOrUndefined(value) {\n  return value === null || value === void 0;\n}\nfunction isObject(value) {\n  return Boolean(value) && typeof value === \"object\" && !Array.isArray(value);\n}\nvar hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nfunction getKnownPropertyNames(object) {\n  return Object.getOwnPropertyNames(object);\n}\nvar JsonSize = /* @__PURE__ */ ((JsonSize2) => {\n  JsonSize2[JsonSize2[\"Null\"] = 4] = \"Null\";\n  JsonSize2[JsonSize2[\"Comma\"] = 1] = \"Comma\";\n  JsonSize2[JsonSize2[\"Wrapper\"] = 1] = \"Wrapper\";\n  JsonSize2[JsonSize2[\"True\"] = 4] = \"True\";\n  JsonSize2[JsonSize2[\"False\"] = 5] = \"False\";\n  JsonSize2[JsonSize2[\"Quote\"] = 1] = \"Quote\";\n  JsonSize2[JsonSize2[\"Colon\"] = 1] = \"Colon\";\n  JsonSize2[JsonSize2[\"Date\"] = 24] = \"Date\";\n  return JsonSize2;\n})(JsonSize || {});\nvar ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n  try {\n    let proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(value) === proto;\n  } catch (_) {\n    return false;\n  }\n}\nfunction isASCII(character) {\n  return character.charCodeAt(0) <= 127;\n}\nfunction calculateStringSize(value) {\n  const size = value.split(\"\").reduce((total, character) => {\n    if (isASCII(character)) {\n      return total + 1;\n    }\n    return total + 2;\n  }, 0);\n  return size + (value.match(ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nfunction calculateNumberSize(value) {\n  return value.toString().length;\n}\n\n\n//# sourceMappingURL=chunk-H4YFDLB7.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstSDRZRkRMQjcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQkFBZ0I7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFjRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay91dGlscy9kaXN0L2NodW5rLUg0WUZETEI3Lm1qcz9kYzQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9taXNjLnRzXG5mdW5jdGlvbiBpc05vbkVtcHR5QXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA+IDA7XG59XG5mdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiBCb29sZWFuKHZhbHVlKSAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxudmFyIGhhc1Byb3BlcnR5ID0gKG9iamVjdFRvQ2hlY2ssIG5hbWUpID0+IE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdFRvQ2hlY2ssIG5hbWUpO1xuZnVuY3Rpb24gZ2V0S25vd25Qcm9wZXJ0eU5hbWVzKG9iamVjdCkge1xuICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqZWN0KTtcbn1cbnZhciBKc29uU2l6ZSA9IC8qIEBfX1BVUkVfXyAqLyAoKEpzb25TaXplMikgPT4ge1xuICBKc29uU2l6ZTJbSnNvblNpemUyW1wiTnVsbFwiXSA9IDRdID0gXCJOdWxsXCI7XG4gIEpzb25TaXplMltKc29uU2l6ZTJbXCJDb21tYVwiXSA9IDFdID0gXCJDb21tYVwiO1xuICBKc29uU2l6ZTJbSnNvblNpemUyW1wiV3JhcHBlclwiXSA9IDFdID0gXCJXcmFwcGVyXCI7XG4gIEpzb25TaXplMltKc29uU2l6ZTJbXCJUcnVlXCJdID0gNF0gPSBcIlRydWVcIjtcbiAgSnNvblNpemUyW0pzb25TaXplMltcIkZhbHNlXCJdID0gNV0gPSBcIkZhbHNlXCI7XG4gIEpzb25TaXplMltKc29uU2l6ZTJbXCJRdW90ZVwiXSA9IDFdID0gXCJRdW90ZVwiO1xuICBKc29uU2l6ZTJbSnNvblNpemUyW1wiQ29sb25cIl0gPSAxXSA9IFwiQ29sb25cIjtcbiAgSnNvblNpemUyW0pzb25TaXplMltcIkRhdGVcIl0gPSAyNF0gPSBcIkRhdGVcIjtcbiAgcmV0dXJuIEpzb25TaXplMjtcbn0pKEpzb25TaXplIHx8IHt9KTtcbnZhciBFU0NBUEVfQ0hBUkFDVEVSU19SRUdFWFAgPSAvXCJ8XFxcXHxcXG58XFxyfFxcdC9ndTtcbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB0cnkge1xuICAgIGxldCBwcm90byA9IHZhbHVlO1xuICAgIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpID09PSBwcm90bztcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZnVuY3Rpb24gaXNBU0NJSShjaGFyYWN0ZXIpIHtcbiAgcmV0dXJuIGNoYXJhY3Rlci5jaGFyQ29kZUF0KDApIDw9IDEyNztcbn1cbmZ1bmN0aW9uIGNhbGN1bGF0ZVN0cmluZ1NpemUodmFsdWUpIHtcbiAgY29uc3Qgc2l6ZSA9IHZhbHVlLnNwbGl0KFwiXCIpLnJlZHVjZSgodG90YWwsIGNoYXJhY3RlcikgPT4ge1xuICAgIGlmIChpc0FTQ0lJKGNoYXJhY3RlcikpIHtcbiAgICAgIHJldHVybiB0b3RhbCArIDE7XG4gICAgfVxuICAgIHJldHVybiB0b3RhbCArIDI7XG4gIH0sIDApO1xuICByZXR1cm4gc2l6ZSArICh2YWx1ZS5tYXRjaChFU0NBUEVfQ0hBUkFDVEVSU19SRUdFWFApID8/IFtdKS5sZW5ndGg7XG59XG5mdW5jdGlvbiBjYWxjdWxhdGVOdW1iZXJTaXplKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS50b1N0cmluZygpLmxlbmd0aDtcbn1cblxuZXhwb3J0IHtcbiAgaXNOb25FbXB0eUFycmF5LFxuICBpc051bGxPclVuZGVmaW5lZCxcbiAgaXNPYmplY3QsXG4gIGhhc1Byb3BlcnR5LFxuICBnZXRLbm93blByb3BlcnR5TmFtZXMsXG4gIEpzb25TaXplLFxuICBFU0NBUEVfQ0hBUkFDVEVSU19SRUdFWFAsXG4gIGlzUGxhaW5PYmplY3QsXG4gIGlzQVNDSUksXG4gIGNhbGN1bGF0ZVN0cmluZ1NpemUsXG4gIGNhbGN1bGF0ZU51bWJlclNpemVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1INFlGRExCNy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@metamask/utils/dist/chunk-XYGUOY6N.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/utils/dist/chunk-XYGUOY6N.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   isErrorWithCode: () => (/* binding */ isErrorWithCode),\n/* harmony export */   isErrorWithMessage: () => (/* binding */ isErrorWithMessage),\n/* harmony export */   isErrorWithStack: () => (/* binding */ isErrorWithStack),\n/* harmony export */   wrapError: () => (/* binding */ wrapError)\n/* harmony export */ });\n/* harmony import */ var _chunk_H4YFDLB7_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-H4YFDLB7.mjs */ \"(ssr)/./node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs\");\n/* harmony import */ var pony_cause__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pony-cause */ \"(ssr)/./node_modules/pony-cause/index.mjs\");\n\n\n// src/errors.ts\n\nfunction isError(error) {\n  return error instanceof Error || (0,_chunk_H4YFDLB7_mjs__WEBPACK_IMPORTED_MODULE_1__.isObject)(error) && error.constructor.name === \"Error\";\n}\nfunction isErrorWithCode(error) {\n  return typeof error === \"object\" && error !== null && \"code\" in error;\n}\nfunction isErrorWithMessage(error) {\n  return typeof error === \"object\" && error !== null && \"message\" in error;\n}\nfunction isErrorWithStack(error) {\n  return typeof error === \"object\" && error !== null && \"stack\" in error;\n}\nfunction getErrorMessage(error) {\n  if (isErrorWithMessage(error) && typeof error.message === \"string\") {\n    return error.message;\n  }\n  if ((0,_chunk_H4YFDLB7_mjs__WEBPACK_IMPORTED_MODULE_1__.isNullOrUndefined)(error)) {\n    return \"\";\n  }\n  return String(error);\n}\nfunction wrapError(originalError, message) {\n  if (isError(originalError)) {\n    let error;\n    if (Error.length === 2) {\n      error = new Error(message, { cause: originalError });\n    } else {\n      error = new pony_cause__WEBPACK_IMPORTED_MODULE_0__.ErrorWithCause(message, { cause: originalError });\n    }\n    if (isErrorWithCode(originalError)) {\n      error.code = originalError.code;\n    }\n    return error;\n  }\n  if (message.length > 0) {\n    return new Error(`${String(originalError)}: ${message}`);\n  }\n  return new Error(String(originalError));\n}\n\n\n//# sourceMappingURL=chunk-XYGUOY6N.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstWFlHVU9ZNk4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFHOEI7O0FBRTlCO0FBQzRDO0FBQzVDO0FBQ0EsbUNBQW1DLDZEQUFRO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHNFQUFpQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHNCQUFzQjtBQUN6RCxNQUFNO0FBQ04sa0JBQWtCLHNEQUFjLFlBQVksc0JBQXNCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNCQUFzQixJQUFJLFFBQVE7QUFDMUQ7QUFDQTtBQUNBOztBQVFFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3V0aWxzL2Rpc3QvY2h1bmstWFlHVU9ZNk4ubWpzP2JlOWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNOdWxsT3JVbmRlZmluZWQsXG4gIGlzT2JqZWN0XG59IGZyb20gXCIuL2NodW5rLUg0WUZETEI3Lm1qc1wiO1xuXG4vLyBzcmMvZXJyb3JzLnRzXG5pbXBvcnQgeyBFcnJvcldpdGhDYXVzZSB9IGZyb20gXCJwb255LWNhdXNlXCI7XG5mdW5jdGlvbiBpc0Vycm9yKGVycm9yKSB7XG4gIHJldHVybiBlcnJvciBpbnN0YW5jZW9mIEVycm9yIHx8IGlzT2JqZWN0KGVycm9yKSAmJiBlcnJvci5jb25zdHJ1Y3Rvci5uYW1lID09PSBcIkVycm9yXCI7XG59XG5mdW5jdGlvbiBpc0Vycm9yV2l0aENvZGUoZXJyb3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBlcnJvciA9PT0gXCJvYmplY3RcIiAmJiBlcnJvciAhPT0gbnVsbCAmJiBcImNvZGVcIiBpbiBlcnJvcjtcbn1cbmZ1bmN0aW9uIGlzRXJyb3JXaXRoTWVzc2FnZShlcnJvcikge1xuICByZXR1cm4gdHlwZW9mIGVycm9yID09PSBcIm9iamVjdFwiICYmIGVycm9yICE9PSBudWxsICYmIFwibWVzc2FnZVwiIGluIGVycm9yO1xufVxuZnVuY3Rpb24gaXNFcnJvcldpdGhTdGFjayhlcnJvcikge1xuICByZXR1cm4gdHlwZW9mIGVycm9yID09PSBcIm9iamVjdFwiICYmIGVycm9yICE9PSBudWxsICYmIFwic3RhY2tcIiBpbiBlcnJvcjtcbn1cbmZ1bmN0aW9uIGdldEVycm9yTWVzc2FnZShlcnJvcikge1xuICBpZiAoaXNFcnJvcldpdGhNZXNzYWdlKGVycm9yKSAmJiB0eXBlb2YgZXJyb3IubWVzc2FnZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBlcnJvci5tZXNzYWdlO1xuICB9XG4gIGlmIChpc051bGxPclVuZGVmaW5lZChlcnJvcikpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICByZXR1cm4gU3RyaW5nKGVycm9yKTtcbn1cbmZ1bmN0aW9uIHdyYXBFcnJvcihvcmlnaW5hbEVycm9yLCBtZXNzYWdlKSB7XG4gIGlmIChpc0Vycm9yKG9yaWdpbmFsRXJyb3IpKSB7XG4gICAgbGV0IGVycm9yO1xuICAgIGlmIChFcnJvci5sZW5ndGggPT09IDIpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UsIHsgY2F1c2U6IG9yaWdpbmFsRXJyb3IgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yV2l0aENhdXNlKG1lc3NhZ2UsIHsgY2F1c2U6IG9yaWdpbmFsRXJyb3IgfSk7XG4gICAgfVxuICAgIGlmIChpc0Vycm9yV2l0aENvZGUob3JpZ2luYWxFcnJvcikpIHtcbiAgICAgIGVycm9yLmNvZGUgPSBvcmlnaW5hbEVycm9yLmNvZGU7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcjtcbiAgfVxuICBpZiAobWVzc2FnZS5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihgJHtTdHJpbmcob3JpZ2luYWxFcnJvcil9OiAke21lc3NhZ2V9YCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBFcnJvcihTdHJpbmcob3JpZ2luYWxFcnJvcikpO1xufVxuXG5leHBvcnQge1xuICBpc0Vycm9yV2l0aENvZGUsXG4gIGlzRXJyb3JXaXRoTWVzc2FnZSxcbiAgaXNFcnJvcldpdGhTdGFjayxcbiAgZ2V0RXJyb3JNZXNzYWdlLFxuICB3cmFwRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1YWUdVT1k2Ti5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@metamask/utils/dist/chunk-XYGUOY6N.mjs\n");

/***/ })

};
;