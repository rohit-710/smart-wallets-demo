"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/it-glob";
exports.ids = ["vendor-chunks/it-glob"];
exports.modules = {

/***/ "(ssr)/./node_modules/it-glob/index.js":
/*!***************************************!*\
  !*** ./node_modules/it-glob/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst fs = (__webpack_require__(/*! fs */ \"fs\").promises)\nconst path = __webpack_require__(/*! path */ \"path\")\nconst minimatch = __webpack_require__(/*! minimatch */ \"(ssr)/./node_modules/minimatch/minimatch.js\")\n\n/**\n * @typedef {string} Glob\n * @typedef {object} OptionsExt\n * @property {string} [cwd=process.cwd()]\n * @property {boolean} [absolute=false] - If true produces absolute paths\n * @property {boolean} [nodir] - If true yields file paths and skip directories\n *\n * @typedef {OptionsExt & minimatch.IOptions} Options\n */\n\n/**\n * Async iterable filename pattern matcher\n *\n * @param {string} dir\n * @param {string} pattern\n * @param {Options} [options]\n * @returns {AsyncIterable<string>}\n */\nasync function * glob (dir, pattern, options = {}) {\n  const absoluteDir = path.resolve(dir)\n  const relativeDir = path.relative(options.cwd || process.cwd(), dir)\n\n  const stats = await fs.stat(absoluteDir)\n\n  if (stats.isDirectory()) {\n    for await (const entry of _glob(absoluteDir, '', pattern, options)) {\n      yield entry\n    }\n\n    return\n  }\n\n  if (minimatch(relativeDir, pattern, options)) {\n    yield options.absolute ? absoluteDir : relativeDir\n  }\n}\n\n/**\n * @param {string} base\n * @param {string} dir\n * @param {Glob} pattern\n * @param {Options} options\n * @returns {AsyncIterable<string>}\n */\nasync function * _glob (base, dir, pattern, options) {\n  for await (const entry of await fs.opendir(path.join(base, dir))) {\n    const relativeEntryPath = path.join(dir, entry.name)\n    const absoluteEntryPath = path.join(base, dir, entry.name)\n\n    let match = minimatch(relativeEntryPath, pattern, options)\n\n    const isDirectory = entry.isDirectory()\n\n    if (isDirectory && options.nodir) {\n      match = false\n    }\n\n    if (match) {\n      yield options.absolute ? absoluteEntryPath : relativeEntryPath\n    }\n\n    if (isDirectory) {\n      yield * _glob(base, relativeEntryPath, pattern, options)\n    }\n  }\n}\n\nmodule.exports = glob\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXQtZ2xvYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWixXQUFXLDhDQUFzQjtBQUNqQyxhQUFhLG1CQUFPLENBQUMsa0JBQU07QUFDM0Isa0JBQWtCLG1CQUFPLENBQUMsOERBQVc7O0FBRXJDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsU0FBUztBQUN2QjtBQUNBLGFBQWEsaUNBQWlDO0FBQzlDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsTUFBTTtBQUNqQixXQUFXLFNBQVM7QUFDcEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL2l0LWdsb2IvaW5kZXguanM/MTI1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpLnByb21pc2VzXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBtaW5pbWF0Y2ggPSByZXF1aXJlKCdtaW5pbWF0Y2gnKVxuXG4vKipcbiAqIEB0eXBlZGVmIHtzdHJpbmd9IEdsb2JcbiAqIEB0eXBlZGVmIHtvYmplY3R9IE9wdGlvbnNFeHRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbY3dkPXByb2Nlc3MuY3dkKCldXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IFthYnNvbHV0ZT1mYWxzZV0gLSBJZiB0cnVlIHByb2R1Y2VzIGFic29sdXRlIHBhdGhzXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IFtub2Rpcl0gLSBJZiB0cnVlIHlpZWxkcyBmaWxlIHBhdGhzIGFuZCBza2lwIGRpcmVjdG9yaWVzXG4gKlxuICogQHR5cGVkZWYge09wdGlvbnNFeHQgJiBtaW5pbWF0Y2guSU9wdGlvbnN9IE9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEFzeW5jIGl0ZXJhYmxlIGZpbGVuYW1lIHBhdHRlcm4gbWF0Y2hlclxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBkaXJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuXG4gKiBAcGFyYW0ge09wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge0FzeW5jSXRlcmFibGU8c3RyaW5nPn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gKiBnbG9iIChkaXIsIHBhdHRlcm4sIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBhYnNvbHV0ZURpciA9IHBhdGgucmVzb2x2ZShkaXIpXG4gIGNvbnN0IHJlbGF0aXZlRGlyID0gcGF0aC5yZWxhdGl2ZShvcHRpb25zLmN3ZCB8fCBwcm9jZXNzLmN3ZCgpLCBkaXIpXG5cbiAgY29uc3Qgc3RhdHMgPSBhd2FpdCBmcy5zdGF0KGFic29sdXRlRGlyKVxuXG4gIGlmIChzdGF0cy5pc0RpcmVjdG9yeSgpKSB7XG4gICAgZm9yIGF3YWl0IChjb25zdCBlbnRyeSBvZiBfZ2xvYihhYnNvbHV0ZURpciwgJycsIHBhdHRlcm4sIG9wdGlvbnMpKSB7XG4gICAgICB5aWVsZCBlbnRyeVxuICAgIH1cblxuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKG1pbmltYXRjaChyZWxhdGl2ZURpciwgcGF0dGVybiwgb3B0aW9ucykpIHtcbiAgICB5aWVsZCBvcHRpb25zLmFic29sdXRlID8gYWJzb2x1dGVEaXIgOiByZWxhdGl2ZURpclxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VcbiAqIEBwYXJhbSB7c3RyaW5nfSBkaXJcbiAqIEBwYXJhbSB7R2xvYn0gcGF0dGVyblxuICogQHBhcmFtIHtPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7QXN5bmNJdGVyYWJsZTxzdHJpbmc+fVxuICovXG5hc3luYyBmdW5jdGlvbiAqIF9nbG9iIChiYXNlLCBkaXIsIHBhdHRlcm4sIG9wdGlvbnMpIHtcbiAgZm9yIGF3YWl0IChjb25zdCBlbnRyeSBvZiBhd2FpdCBmcy5vcGVuZGlyKHBhdGguam9pbihiYXNlLCBkaXIpKSkge1xuICAgIGNvbnN0IHJlbGF0aXZlRW50cnlQYXRoID0gcGF0aC5qb2luKGRpciwgZW50cnkubmFtZSlcbiAgICBjb25zdCBhYnNvbHV0ZUVudHJ5UGF0aCA9IHBhdGguam9pbihiYXNlLCBkaXIsIGVudHJ5Lm5hbWUpXG5cbiAgICBsZXQgbWF0Y2ggPSBtaW5pbWF0Y2gocmVsYXRpdmVFbnRyeVBhdGgsIHBhdHRlcm4sIG9wdGlvbnMpXG5cbiAgICBjb25zdCBpc0RpcmVjdG9yeSA9IGVudHJ5LmlzRGlyZWN0b3J5KClcblxuICAgIGlmIChpc0RpcmVjdG9yeSAmJiBvcHRpb25zLm5vZGlyKSB7XG4gICAgICBtYXRjaCA9IGZhbHNlXG4gICAgfVxuXG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICB5aWVsZCBvcHRpb25zLmFic29sdXRlID8gYWJzb2x1dGVFbnRyeVBhdGggOiByZWxhdGl2ZUVudHJ5UGF0aFxuICAgIH1cblxuICAgIGlmIChpc0RpcmVjdG9yeSkge1xuICAgICAgeWllbGQgKiBfZ2xvYihiYXNlLCByZWxhdGl2ZUVudHJ5UGF0aCwgcGF0dGVybiwgb3B0aW9ucylcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnbG9iXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/it-glob/index.js\n");

/***/ })

};
;