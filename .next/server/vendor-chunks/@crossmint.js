"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@crossmint";
exports.ids = ["vendor-chunks/@crossmint"];
exports.modules = {

/***/ "(ssr)/./node_modules/@crossmint/client-sdk-aa/node_modules/ethers/lib/utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@crossmint/client-sdk-aa/node_modules/ethers/lib/utils.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.dnsEncode = exports.parseBytes32String = void 0;\nvar abi_1 = __webpack_require__(/*! @ethersproject/abi */ \"(ssr)/./node_modules/@ethersproject/abi/lib.esm/index.js\");\nObject.defineProperty(exports, \"AbiCoder\", ({ enumerable: true, get: function () { return abi_1.AbiCoder; } }));\nObject.defineProperty(exports, \"checkResultErrors\", ({ enumerable: true, get: function () { return abi_1.checkResultErrors; } }));\nObject.defineProperty(exports, \"ConstructorFragment\", ({ enumerable: true, get: function () { return abi_1.ConstructorFragment; } }));\nObject.defineProperty(exports, \"defaultAbiCoder\", ({ enumerable: true, get: function () { return abi_1.defaultAbiCoder; } }));\nObject.defineProperty(exports, \"ErrorFragment\", ({ enumerable: true, get: function () { return abi_1.ErrorFragment; } }));\nObject.defineProperty(exports, \"EventFragment\", ({ enumerable: true, get: function () { return abi_1.EventFragment; } }));\nObject.defineProperty(exports, \"FormatTypes\", ({ enumerable: true, get: function () { return abi_1.FormatTypes; } }));\nObject.defineProperty(exports, \"Fragment\", ({ enumerable: true, get: function () { return abi_1.Fragment; } }));\nObject.defineProperty(exports, \"FunctionFragment\", ({ enumerable: true, get: function () { return abi_1.FunctionFragment; } }));\nObject.defineProperty(exports, \"Indexed\", ({ enumerable: true, get: function () { return abi_1.Indexed; } }));\nObject.defineProperty(exports, \"Interface\", ({ enumerable: true, get: function () { return abi_1.Interface; } }));\nObject.defineProperty(exports, \"LogDescription\", ({ enumerable: true, get: function () { return abi_1.LogDescription; } }));\nObject.defineProperty(exports, \"ParamType\", ({ enumerable: true, get: function () { return abi_1.ParamType; } }));\nObject.defineProperty(exports, \"TransactionDescription\", ({ enumerable: true, get: function () { return abi_1.TransactionDescription; } }));\nvar address_1 = __webpack_require__(/*! @ethersproject/address */ \"(ssr)/./node_modules/@ethersproject/address/lib.esm/index.js\");\nObject.defineProperty(exports, \"getAddress\", ({ enumerable: true, get: function () { return address_1.getAddress; } }));\nObject.defineProperty(exports, \"getCreate2Address\", ({ enumerable: true, get: function () { return address_1.getCreate2Address; } }));\nObject.defineProperty(exports, \"getContractAddress\", ({ enumerable: true, get: function () { return address_1.getContractAddress; } }));\nObject.defineProperty(exports, \"getIcapAddress\", ({ enumerable: true, get: function () { return address_1.getIcapAddress; } }));\nObject.defineProperty(exports, \"isAddress\", ({ enumerable: true, get: function () { return address_1.isAddress; } }));\nvar base64 = __importStar(__webpack_require__(/*! @ethersproject/base64 */ \"(ssr)/./node_modules/@ethersproject/base64/lib.esm/index.js\"));\nexports.base64 = base64;\nvar basex_1 = __webpack_require__(/*! @ethersproject/basex */ \"(ssr)/./node_modules/@ethersproject/basex/lib.esm/index.js\");\nObject.defineProperty(exports, \"base58\", ({ enumerable: true, get: function () { return basex_1.Base58; } }));\nvar bytes_1 = __webpack_require__(/*! @ethersproject/bytes */ \"(ssr)/./node_modules/@ethersproject/bytes/lib.esm/index.js\");\nObject.defineProperty(exports, \"arrayify\", ({ enumerable: true, get: function () { return bytes_1.arrayify; } }));\nObject.defineProperty(exports, \"concat\", ({ enumerable: true, get: function () { return bytes_1.concat; } }));\nObject.defineProperty(exports, \"hexConcat\", ({ enumerable: true, get: function () { return bytes_1.hexConcat; } }));\nObject.defineProperty(exports, \"hexDataSlice\", ({ enumerable: true, get: function () { return bytes_1.hexDataSlice; } }));\nObject.defineProperty(exports, \"hexDataLength\", ({ enumerable: true, get: function () { return bytes_1.hexDataLength; } }));\nObject.defineProperty(exports, \"hexlify\", ({ enumerable: true, get: function () { return bytes_1.hexlify; } }));\nObject.defineProperty(exports, \"hexStripZeros\", ({ enumerable: true, get: function () { return bytes_1.hexStripZeros; } }));\nObject.defineProperty(exports, \"hexValue\", ({ enumerable: true, get: function () { return bytes_1.hexValue; } }));\nObject.defineProperty(exports, \"hexZeroPad\", ({ enumerable: true, get: function () { return bytes_1.hexZeroPad; } }));\nObject.defineProperty(exports, \"isBytes\", ({ enumerable: true, get: function () { return bytes_1.isBytes; } }));\nObject.defineProperty(exports, \"isBytesLike\", ({ enumerable: true, get: function () { return bytes_1.isBytesLike; } }));\nObject.defineProperty(exports, \"isHexString\", ({ enumerable: true, get: function () { return bytes_1.isHexString; } }));\nObject.defineProperty(exports, \"joinSignature\", ({ enumerable: true, get: function () { return bytes_1.joinSignature; } }));\nObject.defineProperty(exports, \"zeroPad\", ({ enumerable: true, get: function () { return bytes_1.zeroPad; } }));\nObject.defineProperty(exports, \"splitSignature\", ({ enumerable: true, get: function () { return bytes_1.splitSignature; } }));\nObject.defineProperty(exports, \"stripZeros\", ({ enumerable: true, get: function () { return bytes_1.stripZeros; } }));\nvar hash_1 = __webpack_require__(/*! @ethersproject/hash */ \"(ssr)/./node_modules/@ethersproject/hash/lib.esm/index.js\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", ({ enumerable: true, get: function () { return hash_1._TypedDataEncoder; } }));\nObject.defineProperty(exports, \"dnsEncode\", ({ enumerable: true, get: function () { return hash_1.dnsEncode; } }));\nObject.defineProperty(exports, \"hashMessage\", ({ enumerable: true, get: function () { return hash_1.hashMessage; } }));\nObject.defineProperty(exports, \"id\", ({ enumerable: true, get: function () { return hash_1.id; } }));\nObject.defineProperty(exports, \"isValidName\", ({ enumerable: true, get: function () { return hash_1.isValidName; } }));\nObject.defineProperty(exports, \"namehash\", ({ enumerable: true, get: function () { return hash_1.namehash; } }));\nvar hdnode_1 = __webpack_require__(/*! @ethersproject/hdnode */ \"(ssr)/./node_modules/@ethersproject/hdnode/lib.esm/index.js\");\nObject.defineProperty(exports, \"defaultPath\", ({ enumerable: true, get: function () { return hdnode_1.defaultPath; } }));\nObject.defineProperty(exports, \"entropyToMnemonic\", ({ enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } }));\nObject.defineProperty(exports, \"getAccountPath\", ({ enumerable: true, get: function () { return hdnode_1.getAccountPath; } }));\nObject.defineProperty(exports, \"HDNode\", ({ enumerable: true, get: function () { return hdnode_1.HDNode; } }));\nObject.defineProperty(exports, \"isValidMnemonic\", ({ enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } }));\nObject.defineProperty(exports, \"mnemonicToEntropy\", ({ enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } }));\nObject.defineProperty(exports, \"mnemonicToSeed\", ({ enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } }));\nvar json_wallets_1 = __webpack_require__(/*! @ethersproject/json-wallets */ \"(ssr)/./node_modules/@ethersproject/json-wallets/lib.esm/index.js\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", ({ enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } }));\nvar keccak256_1 = __webpack_require__(/*! @ethersproject/keccak256 */ \"(ssr)/./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\nObject.defineProperty(exports, \"keccak256\", ({ enumerable: true, get: function () { return keccak256_1.keccak256; } }));\nvar logger_1 = __webpack_require__(/*! @ethersproject/logger */ \"(ssr)/./node_modules/@ethersproject/logger/lib.esm/index.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\nvar sha2_1 = __webpack_require__(/*! @ethersproject/sha2 */ \"(ssr)/./node_modules/@ethersproject/sha2/lib.esm/index.js\");\nObject.defineProperty(exports, \"computeHmac\", ({ enumerable: true, get: function () { return sha2_1.computeHmac; } }));\nObject.defineProperty(exports, \"ripemd160\", ({ enumerable: true, get: function () { return sha2_1.ripemd160; } }));\nObject.defineProperty(exports, \"sha256\", ({ enumerable: true, get: function () { return sha2_1.sha256; } }));\nObject.defineProperty(exports, \"sha512\", ({ enumerable: true, get: function () { return sha2_1.sha512; } }));\nvar solidity_1 = __webpack_require__(/*! @ethersproject/solidity */ \"(ssr)/./node_modules/@ethersproject/solidity/lib.esm/index.js\");\nObject.defineProperty(exports, \"solidityKeccak256\", ({ enumerable: true, get: function () { return solidity_1.keccak256; } }));\nObject.defineProperty(exports, \"solidityPack\", ({ enumerable: true, get: function () { return solidity_1.pack; } }));\nObject.defineProperty(exports, \"soliditySha256\", ({ enumerable: true, get: function () { return solidity_1.sha256; } }));\nvar random_1 = __webpack_require__(/*! @ethersproject/random */ \"(ssr)/./node_modules/@ethersproject/random/lib.esm/index.js\");\nObject.defineProperty(exports, \"randomBytes\", ({ enumerable: true, get: function () { return random_1.randomBytes; } }));\nObject.defineProperty(exports, \"shuffled\", ({ enumerable: true, get: function () { return random_1.shuffled; } }));\nvar properties_1 = __webpack_require__(/*! @ethersproject/properties */ \"(ssr)/./node_modules/@ethersproject/properties/lib.esm/index.js\");\nObject.defineProperty(exports, \"checkProperties\", ({ enumerable: true, get: function () { return properties_1.checkProperties; } }));\nObject.defineProperty(exports, \"deepCopy\", ({ enumerable: true, get: function () { return properties_1.deepCopy; } }));\nObject.defineProperty(exports, \"defineReadOnly\", ({ enumerable: true, get: function () { return properties_1.defineReadOnly; } }));\nObject.defineProperty(exports, \"getStatic\", ({ enumerable: true, get: function () { return properties_1.getStatic; } }));\nObject.defineProperty(exports, \"resolveProperties\", ({ enumerable: true, get: function () { return properties_1.resolveProperties; } }));\nObject.defineProperty(exports, \"shallowCopy\", ({ enumerable: true, get: function () { return properties_1.shallowCopy; } }));\nvar RLP = __importStar(__webpack_require__(/*! @ethersproject/rlp */ \"(ssr)/./node_modules/@ethersproject/rlp/lib.esm/index.js\"));\nexports.RLP = RLP;\nvar signing_key_1 = __webpack_require__(/*! @ethersproject/signing-key */ \"(ssr)/./node_modules/@ethersproject/signing-key/lib.esm/index.js\");\nObject.defineProperty(exports, \"computePublicKey\", ({ enumerable: true, get: function () { return signing_key_1.computePublicKey; } }));\nObject.defineProperty(exports, \"recoverPublicKey\", ({ enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } }));\nObject.defineProperty(exports, \"SigningKey\", ({ enumerable: true, get: function () { return signing_key_1.SigningKey; } }));\nvar strings_1 = __webpack_require__(/*! @ethersproject/strings */ \"(ssr)/./node_modules/@ethersproject/strings/lib.esm/index.js\");\nObject.defineProperty(exports, \"formatBytes32String\", ({ enumerable: true, get: function () { return strings_1.formatBytes32String; } }));\nObject.defineProperty(exports, \"nameprep\", ({ enumerable: true, get: function () { return strings_1.nameprep; } }));\nObject.defineProperty(exports, \"parseBytes32String\", ({ enumerable: true, get: function () { return strings_1.parseBytes32String; } }));\nObject.defineProperty(exports, \"_toEscapedUtf8String\", ({ enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } }));\nObject.defineProperty(exports, \"toUtf8Bytes\", ({ enumerable: true, get: function () { return strings_1.toUtf8Bytes; } }));\nObject.defineProperty(exports, \"toUtf8CodePoints\", ({ enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } }));\nObject.defineProperty(exports, \"toUtf8String\", ({ enumerable: true, get: function () { return strings_1.toUtf8String; } }));\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", ({ enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } }));\nvar transactions_1 = __webpack_require__(/*! @ethersproject/transactions */ \"(ssr)/./node_modules/@ethersproject/transactions/lib.esm/index.js\");\nObject.defineProperty(exports, \"accessListify\", ({ enumerable: true, get: function () { return transactions_1.accessListify; } }));\nObject.defineProperty(exports, \"computeAddress\", ({ enumerable: true, get: function () { return transactions_1.computeAddress; } }));\nObject.defineProperty(exports, \"parseTransaction\", ({ enumerable: true, get: function () { return transactions_1.parse; } }));\nObject.defineProperty(exports, \"recoverAddress\", ({ enumerable: true, get: function () { return transactions_1.recoverAddress; } }));\nObject.defineProperty(exports, \"serializeTransaction\", ({ enumerable: true, get: function () { return transactions_1.serialize; } }));\nObject.defineProperty(exports, \"TransactionTypes\", ({ enumerable: true, get: function () { return transactions_1.TransactionTypes; } }));\nvar units_1 = __webpack_require__(/*! @ethersproject/units */ \"(ssr)/./node_modules/@ethersproject/units/lib.esm/index.js\");\nObject.defineProperty(exports, \"commify\", ({ enumerable: true, get: function () { return units_1.commify; } }));\nObject.defineProperty(exports, \"formatEther\", ({ enumerable: true, get: function () { return units_1.formatEther; } }));\nObject.defineProperty(exports, \"parseEther\", ({ enumerable: true, get: function () { return units_1.parseEther; } }));\nObject.defineProperty(exports, \"formatUnits\", ({ enumerable: true, get: function () { return units_1.formatUnits; } }));\nObject.defineProperty(exports, \"parseUnits\", ({ enumerable: true, get: function () { return units_1.parseUnits; } }));\nvar wallet_1 = __webpack_require__(/*! @ethersproject/wallet */ \"(ssr)/./node_modules/@ethersproject/wallet/lib.esm/index.js\");\nObject.defineProperty(exports, \"verifyMessage\", ({ enumerable: true, get: function () { return wallet_1.verifyMessage; } }));\nObject.defineProperty(exports, \"verifyTypedData\", ({ enumerable: true, get: function () { return wallet_1.verifyTypedData; } }));\nvar web_1 = __webpack_require__(/*! @ethersproject/web */ \"(ssr)/./node_modules/@ethersproject/web/lib.esm/index.js\");\nObject.defineProperty(exports, \"_fetchData\", ({ enumerable: true, get: function () { return web_1._fetchData; } }));\nObject.defineProperty(exports, \"fetchJson\", ({ enumerable: true, get: function () { return web_1.fetchJson; } }));\nObject.defineProperty(exports, \"poll\", ({ enumerable: true, get: function () { return web_1.poll; } }));\n////////////////////////\n// Enums\nvar sha2_2 = __webpack_require__(/*! @ethersproject/sha2 */ \"(ssr)/./node_modules/@ethersproject/sha2/lib.esm/index.js\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", ({ enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } }));\nvar strings_2 = __webpack_require__(/*! @ethersproject/strings */ \"(ssr)/./node_modules/@ethersproject/strings/lib.esm/index.js\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", ({ enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } }));\nObject.defineProperty(exports, \"Utf8ErrorReason\", ({ enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } }));\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@crossmint/client-sdk-aa/node_modules/ethers/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@crossmint/client-sdk-aa/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@crossmint/client-sdk-aa/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blockchain: () => (/* reexport safe */ _crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.EVMBlockchainIncludingTestnet),\n/* harmony export */   CROSSMINT_DEV_URL: () => (/* binding */ he),\n/* harmony export */   CROSSMINT_PROD_URL: () => (/* binding */ Ee),\n/* harmony export */   CROSSMINT_STG_URL: () => (/* binding */ fe),\n/* harmony export */   CURRENT_VERSION: () => (/* binding */ me),\n/* harmony export */   CrossmintAASDK: () => (/* binding */ ze),\n/* harmony export */   CrossmintServiceError: () => (/* binding */ _),\n/* harmony export */   CrossmintWalletService: () => (/* binding */ Z),\n/* harmony export */   DATADOG_CLIENT_TOKEN: () => (/* binding */ ye),\n/* harmony export */   EVMAAWallet: () => (/* binding */ J),\n/* harmony export */   FireblocksNCWallet: () => (/* binding */ ie),\n/* harmony export */   KeysGenerationError: () => (/* binding */ O),\n/* harmony export */   LitProtocolError: () => (/* binding */ S),\n/* harmony export */   LocalStorageRepository: () => (/* binding */ j),\n/* harmony export */   NonCustodialWalletError: () => (/* binding */ D),\n/* harmony export */   NotAuthorizedError: () => (/* binding */ ke),\n/* harmony export */   PasskeySdkError: () => (/* binding */ C),\n/* harmony export */   PasskeysSDK: () => (/* binding */ qe),\n/* harmony export */   PassphraseRequiredError: () => (/* binding */ Oe),\n/* harmony export */   PasswordEncryptedLocalStorage: () => (/* binding */ Y),\n/* harmony export */   RELAY_API_KEY: () => (/* binding */ Pe),\n/* harmony export */   RateLimitError: () => (/* binding */ Ne),\n/* harmony export */   SCW_SERVICE: () => (/* binding */ p),\n/* harmony export */   SignTransactionError: () => (/* binding */ I),\n/* harmony export */   TransactionError: () => (/* binding */ $),\n/* harmony export */   TransferError: () => (/* binding */ x),\n/* harmony export */   WalletSdkError: () => (/* binding */ B),\n/* harmony export */   ZD_ARBITRUM_PROJECT_ID: () => (/* binding */ ve),\n/* harmony export */   ZD_ASTAR_PROJECT_ID: () => (/* binding */ Ae),\n/* harmony export */   ZD_BSC_PROJECT_ID: () => (/* binding */ Se),\n/* harmony export */   ZD_ETHEREUM_PROJECT_ID: () => (/* binding */ Te),\n/* harmony export */   ZD_GOERLI_PROJECT_ID: () => (/* binding */ be),\n/* harmony export */   ZD_MUMBAI_PROJECT_ID: () => (/* binding */ Ce),\n/* harmony export */   ZD_OPTIMISM_PROJECT_ID: () => (/* binding */ we),\n/* harmony export */   ZD_POLYGON_PROJECT_ID: () => (/* binding */ Ie),\n/* harmony export */   ZD_SEPOLIA_PROJECT_ID: () => (/* binding */ _e),\n/* harmony export */   ZD_ZKATANA_PROJECT_ID: () => (/* binding */ Re),\n/* harmony export */   ZERO_DEV_TYPE: () => (/* binding */ ge),\n/* harmony export */   chainIdToBlockchain: () => (/* reexport safe */ _crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.chainIdToBlockchain),\n/* harmony export */   createOwnerSigner: () => (/* binding */ Ye),\n/* harmony export */   decorateSendTransactionData: () => (/* binding */ We),\n/* harmony export */   errorToJSON: () => (/* binding */ g),\n/* harmony export */   getBlockExplorerByBlockchain: () => (/* binding */ Ue),\n/* harmony export */   getFireblocksAssetId: () => (/* binding */ V),\n/* harmony export */   getSmartAccountSignerFromFireblocks: () => (/* binding */ xt),\n/* harmony export */   getTickerByBlockchain: () => (/* binding */ Fe),\n/* harmony export */   getTickerNameByBlockchain: () => (/* binding */ Le),\n/* harmony export */   getUrlProviderByBlockchain: () => (/* binding */ w),\n/* harmony export */   getViemNetwork: () => (/* binding */ $e),\n/* harmony export */   getZeroDevChainSpecificConfigParams: () => (/* binding */ Ve),\n/* harmony export */   getZeroDevProjectIdByBlockchain: () => (/* binding */ R),\n/* harmony export */   isEmpty: () => (/* binding */ b),\n/* harmony export */   isLocalhost: () => (/* binding */ U),\n/* harmony export */   parseToken: () => (/* binding */ xe),\n/* harmony export */   transformBackwardsCompatibleChains: () => (/* binding */ ue)\n/* harmony export */ });\n/* harmony import */ var _crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @crossmint/common-sdk-base */ \"(ssr)/./node_modules/@crossmint/common-sdk-base/dist/index.js\");\n/* harmony import */ var _datadog_browser_logs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @datadog/browser-logs */ \"(ssr)/./node_modules/@datadog/browser-logs/esm/entries/main.js\");\n/* harmony import */ var _zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zerodev/sdk */ \"(ssr)/./node_modules/@zerodev/sdk/dist/esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _ambire_signature_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ambire/signature-validator */ \"(ssr)/./node_modules/@ambire/signature-validator/dist/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createWalletClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/decorators/public.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/hash/toFunctionSelector.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/mainnet.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/polygon.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/bsc.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/optimism.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/arbitrum.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/goerli.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/sepolia.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/polygonMumbai.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n/* harmony import */ var _fireblocks_ncw_js_sdk__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @fireblocks/ncw-js-sdk */ \"(ssr)/./node_modules/@fireblocks/ncw-js-sdk/dist/web/index.js\");\n/* harmony import */ var node_forge__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! node-forge */ \"(ssr)/./node_modules/node-forge/lib/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromBytes.js\");\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @web3auth/base */ \"(ssr)/./node_modules/@web3auth/base/dist/base.esm.js\");\n/* harmony import */ var _web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @web3auth/ethereum-provider */ \"(ssr)/./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js\");\n/* harmony import */ var _web3auth_single_factor_auth__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @web3auth/single-factor-auth */ \"(ssr)/./node_modules/@web3auth/single-factor-auth/dist/singleFactorAuth.esm.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ethers/lib/utils */ \"(ssr)/./node_modules/@crossmint/client-sdk-aa/node_modules/ethers/lib/utils.js\");\n/* harmony import */ var email_validator__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! email-validator */ \"(ssr)/./node_modules/email-validator/index.js\");\n/* harmony import */ var libphonenumber_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! libphonenumber-js */ \"(ssr)/./node_modules/libphonenumber-js/min/exports/parsePhoneNumberWithError.js\");\n/* harmony import */ var _lit_protocol_auth_helpers__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @lit-protocol/auth-helpers */ \"(ssr)/./node_modules/@lit-protocol/auth-helpers/src/index.js\");\n/* harmony import */ var _lit_protocol_constants__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @lit-protocol/constants */ \"(ssr)/./node_modules/@lit-protocol/constants/src/index.js\");\n/* harmony import */ var _lit_protocol_lit_auth_client__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @lit-protocol/lit-auth-client */ \"(ssr)/./node_modules/@lit-protocol/lit-auth-client/src/index.js\");\n/* harmony import */ var _lit_protocol_lit_node_client__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @lit-protocol/lit-node-client */ \"(ssr)/./node_modules/@lit-protocol/lit-node-client/src/index.js\");\nvar Qe=Object.defineProperty;var pe=Object.getOwnPropertySymbols,et=Object.getPrototypeOf,tt=Object.prototype.hasOwnProperty,rt=Object.prototype.propertyIsEnumerable,nt=Reflect.get;var de=(n,t,e)=>t in n?Qe(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,W=(n,t)=>{for(var e in t||(t={}))tt.call(t,e)&&de(n,e,t[e]);if(pe)for(var e of pe(t))rt.call(t,e)&&de(n,e,t[e]);return n};var k=(n,t,e)=>nt(et(n),e,t);var a=(n,t,e)=>new Promise((s,r)=>{var i=o=>{try{c(e.next(o))}catch(d){r(d)}},l=o=>{try{c(e.throw(o))}catch(d){r(d)}},c=o=>o.done?s(o.value):Promise.resolve(o.value).then(i,l);c((e=e.apply(n,t)).next())});function U(){return  false?0:window.location.origin.includes(\"localhost\")}function b(n){return!n||n.length===0||n.trim().length===0}function ue(n){switch(n){case\"mumbai\":return\"polygon-mumbai\";case\"goerli\":return\"ethereum-goerli\";default:return n}}var F=class{logInfo(t,e){console.log(t,e)}logError(t,e){console.error(t,e)}logWarn(t,e){console.warn(t,e)}};var ge=\"ZeroDev\",me=0,ye=\"pub035be8a594b35be1887b6ba76c4029ca\",he=\"http://localhost:3000/api\",fe=\"https://staging.crossmint.com/api\",Ee=\"https://www.crossmint.com/api\",Te=\"9ee29857-8077-404b-9a9a-31eeea996a4a\",Ie=\"023d4a21-d801-4450-b629-24439ab1369d\",Se=\"3d166617-da86-494b-9348-e8a13343bc04\",we=\"e9314f9e-a13d-414f-b965-c591a0248243\",ve=\"1641cd99-c1ef-404a-9d26-a9dc67b1ba51\",be=\"3cfecfb6-9d7d-4ef6-acaa-ac8f79f6cd5a\",_e=\"7ff22858-06f0-4f3a-8b46-5b41d8c75d0e\",Ce=\"9a334a4d-64d4-465c-ad81-856c6129e064\",Re=\"d54706a0-304b-419e-8a33-03c26ba3f0e9\",Ae=\"6204f336-643f-41af-94e1-f8d146c91675\",Pe=\"c8999b7e-8bb7-416d-a854-dac8632f9ee6_crossmint\",p=\"SDK_AA\";var L=class{logInfo(t,e){Q(t,\"info\",e)}logError(t,e){Q(t,\"error\",e)}logWarn(t,e){Q(t,\"warn\",e)}};function Q(n,t,e){let s=e;st(),_datadog_browser_logs__WEBPACK_IMPORTED_MODULE_0__.datadogLogs.logger[t](n,s)}function st(){_datadog_browser_logs__WEBPACK_IMPORTED_MODULE_0__.datadogLogs.getInternalContext()==null&&_datadog_browser_logs__WEBPACK_IMPORTED_MODULE_0__.datadogLogs.init({clientToken:ye,site:\"datadoghq.com\",forwardErrorsToLogs:!0,sampleRate:100})}function it(){return U()?new F:new L}var{logInfo:h,logWarn:N,logError:u}=it();var ke=class n extends Error{constructor(e){super(e);this.code=\"ERROR_NOT_AUTHORIZED\";Object.setPrototypeOf(this,n.prototype)}},Ne=class n extends Error{constructor(e,s){super(e);this.code=\"ERROR_RATE_LIMIT\";this.retryAfterMs=s,Object.setPrototypeOf(this,n.prototype)}},Oe=class n extends Error{constructor(e){super(e);this.code=\"ERROR_PASSPHRASE_REQUIRED\";Object.setPrototypeOf(this,n.prototype)}},O=class n extends Error{constructor(e){super(e);this.code=\"ERROR_KEYS_GENERATION\";Object.setPrototypeOf(this,n.prototype)}},I=class n extends Error{constructor(e){super(e);this.code=\"ERROR_SIGN_TRANSACTION\";Object.setPrototypeOf(this,n.prototype)}},x=class n extends Error{constructor(e){super(e);this.code=\"ERROR_TRANSFER\";Object.setPrototypeOf(this,n.prototype)}},$=class n extends Error{constructor(e){super(e);this.code=\"ERROR_TRANSACTION\";Object.setPrototypeOf(this,n.prototype)}},_=class n extends Error{constructor(e){super(e);this.code=\"ERROR_CROSSMINT_SERVICE\";Object.setPrototypeOf(this,n.prototype)}},D=class n extends Error{constructor(e){super(e);this.code=\"ERROR_UNDEFINED\";Object.setPrototypeOf(this,n.prototype)}},B=class n extends Error{constructor(e){super(e);this.code=\"ERROR_UNDEFINED\";Object.setPrototypeOf(this,n.prototype)}},C=class n extends Error{constructor(e){super(e);this.code=\"ERROR_UNDEFINED\";Object.setPrototypeOf(this,n.prototype)}},S=class n extends Error{constructor(e){super(e);this.code=\"ERROR_UNDEFINED\";Object.setPrototypeOf(this,n.prototype)}};function g(n){var e;let t=n instanceof Error?n:{message:\"Unknown error\",name:\"Unknown error\"};if(!(t instanceof Error)&&((e=t.constructor)==null?void 0:e.name)!==\"SyntheticBaseEvent\")throw u(\"ERROR_TO_JSON_FAILED\",{error:t}),new Error(\"[errorToJSON] err is not instanceof Error nor SyntheticBaseEvent\");return JSON.parse(JSON.stringify(t,Object.getOwnPropertyNames(t)))}var xe=n=>{try{let e=n.split(\".\")[1].replace(\"-\",\"+\").replace(\"_\",\"/\"),s=typeof window!=\"undefined\"?window.atob(e):Buffer.from(e,\"base64\").toString();return JSON.parse(s||\"\")}catch(t){throw u(\"[PARSE_TOKEN] - ERROR\",{service:p,error:g(t)}),console.error(\"Error while parsing token\"),t}};var De=[{constant:!0,inputs:[],name:\"name\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_spender\",type:\"address\"},{name:\"_value\",type:\"uint256\"}],name:\"approve\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"totalSupply\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_from\",type:\"address\"},{name:\"_to\",type:\"address\"},{name:\"_value\",type:\"uint256\"}],name:\"transferFrom\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"decimals\",outputs:[{name:\"\",type:\"uint8\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"}],name:\"balanceOf\",outputs:[{name:\"balance\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"symbol\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_value\",type:\"uint256\"}],name:\"transfer\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"},{name:\"_spender\",type:\"address\"}],name:\"allowance\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{payable:!0,stateMutability:\"payable\",type:\"fallback\"},{anonymous:!1,inputs:[{indexed:!0,name:\"owner\",type:\"address\"},{indexed:!0,name:\"spender\",type:\"address\"},{indexed:!1,name:\"value\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"from\",type:\"address\"},{indexed:!0,name:\"to\",type:\"address\"},{indexed:!1,name:\"value\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"}];var Be=[{inputs:[{internalType:\"string\",name:\"name_\",type:\"string\"},{internalType:\"string\",name:\"symbol_\",type:\"string\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"approved\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"ApprovalForAll\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"from\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"to\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"},{inputs:[{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"approve\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"}],name:\"balanceOf\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"getApproved\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"},{internalType:\"address\",name:\"operator\",type:\"address\"}],name:\"isApprovedForAll\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"name\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"ownerOf\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"safeTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"operator\",type:\"address\"},{internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"setApprovalForAll\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bytes4\",name:\"interfaceId\",type:\"bytes4\"}],name:\"supportsInterface\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"symbol\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"tokenURI\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"transferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}];var Me=[{inputs:[{internalType:\"string\",name:\"uri_\",type:\"string\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"account\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"ApprovalForAll\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"from\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"to\",type:\"address\"},{indexed:!1,internalType:\"uint256[]\",name:\"ids\",type:\"uint256[]\"},{indexed:!1,internalType:\"uint256[]\",name:\"values\",type:\"uint256[]\"}],name:\"TransferBatch\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"from\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"to\",type:\"address\"},{indexed:!1,internalType:\"uint256\",name:\"id\",type:\"uint256\"},{indexed:!1,internalType:\"uint256\",name:\"value\",type:\"uint256\"}],name:\"TransferSingle\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"string\",name:\"value\",type:\"string\"},{indexed:!0,internalType:\"uint256\",name:\"id\",type:\"uint256\"}],name:\"URI\",type:\"event\"},{inputs:[{internalType:\"address\",name:\"account\",type:\"address\"},{internalType:\"uint256\",name:\"id\",type:\"uint256\"}],name:\"balanceOf\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address[]\",name:\"accounts\",type:\"address[]\"},{internalType:\"uint256[]\",name:\"ids\",type:\"uint256[]\"}],name:\"balanceOfBatch\",outputs:[{internalType:\"uint256[]\",name:\"\",type:\"uint256[]\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"account\",type:\"address\"},{internalType:\"address\",name:\"operator\",type:\"address\"}],name:\"isApprovedForAll\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256[]\",name:\"ids\",type:\"uint256[]\"},{internalType:\"uint256[]\",name:\"amounts\",type:\"uint256[]\"},{internalType:\"bytes\",name:\"data\",type:\"bytes\"}],name:\"safeBatchTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"id\",type:\"uint256\"},{internalType:\"uint256\",name:\"amount\",type:\"uint256\"},{internalType:\"bytes\",name:\"data\",type:\"bytes\"}],name:\"safeTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"operator\",type:\"address\"},{internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"setApprovalForAll\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bytes4\",name:\"interfaceId\",type:\"bytes4\"}],name:\"supportsInterface\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],name:\"uri\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"}];var te=class n extends _zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.ZeroDevAccountSigner{constructor(e,s){super(e);this.crossmintService=s,this.signer=e.getAccountSigner()}getAddress(){return a(this,null,function*(){try{return yield this.signer.getAddress()}catch(e){throw u(\"[GET_ADDRESS] - ERROR\",{service:p,error:g(e),signer:this.signer}),new Error(\"Error getting address. If this error persists, please contact support.\")}})}signMessage(e){return a(this,null,function*(){try{return yield this.signer.signMessageWith6492(e)}catch(s){throw u(\"[SIGN_MESSAGE] - ERROR\",{service:p,error:g(s),signer:this.signer}),new Error(\"Error signing message. If this error persists, please contact support.\")}})}signTypedData(e){return a(this,null,function*(){try{return yield this.signer.signTypedData(e)}catch(s){throw u(\"[SIGN_TYPED_DATA] - ERROR\",{service:p,error:g(s),signer:this.signer}),new Error(\"Error signing typed data. If this error persists, please contact support.\")}})}transfer(e,s,r,i){return a(this,null,function*(){let l=s,c=l.contractAddress;try{let o,y=new ethers__WEBPACK_IMPORTED_MODULE_2__.Contract(c,i!==void 0?De:r!==void 0?Me:Be,this.provider).connect(this);if(i!==void 0?o=yield y.functions.transfer(e,i):r!==void 0?o=yield y.functions.safeTransferFrom(yield this.getAddress(),e,l.tokenId,r,\"0x00\"):o=yield y.functions.transferFrom(yield this.getAddress(),e,l.tokenId),(yield o.wait()).status===1)return o.hash;throw new x(`Error transferring token ${l.tokenId}${!o||!o.hash?\"\":` with transaction hash ${o.hash}`}`)}catch(o){throw u(\"[TRANSFER] - ERROR_TRANSFERRING_TOKEN\",{service:p,error:g(o),tokenId:l.tokenId,contractAddress:l.contractAddress,chain:l.chain}),new x(`Error transferring token ${l.tokenId}`)}})}sendTransaction(e){return a(this,null,function*(){try{let s=yield We(e);return yield k(n.prototype,this,\"sendTransaction\").call(this,s)}catch(s){throw u(\"[SEND_TRANSACTION] - ERROR_SENDING_TRANSACTION\",{service:p,error:g(s),transaction:e}),new $(`Error sending transaction: ${s}`)}})}},Ke=te;function V(n){let t=new Map([[\"ethereum\",\"ETH\"],[\"ethereum-goerli\",\"ETH_TEST3\"],[\"ethereum-sepolia\",\"ETH_TEST5\"],[\"polygon\",\"MATIC_POLYGON\"],[\"polygon-mumbai\",\"MATIC_POLYGON_MUMBAI\"],[\"bsc\",\"BNB_BSC\"],[\"optimism\",\"ETH-OPT\"],[\"optimism-sepolia\",\"ETH-OPT_KOV\"],[\"optimism-goerli\",\"ETH-OPT_KOV\"],[\"arbitrum\",\"ETH-AETH\"],[\"arbitrum-sepolia\",\"ETH-AETH_RIN\"],[\"base-sepolia\",\"ETH_TEST3\"],[\"base-goerli\",\"ETH_TEST3\"],[\"zora\",\"ETH\"],[\"zora-sepolia\",\"ETH_TEST3\"],[\"zora-goerli\",\"ETH_TEST3\"],[\"zkatana\",\"ETH_ZKEVM_TEST\"],[\"bsc-testnet\",null],[\"base\",null],[\"astar-zkevm\",\"ETH\"],[\"apex\",\"ETH\"]]).get(n);if(t==null)throw new Error(`Asset not found for chain ${n}`);return t}function w(n){let t=new Map([[\"ethereum\",\"https://eth.llamarpc.com\"],[\"polygon\",\"https://polygon.llamarpc.com\"],[\"bsc\",\"https://binance.llamarpc.com\"],[\"optimism\",\"https://optimism.llamarpc.com\"],[\"arbitrum\",\"https://arbitrum.llamarpc.com\"],[\"ethereum-sepolia\",\"https://ethereum-sepolia.publicnode.com\"],[\"polygon-mumbai\",\"https://polygon-mumbai-pokt.nodies.app\"],[\"zkatana\",\"https://rpc.startale.com/zkatana\"],[\"arbitrum-sepolia\",null],[\"base-goerli\",null],[\"base-sepolia\",null],[\"bsc-testnet\",null],[\"ethereum-goerli\",\"https://ethereum-goerli.publicnode.com\"],[\"optimism-goerli\",null],[\"optimism-sepolia\",null],[\"zora-goerli\",null],[\"zora-sepolia\",null],[\"base\",null],[\"zora\",null],[\"arbitrumnova\",null],[\"astar-zkevm\",\"https://rpc.startale.com/astar-zkevm\"],[\"apex\",null]]).get(n);if(t==null)throw new Error(`Url provider not found for chain ${n}`);return t}function Ue(n){let t=new Map([[\"ethereum\",\"https://etherscan.io\"],[\"polygon\",\"https://polygonscan.com\"],[\"bsc\",\"https://bscscan.com\"],[\"optimism\",\"https://optimistic.etherscan.io\"],[\"arbitrum\",\"https://arbiscan.io\"],[\"ethereum-goerli\",\"https://goerli.etherscan.io\"],[\"ethereum-sepolia\",\"https://sepolia.etherscan.io\"],[\"polygon-mumbai\",\"https://mumbai.polygonscan.com\"],[\"zkatana\",\"https://zkatana.blockscout.com\"],[\"arbitrum-sepolia\",\"https://sepolia.arbiscan.io\"],[\"base-goerli\",\"https://goerli.basescan.org\"],[\"base-sepolia\",\"https://sepolia.basescan.org\"],[\"bsc-testnet\",\"https://testnet.bscscan.com\"],[\"optimism-goerli\",\"https://goerli-optimism.etherscan.io\"],[\"optimism-sepolia\",\"https://sepolia-optimism.etherscan.io/\"],[\"zora-goerli\",null],[\"zora-sepolia\",\"https://sepolia.explorer.zora.energy\"],[\"base\",\"https://basescan.org\"],[\"zora\",\"https://explorer.zora.energy\"],[\"arbitrumnova\",\"https://nova.arbiscan.io/\"],[\"astar-zkevm\",\"https://astar-zkevm.explorer.startale.com\"],[\"apex\",\"https://explorer.apex.proofofplay.com/\"]]).get(n);if(t==null)throw new Error(`Block Explorer not found for chain ${n}`);return t}function Fe(n){let t=new Map([[\"ethereum\",\"ETH\"],[\"polygon\",\"MATIC\"],[\"bsc\",\"BNB\"],[\"optimism\",\"OP\"],[\"arbitrum\",\"ARB\"],[\"ethereum-goerli\",\"ETH\"],[\"ethereum-sepolia\",\"ETH\"],[\"polygon-mumbai\",\"MATIC\"],[\"zkatana\",\"ETH\"],[\"arbitrum-sepolia\",null],[\"base-goerli\",null],[\"base-sepolia\",null],[\"bsc-testnet\",null],[\"optimism-goerli\",null],[\"optimism-sepolia\",null],[\"zora-goerli\",null],[\"zora-sepolia\",null],[\"base\",null],[\"zora\",null],[\"arbitrumnova\",null],[\"astar-zkevm\",\"ETH\"],[\"apex\",null]]).get(n);if(t==null)throw new Error(`Ticker project id not found for chain ${n}`);return t}function Le(n){let t=new Map([[\"ethereum\",\"ETHEREUM\"],[\"polygon\",\"MATIC\"],[\"bsc\",\"BNB_BSC\"],[\"optimism\",\"OPTIMISM\"],[\"arbitrum\",\"ARBITRUM\"],[\"ethereum-goerli\",\"ETHEREUM\"],[\"ethereum-sepolia\",\"ETHEREUM\"],[\"polygon-mumbai\",\"MATIC\"],[\"zkatana\",\"ETHEREUM\"],[\"arbitrum-sepolia\",null],[\"base-goerli\",null],[\"base-sepolia\",null],[\"bsc-testnet\",null],[\"optimism-goerli\",null],[\"optimism-sepolia\",null],[\"zora-goerli\",null],[\"zora-sepolia\",null],[\"base\",null],[\"zora\",null],[\"arbitrumnova\",null],[\"astar-zkevm\",\"ETHEREUM\"],[\"apex\",null]]).get(n);if(t==null)throw new Error(`Ticker Name project id not found for chain ${n}`);return t}function R(n){let t=new Map([[\"ethereum\",Te],[\"polygon\",Ie],[\"bsc\",Se],[\"optimism\",we],[\"arbitrum\",ve],[\"ethereum-goerli\",be],[\"ethereum-sepolia\",_e],[\"polygon-mumbai\",Ce],[\"zkatana\",Re],[\"arbitrum-sepolia\",null],[\"base-goerli\",null],[\"base-sepolia\",null],[\"bsc-testnet\",null],[\"optimism-goerli\",null],[\"optimism-sepolia\",null],[\"zora-goerli\",null],[\"zora-sepolia\",null],[\"base\",null],[\"zora\",null],[\"arbitrumnova\",null],[\"astar-zkevm\",Ae],[\"apex\",null]]).get(n);if(t==null)throw new Error(`ZeroDev project id not found for chain ${n}`);return t}function $e(n){switch(n){case\"ethereum\":return viem_chains__WEBPACK_IMPORTED_MODULE_4__.mainnet;case\"polygon\":return viem_chains__WEBPACK_IMPORTED_MODULE_5__.polygon;case\"bsc\":return viem_chains__WEBPACK_IMPORTED_MODULE_6__.bsc;case\"optimism\":return viem_chains__WEBPACK_IMPORTED_MODULE_7__.optimism;case\"arbitrum\":return viem_chains__WEBPACK_IMPORTED_MODULE_8__.arbitrum;case\"ethereum-goerli\":return viem_chains__WEBPACK_IMPORTED_MODULE_9__.goerli;case\"ethereum-sepolia\":return viem_chains__WEBPACK_IMPORTED_MODULE_10__.sepolia;case\"polygon-mumbai\":return viem_chains__WEBPACK_IMPORTED_MODULE_11__.polygonMumbai;default:throw new Error(`Unsupported network: ${n}`)}}function Ve(n){let t=\"GELATO\",e=\"VERIFYING_PAYMASTER\";return n===_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.EVMBlockchainIncludingTestnet.ASTAR_ZKEVM?{bundlerProvider:t}:{opts:{providerConfig:{rpcUrl:w(n)},paymasterConfig:{policy:e}}}}var H=class{constructor(t,e){this.signer=t,this.provider=e}send(t,e){return a(this,null,function*(){let s=r=>r;switch(t){case\"eth_gasPrice\":return(yield this.provider.getGasPrice()).toHexString();case\"eth_accounts\":case\"eth_requestAccounts\":{let r=[];if(this.signer){let i=yield this.signer.getAddress();r.push(i)}return r}case\"eth_blockNumber\":return yield this.provider.getBlockNumber();case\"eth_chainId\":return(yield this.provider.getNetwork()).chainId;case\"eth_getBalance\":return(yield this.provider.getBalance(e[0],e[1])).toHexString();case\"eth_getStorageAt\":return this.provider.getStorageAt(e[0],e[1],e[2]);case\"eth_getTransactionCount\":{let r=yield this.provider.getTransactionCount(e[0],e[1]);return ethers__WEBPACK_IMPORTED_MODULE_13__.hexValue(r)}case\"eth_getBlockTransactionCountByHash\":case\"eth_getBlockTransactionCountByNumber\":{let r=yield this.provider.getBlock(e[0]);return ethers__WEBPACK_IMPORTED_MODULE_13__.hexValue(r.transactions.length)}case\"eth_getCode\":return yield this.provider.getBlock(e[0]);case\"eth_sendRawTransaction\":return yield this.provider.sendTransaction(e[0]);case\"eth_call\":{delete e[0].from;let r=ethers__WEBPACK_IMPORTED_MODULE_14__.JsonRpcProvider.hexlifyTransaction(e[0]);return yield this.provider.call(r,e[1])}case\"estimateGas\":{e[1]!=null&&e[1]!==\"latest\"&&v(\"estimateGas does not support blockTag\");let r=ethers__WEBPACK_IMPORTED_MODULE_14__.JsonRpcProvider.hexlifyTransaction(e[0]);return(yield this.provider.estimateGas(r)).toHexString()}case\"eth_getBlockByHash\":case\"eth_getBlockByNumber\":return e[1]!=null?yield this.provider.getBlockWithTransactions(e[0]):yield this.provider.getBlock(e[0]);case\"eth_getTransactionByHash\":return yield this.provider.getTransaction(e[0]);case\"eth_getTransactionReceipt\":return yield this.provider.getTransactionReceipt(e[0]);case\"eth_sign\":{if(this.signer==null)return v(\"eth_sign requires an account\");if((yield this.signer.getAddress())!==ethers__WEBPACK_IMPORTED_MODULE_15__.getAddress(e[0]))throw new Error(\"Error getting address\");return this.signer.signMessage(ethers__WEBPACK_IMPORTED_MODULE_13__.arrayify(e[1]))}case\"eth_signTransaction\":{this.signer==null&&v(\"eth_signTransaction requires a signer\");let r=e[0];return r.value=`0x${r.value.toString(16)}`,r.maxPriorityFeePerGas=`0x${r.maxPriorityFeePerGas.toString(16)}`,r.maxFeePerGas=`0x${r.maxFeePerGas.toString(16)}`,r.gasLimit=`0x${r.gas.toString(16)}`,r.type=2,delete r.gas,yield this.signer.signTransaction(r)}case\"personal_sign\":{this.signer==null&&v(\"personal_sign requires a signer\");let r=e[1],i=`\u0019Ethereum Signed Message:\n${r.length}${r}`,l=ethers__WEBPACK_IMPORTED_MODULE_16__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_17__.toUtf8Bytes(i));return yield this.signer.signMessage(ethers__WEBPACK_IMPORTED_MODULE_13__.arrayify(l))}case\"eth_sendTransaction\":{if(this.signer==null)return v(\"eth_sign requires an account\");delete e[0].from,delete e[0].gas;let r=ethers__WEBPACK_IMPORTED_MODULE_14__.JsonRpcProvider.hexlifyTransaction(e[0]);return r.gasLimit=r.gas,delete r.gas,r.value===\"0x0\"&&(r.value=\"0x00\"),(yield this.signer.sendTransaction(r)).hash}case\"eth_signTypedData_v4\":{if(this.signer==null)return v(\"eth_signTypedData_v4 requires a signer\");let r=e[0],i=yield this.signer.getAddress();if(r.toLowerCase()!==i.toLowerCase())throw new Error(\"Signer address does not match provided address\");let{domain:l,types:c,message:o}=JSON.parse(e[1]);return delete c.EIP712Domain,yield this.signer._signTypedData(l,c,o)}case\"eth_getTransactionByBlockHashAndIndex\":case\"eth_getTransactionByBlockNumberAndIndex\":case\"eth_getUncleByBlockHashAndIndex\":case\"eth_getUncleByBlockNumberAndIndex\":case\"eth_newFilter\":case\"eth_newBlockFilter\":case\"eth_newPendingTransactionFilter\":case\"eth_uninstallFilter\":case\"eth_getFilterChanges\":case\"eth_getFilterLogs\":case\"eth_getLogs\":console.log(`${t} not supported`);break}if(this.provider.send){let r=yield this.provider.send(t,e!=null?e:[]);return s(r)}return v(`unsupported method: ${t}`)})}};function v(n){throw new Error(\"Error throwUnsupported: \"+n)}var J=class extends Ke{constructor(e,s,r){super(e,s);this.chain=r}getSigner(e){return a(this,null,function*(){switch(e){case\"ethers\":return this.provider.getSigner();case\"viem\":{let l,s=new H(this.provider.getAccountSigner(),this.provider),r=(0,viem__WEBPACK_IMPORTED_MODULE_18__.custom)({request(d){return a(this,arguments,function*({method:c,params:o}){return s.send(c,o)})}});return (0,viem__WEBPACK_IMPORTED_MODULE_19__.createWalletClient)({account:yield this.getAddress(),chain:$e(this.chain),transport:r}).extend(viem__WEBPACK_IMPORTED_MODULE_20__.publicActions)}default:throw u(\"[GET_SIGNER] - ERROR\",{service:p,error:g(\"Invalid signer type\")}),new Error(\"Invalid signer type\")}})}verifyMessage(e,s){return a(this,null,function*(){return (0,_ambire_signature_validator__WEBPACK_IMPORTED_MODULE_3__.verifyMessage)({provider:this.provider,signer:yield this.getAddress(),message:e,signature:s})})}setSessionKeySignerAddress(e){this.sessionKeySignerAddress=e}setCustodianForTokens(e,s){return a(this,null,function*(){try{h(\"[SET_CUSTODIAN_FOR_TOKENS] - INIT\",{service:p,tokenType:e,custodian:s});let r=(0,viem__WEBPACK_IMPORTED_MODULE_21__.toFunctionSelector)(\"transferERC721Action(address, uint256, address)\"),i=w(this.chain),c=new ethers__WEBPACK_IMPORTED_MODULE_14__.JsonRpcProvider(i).getSigner(this.sessionKeySignerAddress),o=yield _zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.ERC165SessionKeyProvider.init({projectId:R(this.chain),sessionKey:(0,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.convertEthersSignerToAccountSigner)(c),sessionKeyData:{selector:r,erc165InterfaceId:\"0x80ac58cd\",validAfter:0,validUntil:0,addressOffset:16},opts:{accountConfig:{accountAddress:yield this.getAddress()},validatorConfig:{mode:_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.ValidatorMode.plugin,executor:_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.constants.TOKEN_ACTION,selector:r}}}),y={sessionKeyData:yield this.provider.getAccountProvider().getValidator().approveExecutor(yield this.getAddress(),r,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.constants.TOKEN_ACTION,0,0,o.getValidator()),smartContractWalletAddress:yield this.getAddress(),chain:this.chain,version:0};yield this.crossmintService.generateChainData(y),h(\"[SET_CUSTODIAN_FOR_TOKENS] - FINISH\",{service:p,tokenType:e,custodian:s})}catch(r){throw u(\"[SET_CUSTODIAN_FOR_TOKENS] - ERROR\",{service:p,error:g(r),tokenType:e,custodian:s}),new Error(\"Error setting custodian for tokens. If this error persists, please contact support.\")}})}setCustodianForKillswitch(e){return a(this,null,function*(){try{h(\"[SET_CUSTODIAN_FOR_KILLSWITCH] - INIT\",{service:p,custodian:e});let s=(0,viem__WEBPACK_IMPORTED_MODULE_21__.toFunctionSelector)(\"toggleKillSwitch()\"),r=w(this.chain),l=new ethers__WEBPACK_IMPORTED_MODULE_14__.JsonRpcProvider(r).getSigner(this.sessionKeySignerAddress),c=yield _zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.KillSwitchProvider.init({projectId:R(this.chain),guardian:(0,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.convertEthersSignerToAccountSigner)(l),delaySeconds:1e3,opts:{accountConfig:{accountAddress:yield this.getAddress()},validatorConfig:{mode:_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.ValidatorMode.plugin,executor:_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.constants.KILL_SWITCH_ACTION,selector:s}}}),d={killSwitchData:yield this.provider.getAccountProvider().getValidator().approveExecutor(yield this.getAddress(),s,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.constants.KILL_SWITCH_ACTION,0,0,c.getValidator()),smartContractWalletAddress:yield this.getAddress(),chain:this.chain,version:0};yield this.crossmintService.generateChainData(d),h(\"[SET_CUSTODIAN_FOR_KILLSWITCH] - FINISH\",{service:p,custodian:e})}catch(s){throw u(\"[SET_CUSTODIAN_FOR_KILLSWITCH] - ERROR\",{service:p,error:g(s),custodian:e}),new Error(\"Error setting custodian for killswitch. If this error persists, please contact support.\")}})}upgradeVersion(){return a(this,null,function*(){try{h(\"[UPGRADE_VERSION] - INIT\",{service:p});let e=yield this.crossmintService.createSessionKey(yield this.getAddress());if(e==null)throw new Error(\"Abstract Wallet doesn't have a session key signer address\");let s=yield this.crossmintService.checkVersion(yield this.getAddress());if(s.isUpToDate)return;let r=s.latestVersion;if(r==null)throw new Error(\"New version info not found\");let i=yield this.getAddress(),l=r.providerUrl;if(l==null&&r.chainId){let P=(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.chainIdToBlockchain)(r.chainId);l=w(P)}let o=new ethers__WEBPACK_IMPORTED_MODULE_14__.JsonRpcProvider(l).getSigner(e.sessionKeySignerAddress),d=(0,viem__WEBPACK_IMPORTED_MODULE_21__.toFunctionSelector)(r.method),y=yield _zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.ERC165SessionKeyProvider.init({projectId:R(this.chain),sessionKey:(0,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.convertEthersSignerToAccountSigner)(o),sessionKeyData:{selector:r.selector,erc165InterfaceId:r.erc165InterfaceId,validAfter:r.validAfter,validUntil:r.validUntil,addressOffset:r.addressOffset},opts:{accountConfig:{accountAddress:i},validatorConfig:{mode:r.mode,executor:r.executor,selector:d}}}),f=yield this.provider.accountProvider.account.getValidator().approveExecutor(i,r.selector,r.tokenAction,0,0,y.getValidator());yield this.crossmintService.updateWallet(yield this.getAddress(),f,1),h(\"[UPGRADE_VERSION - FINISH\",{service:p})}catch(e){throw u(\"[UPGRADE_VERSION] - ERROR\",{service:p,error:g(e)}),new Error(\"Error upgrading version. If this error persists, please contact support.\")}})}getNFTs(){return a(this,null,function*(){return this.crossmintService.fetchNFTs(yield this.getAddress(),this.chain)})}};var Y=class n extends _fireblocks_ncw_js_sdk__WEBPACK_IMPORTED_MODULE_22__.BrowserLocalStorageProvider{constructor(e,s){super();this._salt=e;this.getPassword=s;this.encKey=null}getAccess(){return a(this,null,function*(){return this.encKey=yield this._generateEncryptionKey(),()=>a(this,null,function*(){yield this._release()})})}_release(){return a(this,null,function*(){this.encKey=null})}get(e){return a(this,null,function*(){if(!this.encKey)throw new Error(\"Storage locked\");let s=yield k(n.prototype,this,\"get\").call(this,e);return s?(0,_fireblocks_ncw_js_sdk__WEBPACK_IMPORTED_MODULE_22__.decryptAesGCM)(s,this.encKey,this._salt):null})}set(e,s){return a(this,null,function*(){if(!this.encKey)throw new Error(\"Storage locked\");let r=yield (0,_fireblocks_ncw_js_sdk__WEBPACK_IMPORTED_MODULE_22__.encryptAesGCM)(s,this.encKey,this._salt);yield k(n.prototype,this,\"set\").call(this,e,r)})}_generateEncryptionKey(){return a(this,null,function*(){let e=yield this.getPassword(),s=node_forge__WEBPACK_IMPORTED_MODULE_23__.md.md5.create();for(let r=0;r<1e3;++r)s.update(e),e=s.digest().toHex();return e})}};var j=class{constructor(t,e){this.userIdentifier=t;this.projectId=e;this.NCW_DEVICE_ID_KEY_PREFIX=\"NCW-deviceId\";this.NCW_WALLET_ID_KEY_PREFIX=\"NCW-walletId\";this.NCW_ADDRESS_KEY_PREFIX=\"NCW-address\"}get ncwData(){let t=localStorage.getItem(this.key(this.NCW_DEVICE_ID_KEY_PREFIX)),e=localStorage.getItem(this.key(this.NCW_WALLET_ID_KEY_PREFIX));return t&&e?{walletId:e,deviceId:t}:null}set ncwData(t){if(t==null)return;let{walletId:e,deviceId:s}=t;localStorage.setItem(this.key(this.NCW_DEVICE_ID_KEY_PREFIX),s),localStorage.setItem(this.key(this.NCW_WALLET_ID_KEY_PREFIX),e)}get ncwAddress(){return localStorage.getItem(this.key(this.NCW_ADDRESS_KEY_PREFIX))}set ncwAddress(t){t?localStorage.setItem(this.key(this.NCW_ADDRESS_KEY_PREFIX),t):localStorage.removeItem(this.key(this.NCW_ADDRESS_KEY_PREFIX))}key(t){let e=kt(this.userIdentifier);return`${t}-${e}-${this.projectId}`}};function kt(n){switch(n.type){case\"email\":return`email:${n.email}`;case\"phoneNumber\":return`phoneNumber:${n.phoneNumber}`;case\"whiteLabel\":return`userId:${n.userId}`}}var ie=l=>a(void 0,[l],function*({userIdentifier:n,projectId:t,crossmintService:e,chain:s,passphrase:r,ncwData:i}){var oe,ce,le;let c=new j(n,t),o,d,y;if(i)o=i.walletId,d=i.deviceId,y=!1;else{let m=(oe=c.ncwData)!=null?oe:yield e.getOrAssignWallet(n);o=m.walletId,d=m.deviceId,y=m.isNew!==void 0?m.isNew:!1}let f={handleOutgoingMessage:m=>a(void 0,null,function*(){let T=yield e.rpc(o,d,m);if(T.error!==void 0)throw T.error.code===-1?(u(\"[FIREBLOCKS_RPC] - ERROR_UNEXPECTED_PHYSICAL_DEVICE_ID\",{service:p,error:g(T.error),walletId:o,deviceId:d,chain:s,user:n}),new D(\"Unexpected physicalDeviceId\")):(u(\"[FIREBLOCKS_RPC] - ERROR\",{service:p,error:g(T.error),message:T.error.message,walletId:o,deviceId:d,chain:s,user:n}),new D(`NCW Error: ${T.error.message}`));return T})},P={handleEvent:m=>{(m.type===\"key_descriptor_changed\"||m.type===\"key_takeover_changed\"||m.type===\"transaction_signature_changed\")&&console.log(m)}},Xe=new Y(d,()=>r),K=yield (0,_fireblocks_ncw_js_sdk__WEBPACK_IMPORTED_MODULE_22__.FireblocksNCWFactory)({env:\"production\",deviceId:d,messagesHandler:f,eventsHandler:P,secureStorageProvider:Xe});if(y)try{yield K.generateMPCKeys(Mt()),yield K.backupKeys(r,d)}catch(m){throw u(\"[FIREBLOCKS_GENEARTE_MPC_KEYS] - ERROR\",{service:p,error:g(m),walletId:o,deviceId:d,chain:s,user:n}),yield e.unassignWallet(n),new O(`Error generating keys. ${(ce=m==null?void 0:m.title)!=null?ce:\"\"}}`)}else try{yield K.recoverKeys(m=>a(void 0,null,function*(){if(m!==d)throw new Error(\"Invalid passphraseId. Can not recover the keys.\");return r}))}catch(m){throw u(\"[FIREBLOCKS_NCW] - ERROR_RECOVERING_KEYS\",{service:p,error:g(m),walletId:o,deviceId:d,chain:s,user:n}),new O(`Error recovering keys. ${(le=m==null?void 0:m.title)!=null?le:\"\"}`)}return c.ncwData={walletId:o,deviceId:d},{owner:xt(e,K,o,s,c)}});function xt(n,t,e,s,r){return{getAddress:()=>a(this,null,function*(){let i=r.ncwAddress;return i||(i=yield n.getAddress(e,0,V(s)),r.ncwAddress=i),i}),signMessage:i=>a(this,null,function*(){return Dt(n,t,e,s,i)}),signTypedData:i=>a(this,null,function*(){return Bt(n,t,e,s,i)})}}var Dt=(n,t,e,s,r)=>a(void 0,null,function*(){var c;let i=r instanceof Uint8Array?(0,viem__WEBPACK_IMPORTED_MODULE_24__.fromBytes)(r,\"hex\"):r,l=yield n.createTransaction(i,e,V(s),!1);try{let o=yield t.signTransaction(l);console.log(`txId: ${o.txId}`,`status: ${o.transactionSignatureStatus}`),Je(o)}catch(o){throw u(\"[FIREBLOCKS_SIGN_MESSAGE] - ERROR\",{service:p,error:g(o),walletId:e,chain:s,message:r}),new I(`Error signing transaction. ${(c=o==null?void 0:o.title)!=null?c:\"\"}`)}return yield n.getSignature(l)}),Bt=(n,t,e,s,r)=>a(void 0,null,function*(){var l;let i=yield n.createTransaction(r,e,V(s),!0);try{let c=yield t.signTransaction(i);console.log(`txId: ${c.txId}`,`status: ${c.transactionSignatureStatus}`),Je(c)}catch(c){throw u(\"[FIREBLOCKS_SIGN_TYPED_DATA] - ERROR\",{service:p,error:g(c),walletId:e,chain:s,params:r}),new I(`Error signing transaction. ${(l=c==null?void 0:c.title)!=null?l:\"\"}`)}return yield n.getSignature(i)}),Je=n=>{if(n.transactionSignatureStatus===\"TIMEOUT\")throw new I(`Timeout signing transaction ${n.txId}`);if(n.transactionSignatureStatus===\"ERROR\")throw new I(`There has been an error signing transaction ${n.txId}`)},Mt=()=>{let n=new Set;return n.add(\"MPC_CMP_ECDSA_SECP256K1\"),n};function Ye(i){return a(this,arguments,function*({userIdentifier:n,projectId:t,chain:e,walletConfig:s,crossmintService:r}){if(Ht(s.signer)){let l;if(\"walletId\"in s.signer&&\"deviceId\"in s.signer){let{passphrase:c,walletId:o,deviceId:d}=s.signer;l=yield ie({userIdentifier:n,projectId:t,crossmintService:r,chain:e,passphrase:c,ncwData:{walletId:o,deviceId:d}})}else{let{passphrase:c}=s.signer;l=yield ie({userIdentifier:n,projectId:t,crossmintService:r,chain:e,passphrase:c})}return l.owner}else if(Gt(s.signer)){let l=s.signer,c=(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.blockchainToChainId)(e),o={chainNamespace:_web3auth_base__WEBPACK_IMPORTED_MODULE_25__.CHAIN_NAMESPACES.EIP155,chainId:\"0x\"+c.toString(16),rpcTarget:w(e),displayName:(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.blockchainToDisplayName)(e),blockExplorer:Ue(e),ticker:Fe(e),tickerName:Le(e)},d=new _web3auth_single_factor_auth__WEBPACK_IMPORTED_MODULE_27__.Web3Auth({clientId:l.clientId,web3AuthNetwork:l.web3AuthNetwork,usePnPKey:!1}),y=new _web3auth_ethereum_provider__WEBPACK_IMPORTED_MODULE_26__.EthereumPrivateKeyProvider({config:{chainConfig:o}});yield d.init(y);let{sub:f}=xe(l.jwt),P=yield d.connect({verifier:l.verifierId,verifierId:f,idToken:l.jwt});return (0,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.getRPCProviderOwner)(P)}else return (0,_zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.convertEthersSignerToAccountSigner)(s.signer)})}function Ht(n){return n&&n.type===\"FIREBLOCKS_NCW\"}function Gt(n){return n&&n.type===\"WEB3_AUTH\"}function We(n){return a(this,null,function*(){let t=W({},n);if(n.value){let e=yield n.value;e&&(t.value=(0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_28__.hexlify)(e,{hexPad:\"left\"}))}if(n.data){let e=yield n.data;e&&(t.data=(0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_28__.hexlify)(e,{hexPad:\"left\"}))}return t})}var M=class M{constructor(t){let e=(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.validateAPIKey)(t);if(!e.isValid)throw new Error(\"API key invalid\");this.crossmintAPIHeaders={accept:\"application/json\",\"content-type\":\"application/json\",\"x-api-key\":t},this.crossmintBaseUrl=this.getUrlFromEnv(e.environment)}fetchCrossmintAPI(r){return a(this,arguments,function*(t,e={method:\"GET\"},s){let i=`${this.crossmintBaseUrl}/${t}`,{body:l,method:c}=e;try{let o=yield fetch(i,{body:l,method:c,headers:this.crossmintAPIHeaders});if(!o.ok)throw o.status>=500?new _(s):new _(yield o.text());return yield o.json()}catch(o){throw u(\"[CROSSMINT_SERVICE] - ERROR\",{service:p,error:g(o)}),new _(`Error fetching Crossmint API: ${o}`)}})}getUrlFromEnv(t){let e=M.urlMap[t];if(!e)throw console.log(\" CrossmintService.urlMap: \",M.urlMap),new Error(`URL not found for environment: ${t}`);return e}};M.urlMap={development:he,staging:fe,production:Ee};var A=M;var Z=class extends A{createSessionKey(t){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/wallets/sessionkey\",{method:\"POST\",body:JSON.stringify({address:t})},\"Error creating the wallet. Please check the configuration parameters\")})}storeAbstractWallet(t){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/wallets\",{method:\"POST\",body:JSON.stringify(t)},\"Error creating abstract wallet. Please contact support\")})}generateChainData(t){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/wallets/chaindata\",{method:\"POST\",body:JSON.stringify(t)},\"Error setting custodian. Please contact support\")})}getOrAssignWallet(t){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/ncw\",{method:\"POST\",body:JSON.stringify({userIdentifier:t})},`Error getting or assigning wallet for user: ${JSON.stringify({userIdentifier:t})}`)})}unassignWallet(t){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/ncw/unassign\",{method:\"POST\",body:JSON.stringify({userIdentifier:t})},`Error unassigning wallet for user: ${JSON.stringify({userIdentifier:t})}`)})}rpc(t,e,s){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/ncw/rpc\",{method:\"POST\",body:JSON.stringify({walletId:t,deviceId:e,payload:s})},\"Error creating abstract wallet. Please contact support\")})}createTransaction(t,e,s,r){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/ncw/transaction\",{method:\"POST\",body:JSON.stringify({data:t,walletId:e,assetId:s,typedMessage:r})},`Error creating transaction for wallet: ${e}`)})}getSignature(t){return a(this,null,function*(){return this.fetchCrossmintAPI(`unstable/wallets/aa/ncw/transaction?txId=${t}`,{method:\"GET\"},`Error getting signature for transaction: ${t}`)})}getAddress(t,e,s){return a(this,null,function*(){return this.fetchCrossmintAPI(`unstable/wallets/aa/ncw/address?walletId=${t}&accountId=${e}&assetId=${s}`,{method:\"GET\"},`Error getting address for wallet: ${t}, account: ${e} and asset: ${s}`)})}getNCWIdentifier(t){return a(this,null,function*(){return this.fetchCrossmintAPI(`unstable/wallets/aa/ncw?deviceId=${t}`,{method:\"GET\"},`Error getting NCW identifier for device: ${t}`)})}checkVersion(t){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/wallets/version/check\",{method:\"POST\",body:JSON.stringify({address:t})},`Error checking version for wallet: ${t}`)})}updateWallet(t,e,s){return a(this,null,function*(){return this.fetchCrossmintAPI(\"unstable/wallets/aa/wallets/version/update\",{method:\"POST\",body:JSON.stringify({address:t,enableSig:e,version:s})},`Error updating wallet: ${t}`)})}fetchNFTs(t,e){return a(this,null,function*(){return this.fetchCrossmintAPI(`v1-alpha1/wallets/${e}:${t}/nfts`,{method:\"GET\"},`Error fetching NFTs for wallet: ${t}`)})}};function Ze(n,t=!1){let{userId:e,email:s}=n,r=Zt(n.phoneNumber,t);if(zt(e,s,r),!b(e))return{type:\"whiteLabel\",userId:e};if(!b(r))return{type:\"phoneNumber\",phoneNumber:r};if(!b(s)){if(!email_validator__WEBPACK_IMPORTED_MODULE_29__.validate(s))throw new Error(`Invalid email(${s}) address provided`);return{type:\"email\",email:s}}throw new Error(\"Missing required parameter.\")}function Zt(n,t=!1){if(b(n))return;let e=n.startsWith(\"+\");if(!e&&!t)throw new Error(\"Invalid phone number provided. Please provide a phone number starting with a '+', and include the country code\");e||(n=`+${n.trimStart()}`);let s=(0,libphonenumber_js__WEBPACK_IMPORTED_MODULE_30__.parsePhoneNumberWithError)(n);if(!s.isValid())throw console.log(`Invalid phone number reported (${n}).`),new Error(\"Invalid phone number provided. Please be sure to include the country code.\");return s.number.toString()}function zt(n,t,e){let s=[n,t,e].filter(r=>!b(r)).length;if(s>1)throw new Error(\"Only one of the parameters 'userId', 'email', or 'phoneNumber' can be provided\");if(s===0)throw new Error(\"Missing required parameter 'userId', 'email', or 'phoneNumber'\")}var ze=class n{constructor(t){let e=(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.validateAPIKey)(t.apiKey);if(!e.isValid)throw new Error(\"API key invalid\");this.projectId=e.projectId,this.crossmintService=new Z(t.apiKey)}static init(t){return new n(t)}getOrCreateWallet(t,e,s){return a(this,null,function*(){var r;try{if(e=ue(e),h(\"[GET_OR_CREATE_WALLET] - INIT\",{service:p,user:t,chain:e}),!(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.isEVMBlockchain)(e))throw new B(`The blockchain ${e} is not supported`);let i=Ze(t),l=yield Ye({userIdentifier:i,projectId:this.projectId,chain:e,walletConfig:s,crossmintService:this.crossmintService}),c=yield l.getAddress(),o=yield _zerodev_sdk__WEBPACK_IMPORTED_MODULE_1__.ZeroDevEthersProvider.init(\"ECDSA\",W({projectId:R(e),owner:l},Ve(e))),d=new J(o,this.crossmintService,e),y=yield d.getAddress(),{sessionKeySignerAddress:f}=yield this.crossmintService.createSessionKey(y);return d.setSessionKeySignerAddress(f),yield this.crossmintService.storeAbstractWallet({userIdentifier:i,type:ge,smartContractWalletAddress:y,eoaAddress:c,sessionKeySignerAddress:f,version:0,baseLayer:\"evm\",chainId:(0,_crossmint_common_sdk_base__WEBPACK_IMPORTED_MODULE_12__.blockchainToChainId)(e)}),h(\"[GET_OR_CREATE_WALLET] - FINISH\",{service:p,userEmail:t.email,chain:e,abstractAddress:y}),d}catch(i){throw u(\"[GET_OR_CREATE_WALLET] - ERROR_CREATING_WALLET\",{service:p,error:g(i),user:t,chain:e}),new B(`Error creating the Wallet [${(r=i==null?void 0:i.name)!=null?r:\"\"}]`)}})}purgeAllWalletData(){return a(this,null,function*(){Object.keys(localStorage).filter(s=>s.startsWith(\"NCW-\")).forEach(s=>{localStorage.removeItem(s)})})}};var z=class extends A{getPasskeyCiphers(t){return a(this,null,function*(){let e=yield this.fetchCrossmintAPI(`v1-alpha1/passkeys/ciphers/${t}`,{method:\"GET\"},`Error fetching passkeys ciphers for: ${t}`);return{chain:e.chain,walletAddress:e.walletAddress,cipher:{method:e.cipherMethod,data:e.cipherData}}})}upsertPasskeyCiphers(t,e){return a(this,null,function*(){return this.fetchCrossmintAPI(`v1-alpha1/passkeys/ciphers/${t}`,{method:\"PUT\",body:JSON.stringify(e)},`Error updating passkey ciphers: ${e}`)})}getCapacityCreditsOwnerSignature(){return a(this,null,function*(){return this.fetchCrossmintAPI(\"v1-alpha1/passkeys/ciphers/capacity-credits-owner-signature\",{method:\"GET\"},\"Error fetching capacity credits owner signature\")})}};var q=\"polygon\",X=class{connect(){return a(this,null,function*(){this.litNodeClient=new _lit_protocol_lit_node_client__WEBPACK_IMPORTED_MODULE_34__.LitNodeClient({litNetwork:U()?\"manzano\":\"habanero\"}),yield this.litNodeClient.connect(),this.litAuthClient=new _lit_protocol_lit_auth_client__WEBPACK_IMPORTED_MODULE_33__.LitAuthClient({litRelayConfig:{relayApiKey:Pe},litNodeClient:this.litNodeClient}),this.litAuthClient.initProvider(_lit_protocol_constants__WEBPACK_IMPORTED_MODULE_32__.ProviderType.WebAuthn)})}registerWithWebAuthn(t){return a(this,null,function*(){var e,s;try{this.litAuthClient==null&&(yield this.connect());let r=this.litAuthClient.getProvider(_lit_protocol_constants__WEBPACK_IMPORTED_MODULE_32__.ProviderType.WebAuthn),i=yield r.register(t),l=yield r.verifyAndMintPKPThroughRelayer(i),c=yield r.relay.pollRequestUntilTerminalState(l);if(c.status!==\"Succeeded\")throw u(\"[LIT_REGISTER_WEBAUTHN] - ERROR_REGISTER_WEBAUTHN\",{service:p,error:g(c.error),identifier:t}),new S(`Failed to register with WebAuthn: ${(e=c.error)!=null?e:\"\"}`);return h(\"[LIT_REGISTER_WEBAUTHN] - FINISH\",{service:p,identifier:t}),{pkpEthAddress:c.pkpEthAddress,pkpPublicKey:c.pkpPublicKey}}catch(r){throw u(\"[LIT_REGISTER_WEBAUTHN] - ERROR_REGISTER_WEBAUTHN\",{service:p,error:r.message,identifier:t}),new S(`Error signing up [${(s=r==null?void 0:r.name)!=null?s:\"\"}]`)}})}encrypt(i){return a(this,arguments,function*({messageToEncrypt:t,pkpPublicKey:e,pkpEthAddress:s,capacityDelegationAuthSig:r}){try{let{sessionSigs:l,accessControlConditions:c}=yield this.prepareLit(e,s,r),{ciphertext:o,dataToEncryptHash:d}=yield (0,_lit_protocol_lit_node_client__WEBPACK_IMPORTED_MODULE_34__.encryptString)({accessControlConditions:c,sessionSigs:l,chain:q,dataToEncrypt:t},this.litNodeClient);return h(\"[LIT_ENCRYPT] - FINISH\",{service:p,pkpPublicKey:e,pkpEthAddress:s,capacityDelegationAuthSig:r}),{ciphertext:o,dataToEncryptHash:d}}catch(l){throw u(\"[LIT_ENCRYPT] - ERROR_ENCRYPT\",{service:p,pkpPublicKey:e,pkpEthAddress:s,capacityDelegationAuthSig:r}),new S(\"Error encrypting message\")}})}decrypt(l){return a(this,arguments,function*({pkpPublicKey:t,pkpEthAddress:e,cipherText:s,dataToEncryptHash:r,capacityDelegationAuthSig:i}){var c;try{let{sessionSigs:o,accessControlConditions:d}=yield this.prepareLit(t,e,i),y=yield (0,_lit_protocol_lit_node_client__WEBPACK_IMPORTED_MODULE_34__.decryptToString)({accessControlConditions:d,ciphertext:s,dataToEncryptHash:r,sessionSigs:o,chain:q},this.litNodeClient);return h(\"[LIT_DECRYPT] - FINISH\",{service:p,pkpPublicKey:t,pkpEthAddress:e,cipherText:s,dataToEncryptHash:r,capacityDelegationAuthSig:i}),y}catch(o){throw u(\"[LIT_DECRYPT] - ERROR_LIT_DECRYPT\",{service:p,error:o.message,pkpPublicKey:t,pkpEthAddress:e,cipherText:s,dataToEncryptHash:r,capacityDelegationAuthSig:i}),new S(`Error decrypting message [${(c=o==null?void 0:o.message)!=null?c:\"\"}]`)}})}prepareLit(t,e,s){return a(this,null,function*(){this.litAuthClient==null&&(yield this.connect());let r=this.litAuthClient.getProvider(_lit_protocol_constants__WEBPACK_IMPORTED_MODULE_32__.ProviderType.WebAuthn),i=yield r.authenticate();return{sessionSigs:yield r.getSessionSigs({authMethod:i,pkpPublicKey:t,sessionSigsParams:{chain:q,resourceAbilityRequests:[{resource:new _lit_protocol_auth_helpers__WEBPACK_IMPORTED_MODULE_31__.LitActionResource(\"*\"),ability:_lit_protocol_auth_helpers__WEBPACK_IMPORTED_MODULE_31__.LitAbility.AccessControlConditionDecryption}],capacityDelegationAuthSig:s}}),accessControlConditions:[{contractAddress:\"\",standardContractType:\"\",chain:q,method:\"\",parameters:[\":userAddress\"],returnValueTest:{comparator:\"=\",value:e}}]}})}};var qe=class n{constructor(t,e){this.crossmintService=t,this.litService=e}static init(t){return new n(new z(t.apiKey),new X)}signUp(t,e){return a(this,null,function*(){var s;try{if(yield this.checkCiphersExist(t,e)){N(\"[SIGN_UP] - PKP and/or Secrets alreay exist. Skipping sign up.\",{chain:t,walletAddress:e});return}let{pkpEthAddress:r,pkpPublicKey:i}=yield this.litService.registerWithWebAuthn(`${t}:${e}`);return yield this.savePKP(t,e,r,i),h(\"[PASSKEYS_SIGN_UP] - FINISH\",{service:p,chain:t,walletAddress:e,pkpEthAddress:r,pkpPublicKey:i}),{pkpEthAddress:r,pkpPublicKey:i}}catch(r){throw u(\"[PASSKEYS_SIGN_UP] - ERROR_SIGNING_UP\",{service:p,error:g(r),chain:t,walletAddress:e}),new C(`Error signing up [${(s=r==null?void 0:r.name)!=null?s:\"\"}]`)}})}encrypt(t,e,s){return a(this,null,function*(){var r;try{let i=yield this.getPasskeyCiphers(t,e);if(this.checkSecretAlreadyCreated(i)){N(\"[PASSKEYS_ENCRYPT] - Secret already created. Skipping...\",{chain:t,walletAddress:e});return}let l,c;if(this.checkPPKAlreadyMinted(i))l=i.cipher.data.pkpEthAddress,c=i.cipher.data.pkpPublicKey;else{let f=yield this.signUp(t,e);l=f==null?void 0:f.pkpEthAddress,c=f==null?void 0:f.pkpPublicKey}let o=yield this.crossmintService.getCapacityCreditsOwnerSignature(),{ciphertext:d,dataToEncryptHash:y}=yield this.litService.encrypt({messageToEncrypt:s,pkpPublicKey:c,pkpEthAddress:l,capacityDelegationAuthSig:o});return yield this.saveCypherText(t,e,d,y),h(\"[PASSKEYS_ENCRYPT] - FINISH\",{service:p,chain:t,walletAddress:e}),{ciphertext:d,dataToEncryptHash:y}}catch(i){throw u(\"[PASSKEYS_ENCRYPT] - ERROR_ENCRYPTING\",{service:p,error:g(i),chain:t,walletAddress:e}),new C(`Error encrypting message [${(r=i==null?void 0:i.name)!=null?r:\"\"}]`)}})}decrypt(t,e){return a(this,null,function*(){var s;try{let r=yield this.getPasskeyCiphers(t,e);if(!this.checkPPKAlreadyMinted(r)){N(\"[PASSKEYS_DECRYPT] - PKP not minted. Please sign up first.\",{chain:t,walletAddress:e});return}if(!this.checkSecretAlreadyCreated(r)){N(\"[PASSKEYS_DECRYPT] - Secret not created. Please create one first.\",{chain:t,walletAddress:e});return}let i=yield this.crossmintService.getCapacityCreditsOwnerSignature(),l=yield this.litService.decrypt({pkpPublicKey:r.cipher.data.pkpPublicKey,pkpEthAddress:r.cipher.data.pkpEthAddress,cipherText:r.cipher.data.cipherText,dataToEncryptHash:r.cipher.data.dataToEncryptHash,capacityDelegationAuthSig:i});return h(\"[PASSKEYS_DECRYPT] - FINISH\",{service:p,chain:t,walletAddress:e}),l}catch(r){throw u(\"[PASSKEYS_DECRYPT] - ERROR_DECRYPTING\",{service:p,error:g(r),chain:t,walletAddress:e}),new C(`Error decrypting message [${(s=r==null?void 0:r.name)!=null?s:\"\"}]`)}})}getPasskeyCiphers(t,e){return a(this,null,function*(){return this.crossmintService.getPasskeyCiphers(`${t}:${e}`)})}checkCiphersExist(t,e){return a(this,null,function*(){let s=yield this.getPasskeyCiphers(t,e);return this.checkPPKAlreadyMinted(s)||this.checkSecretAlreadyCreated(s)})}checkPPKAlreadyMinted(t){return t!=null&&t.cipher!=null&&t.cipher.data!=null&&t.cipher.data.pkpEthAddress!=null&&t.cipher.data.pkpPublicKey!=null}checkSecretAlreadyCreated(t){return t!=null&&t.cipher.data!=null&&t.cipher.data.cipherText!=null&&t.cipher.data.dataToEncryptHash!=null}savePKP(t,e,s,r){return a(this,null,function*(){yield this.crossmintService.upsertPasskeyCiphers(`${t}:${e}`,{chain:t,walletAddress:e,cipherMethod:\"lit_protocol\",cipherData:{pkpEthAddress:s,pkpPublicKey:r}})})}saveCypherText(t,e,s,r){return a(this,null,function*(){yield this.crossmintService.upsertPasskeyCiphers(`${t}:${e}`,{chain:t,walletAddress:e,cipherMethod:\"lit_protocol\",cipherData:{cipherText:s,dataToEncryptHash:r}})})}};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@crossmint/client-sdk-aa/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@crossmint/common-sdk-base/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@crossmint/common-sdk-base/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIKeyEnvironmentPrefix: () => (/* binding */ o),\n/* harmony export */   APIKeyUsageOrigin: () => (/* binding */ f),\n/* harmony export */   APIKeyUsageOriginPrefix: () => (/* binding */ u),\n/* harmony export */   BLOCKCHAINS: () => (/* binding */ h),\n/* harmony export */   BLOCKCHAINS_INCLUDING_TESTNETS: () => (/* binding */ _),\n/* harmony export */   BLOCKCHAIN_BASE_LAYERS: () => (/* binding */ Oe),\n/* harmony export */   BLOCKCHAIN_TESTNETS: () => (/* binding */ Ke),\n/* harmony export */   BLOCKCHAIN_TO_CHAIN_ID: () => (/* binding */ d),\n/* harmony export */   BLOCKCHAIN_TO_COPY_NAME: () => (/* binding */ W),\n/* harmony export */   Blockchain: () => (/* binding */ K),\n/* harmony export */   BlockchainBaseLayer: () => (/* binding */ z),\n/* harmony export */   BlockchainIncludingTestnet: () => (/* binding */ $),\n/* harmony export */   BlockchainTestnet: () => (/* binding */ V),\n/* harmony export */   CHAIN_ID_TO_BLOCKCHAIN: () => (/* binding */ w),\n/* harmony export */   CROSSMINT_API_KEY_SIGNER_PUBLICKEY_PROD: () => (/* binding */ m),\n/* harmony export */   CROSSMINT_API_KEY_SIGNER_PUBLICKEY_STAGING: () => (/* binding */ I),\n/* harmony export */   EVMBlockchain: () => (/* binding */ p),\n/* harmony export */   EVMBlockchainIncludingTestnet: () => (/* binding */ Y),\n/* harmony export */   EVMBlockchainTestnet: () => (/* binding */ P),\n/* harmony export */   EVM_BLOCKCHAINS_INCLUDING_TESTNETS: () => (/* binding */ B),\n/* harmony export */   EVM_BLOCKCHAIN_TESTNETS: () => (/* binding */ fe),\n/* harmony export */   EVM_CHAINS: () => (/* binding */ Ae),\n/* harmony export */   blockchainToChainId: () => (/* binding */ ze),\n/* harmony export */   blockchainToDisplayName: () => (/* binding */ je),\n/* harmony export */   chainIdToBlockchain: () => (/* binding */ we),\n/* harmony export */   environmentToExpectedPublicKey: () => (/* binding */ S),\n/* harmony export */   isBlockchain: () => (/* binding */ ve),\n/* harmony export */   isBlockchainIncludingTestnets: () => (/* binding */ N),\n/* harmony export */   isEVMBlockchain: () => (/* binding */ Xe),\n/* harmony export */   objectValues: () => (/* binding */ a),\n/* harmony export */   usageOriginToPrefix: () => (/* binding */ x),\n/* harmony export */   validateAPIKey: () => (/* binding */ ue),\n/* harmony export */   validateAPIKeyPrefix: () => (/* binding */ k)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\");\nvar C=Object.defineProperty,b=Object.defineProperties;var M=Object.getOwnPropertyDescriptors;var y=Object.getOwnPropertySymbols;var R=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable;var T=(e,t,i)=>t in e?C(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,r=(e,t)=>{for(var i in t||(t={}))R.call(t,i)&&T(e,i,t[i]);if(y)for(var i of y(t))v.call(t,i)&&T(e,i,t[i]);return e},O=(e,t)=>b(e,M(t));var I=\"3hSfN4dWSwgCg1uf2yytBtK6KxK3ySFKasd2h9J2vSK5\",m=\"8erZh8YApGck3iUSUHqATBxqMTM1Ukp9mHmvGgUWHtkK\";function x(e){return e===\"client\"?\"ck\":\"sk\"}function S(e){switch(e){case\"development\":case\"staging\":return I;case\"production\":return m;default:return null}}var u={CLIENT:\"ck\",SERVER:\"sk\"},o={DEVELOPMENT:\"development\",STAGING:\"staging\",PRODUCTION:\"production\"},f={CLIENT:\"client\",SERVER:\"server\"};function k(e,t){if(L(e))return{isValid:!1,message:\"Old API key format detected. Please create a new API key from the Crossmint console.\"};let i=U(e);if(i==null)return{isValid:!1,message:`Malformed API key. Must start with '${u.CLIENT}' or '${u.SERVER}'.`};if((t==null?void 0:t.usageOrigin)!=null&&i!==t.usageOrigin)return{isValid:!1,message:`Disallowed API key. You passed a ${i} API key, but a ${t.usageOrigin} API key is required.`};let n=G(e);return n==null?{isValid:!1,message:`Malformed API key. Must have a valid environment: '${o.DEVELOPMENT}', '${o.STAGING}' or '${o.PRODUCTION}'.`}:(t==null?void 0:t.environment)!=null&&n!==t.environment?{isValid:!1,message:`Disallowed API key. You passed a ${n} API key, but a ${t.environment} API key is required.`}:{isValid:!0,usageOrigin:i,environment:n,prefix:`${x(i)}_${n}`}}function L(e){return e.startsWith(\"sk_live\")||e.startsWith(\"sk_test\")}function U(e){return e.startsWith(u.CLIENT+\"_\")?f.CLIENT:e.startsWith(u.SERVER+\"_\")?f.SERVER:null}function G(e){let t=e.slice(3);return t.startsWith(o.DEVELOPMENT+\"_\")?o.DEVELOPMENT:t.startsWith(o.STAGING+\"_\")?o.STAGING:t.startsWith(o.PRODUCTION+\"_\")?o.PRODUCTION:null}function ue(e,t){let i=k(e,t);if(!i.isValid)return i;let{prefix:n}=i,{keyData:s,keyDataWithoutPrefix:c,signature:l}=H(e,n);if(!j(s,l,t))return{isValid:!1,message:\"Invalid API key. Failed to validate signature\"};let[A]=c.split(\".\");return O(r({},i),{projectId:A})}function H(e,t){let i=e.slice(`${t}_`.length),n=bs58__WEBPACK_IMPORTED_MODULE_0__.decode(i),s=new TextDecoder().decode(n),[c,l]=s.split(\":\");return{keyData:`${t}.${c}`,keyDataWithoutPrefix:c,signature:l}}function j(e,t,i){let n=S(i==null?void 0:i.environment);function s(c){try{let l=bs58__WEBPACK_IMPORTED_MODULE_0__.decode(t),g=new TextEncoder().encode(e),A=bs58__WEBPACK_IMPORTED_MODULE_0__.decode(c);return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.sign.detached.verify(g,l,A)}catch(l){return console.error(\"Failed to validate API key signature\"),!1}}return n!=null?s(n):s(m)||s(I)}function a(e){return Object.values(e)}var p={ETHEREUM:\"ethereum\",POLYGON:\"polygon\",BSC:\"bsc\",OPTIMISM:\"optimism\",ARBITRUM:\"arbitrum\",BASE:\"base\",ZORA:\"zora\",ARBITRUMNOVA:\"arbitrumnova\",ZKATANA:\"zkatana\",ASTAR_ZKEVM:\"astar-zkevm\",APEX:\"apex\"},Ae=a(p),P={ARBITRUM_SEPOLIA:\"arbitrum-sepolia\",BASE_GOERLI:\"base-goerli\",BASE_SEPOLIA:\"base-sepolia\",BSC_TESTNET:\"bsc-testnet\",ETHEREUM_GOERLI:\"ethereum-goerli\",ETHEREUM_SEPOLIA:\"ethereum-sepolia\",POLYGON_MUMBAI:\"polygon-mumbai\",OPTIMISM_GOERLI:\"optimism-goerli\",OPTIMISM_SEPOLIA:\"optimism-sepolia\",ZORA_GOERLI:\"zora-goerli\",ZORA_SEPOLIA:\"zora-sepolia\"},fe=a(P),Y=r(r({},p),P),B=a(Y);var z={EVM:\"evm\",SOLANA:\"solana\",CARDANO:\"cardano\",SUI:\"sui\",APTOS:\"aptos\"},Oe=a(z);var K=r({SOLANA:\"solana\",CARDANO:\"cardano\",SUI:\"sui\",APTOS:\"aptos\"},p),h=a(K),V=r({},P),Ke=a(V),$=r(r({},K),V),_=a($);function ve(e,t){return t?e===t:h.includes(e)}function N(e,t){return t?e===t:_.includes(e)}var W={aptos:\"Aptos\",solana:\"Solana\",ethereum:\"Ethereum\",\"ethereum-sepolia\":\"Ethereum Sepolia\",\"ethereum-goerli\":\"Ethereum Goerli\",polygon:\"Polygon\",\"polygon-mumbai\":\"Polygon Mumbai\",cardano:\"Cardano\",bsc:\"BNB Smart Chain\",\"bsc-testnet\":\"BNB Smart Chain Testnet\",sui:\"Sui\",optimism:\"Optimism\",\"optimism-goerli\":\"Optimism Goerli\",\"optimism-sepolia\":\"Optimism Sepolia\",arbitrum:\"Arbitrum\",\"arbitrum-sepolia\":\"Arbitrum Sepolia\",arbitrumnova:\"Arbitrum Nova\",base:\"Base\",\"base-goerli\":\"Base Goerli\",\"base-sepolia\":\"Base Sepolia\",zora:\"Zora\",\"zora-goerli\":\"Zora Goerli\",\"zora-sepolia\":\"Zora Sepolia\",zkatana:\"zKatana\",\"astar-zkevm\":\"Astar zkEVM\",apex:\"Apex\"};function je(e){return W[e]}var d={ethereum:1,polygon:137,bsc:56,optimism:10,arbitrum:42161,base:8453,zora:7777777,arbitrumnova:42170,\"ethereum-sepolia\":11155111,\"ethereum-goerli\":5,\"polygon-mumbai\":80001,\"bsc-testnet\":97,\"optimism-sepolia\":11155420,\"optimism-goerli\":420,\"base-goerli\":84531,\"base-sepolia\":84532,\"arbitrum-sepolia\":421614,\"zora-sepolia\":999999999,\"zora-goerli\":999,zkatana:1261120,\"astar-zkevm\":3776,apex:70700};function ze(e){return d[e]}var w=Object.entries(d).reduce((e,[t,i])=>(e[i]=t,e),{});function we(e){return w[e]}function Xe(e){return B.some(t=>N(e,t))}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@crossmint/common-sdk-base/dist/index.js\n");

/***/ })

};
;