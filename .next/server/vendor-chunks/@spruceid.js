"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@spruceid";
exports.ids = ["vendor-chunks/@spruceid"];
exports.modules = {

/***/ "(ssr)/./node_modules/@spruceid/siwe-parser/dist/abnf.js":
/*!*********************************************************!*\
  !*** ./node_modules/@spruceid/siwe-parser/dist/abnf.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParsedMessage = void 0;\nconst api_1 = __importDefault(__webpack_require__(/*! apg-js/src/apg-api/api */ \"(ssr)/./node_modules/apg-js/src/apg-api/api.js\"));\nconst node_exports_1 = __importDefault(__webpack_require__(/*! apg-js/src/apg-lib/node-exports */ \"(ssr)/./node_modules/apg-js/src/apg-lib/node-exports.js\"));\nconst GRAMMAR = `\nsign-in-with-ethereum =\n    domain %s\" wants you to sign in with your Ethereum account:\" LF\n    address LF\n    LF\n    [ statement LF ]\n    LF\n    %s\"URI: \" URI LF\n    %s\"Version: \" version LF\n    %s\"Chain ID: \" chain-id LF\n    %s\"Nonce: \" nonce LF\n    %s\"Issued At: \" issued-at\n    [ LF %s\"Expiration Time: \" expiration-time ]\n    [ LF %s\"Not Before: \" not-before ]\n    [ LF %s\"Request ID: \" request-id ]\n    [ LF %s\"Resources:\"\n    resources ]\n\ndomain = authority\n\naddress = \"0x\" 40*40HEXDIG\n    ; Must also conform to captilization\n    ; checksum encoding specified in EIP-55\n    ; where applicable (EOAs).\n\nstatement = 1*( reserved / unreserved / \" \" )\n    ; The purpose is to exclude LF (line breaks).\n\nversion = \"1\"\n\nnonce = 8*( ALPHA / DIGIT )\n\nissued-at = date-time\nexpiration-time = date-time\nnot-before = date-time\n\nrequest-id = *pchar\n\nchain-id = 1*DIGIT\n    ; See EIP-155 for valid CHAIN_IDs.\n\nresources = *( LF resource )\n\nresource = \"- \" URI\n\n; ------------------------------------------------------------------------------\n; RFC 3986\n\nURI           = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n\nhier-part     = \"//\" authority path-abempty\n              / path-absolute\n              / path-rootless\n              / path-empty\n\nscheme        = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\nauthority     = [ userinfo \"@\" ] host [ \":\" port ]\nuserinfo      = *( unreserved / pct-encoded / sub-delims / \":\" )\nhost          = IP-literal / IPv4address / reg-name\nport          = *DIGIT\n\nIP-literal    = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n\nIPvFuture     = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n\nIPv6address   =                            6( h16 \":\" ) ls32\n              /                       \"::\" 5( h16 \":\" ) ls32\n              / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n              / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n              / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n              / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n              / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n              / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n              / [ *6( h16 \":\" ) h16 ] \"::\"\n\nh16           = 1*4HEXDIG\nls32          = ( h16 \":\" h16 ) / IPv4address\nIPv4address   = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\ndec-octet     = DIGIT                 ; 0-9\n                 / %x31-39 DIGIT         ; 10-99\n                 / \"1\" 2DIGIT            ; 100-199\n                 / \"2\" %x30-34 DIGIT     ; 200-249\n                 / \"25\" %x30-35          ; 250-255\n\nreg-name      = *( unreserved / pct-encoded / sub-delims )\n\npath-abempty  = *( \"/\" segment )\npath-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\npath-rootless = segment-nz *( \"/\" segment )\npath-empty    = 0pchar\n\nsegment       = *pchar\nsegment-nz    = 1*pchar\n\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n\nquery         = *( pchar / \"/\" / \"?\" )\n\nfragment      = *( pchar / \"/\" / \"?\" )\n\npct-encoded   = \"%\" HEXDIG HEXDIG\n\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\nreserved      = gen-delims / sub-delims\ngen-delims    = \":\" / \"/\" / \"?\" / \"#\" / \"[\" / \"]\" / \"@\"\nsub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n              / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n\n; ------------------------------------------------------------------------------\n; RFC 3339\n\ndate-fullyear   = 4DIGIT\ndate-month      = 2DIGIT  ; 01-12\ndate-mday       = 2DIGIT  ; 01-28, 01-29, 01-30, 01-31 based on\n                          ; month/year\ntime-hour       = 2DIGIT  ; 00-23\ntime-minute     = 2DIGIT  ; 00-59\ntime-second     = 2DIGIT  ; 00-58, 00-59, 00-60 based on leap second\n                          ; rules\ntime-secfrac    = \".\" 1*DIGIT\ntime-numoffset  = (\"+\" / \"-\") time-hour \":\" time-minute\ntime-offset     = \"Z\" / time-numoffset\n\npartial-time    = time-hour \":\" time-minute \":\" time-second\n                  [time-secfrac]\nfull-date       = date-fullyear \"-\" date-month \"-\" date-mday\nfull-time       = partial-time time-offset\n\ndate-time       = full-date \"T\" full-time\n\n; ------------------------------------------------------------------------------\n; RFC 5234\n\nALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z\nLF             =  %x0A\n                  ; linefeed\nDIGIT          =  %x30-39\n                  ; 0-9\nHEXDIG         =  DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n`;\nclass ParsedMessage {\n    constructor(msg) {\n        const api = new api_1.default(GRAMMAR);\n        api.generate();\n        if (api.errors.length) {\n            console.error(api.errorsToAscii());\n            console.error(api.linesToAscii());\n            console.log(api.displayAttributeErrors());\n            throw new Error(`ABNF grammar has errors`);\n        }\n        const grammarObj = api.toObject();\n        const parser = new node_exports_1.default.parser();\n        parser.ast = new node_exports_1.default.ast();\n        const id = node_exports_1.default.ids;\n        const domain = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.domain = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks.domain = domain;\n        const address = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.address = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks.address = address;\n        const statement = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.statement = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks.statement = statement;\n        const uri = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                if (!data.uri) {\n                    data.uri = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n                }\n            }\n            return ret;\n        };\n        parser.ast.callbacks.uri = uri;\n        const version = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.version = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks.version = version;\n        const chainId = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.chainId = parseInt(node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength));\n            }\n            return ret;\n        };\n        parser.ast.callbacks['chain-id'] = chainId;\n        const nonce = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.nonce = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks.nonce = nonce;\n        const issuedAt = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.issuedAt = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks['issued-at'] = issuedAt;\n        const expirationTime = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.expirationTime = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks['expiration-time'] = expirationTime;\n        const notBefore = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.notBefore = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks['not-before'] = notBefore;\n        const requestId = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.requestId = node_exports_1.default.utils.charsToString(chars, phraseIndex, phraseLength);\n            }\n            return ret;\n        };\n        parser.ast.callbacks['request-id'] = requestId;\n        const resources = function (state, chars, phraseIndex, phraseLength, data) {\n            const ret = id.SEM_OK;\n            if (state === id.SEM_PRE) {\n                data.resources = node_exports_1.default.utils\n                    .charsToString(chars, phraseIndex, phraseLength)\n                    .slice(3)\n                    .split('\\n- ');\n            }\n            return ret;\n        };\n        parser.ast.callbacks.resources = resources;\n        const result = parser.parse(grammarObj, 'sign-in-with-ethereum', msg);\n        if (!result.success) {\n            throw new Error(`Invalid message: ${JSON.stringify(result)}`);\n        }\n        const elements = {};\n        parser.ast.translate(elements);\n        for (const [key, value] of Object.entries(elements)) {\n            this[key] = value;\n        }\n    }\n}\nexports.ParsedMessage = ParsedMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@spruceid/siwe-parser/dist/abnf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@spruceid/siwe-parser/dist/parsers.js":
/*!************************************************************!*\
  !*** ./node_modules/@spruceid/siwe-parser/dist/parsers.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParsedMessageRegExp = exports.ParsedMessage = void 0;\nconst abnf_1 = __webpack_require__(/*! ./abnf */ \"(ssr)/./node_modules/@spruceid/siwe-parser/dist/abnf.js\");\nObject.defineProperty(exports, \"ParsedMessage\", ({ enumerable: true, get: function () { return abnf_1.ParsedMessage; } }));\nconst regex_1 = __webpack_require__(/*! ./regex */ \"(ssr)/./node_modules/@spruceid/siwe-parser/dist/regex.js\");\nObject.defineProperty(exports, \"ParsedMessageRegExp\", ({ enumerable: true, get: function () { return regex_1.ParsedMessage; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNwcnVjZWlkL3Npd2UtcGFyc2VyL2Rpc3QvcGFyc2Vycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRyxxQkFBcUI7QUFDbkQsZUFBZSxtQkFBTyxDQUFDLHVFQUFRO0FBQy9CLGlEQUFnRCxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUN4SCxnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBUztBQUNqQyx1REFBc0QsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQHNwcnVjZWlkL3Npd2UtcGFyc2VyL2Rpc3QvcGFyc2Vycy5qcz81YzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QYXJzZWRNZXNzYWdlUmVnRXhwID0gZXhwb3J0cy5QYXJzZWRNZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgYWJuZl8xID0gcmVxdWlyZShcIi4vYWJuZlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBhcnNlZE1lc3NhZ2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFibmZfMS5QYXJzZWRNZXNzYWdlOyB9IH0pO1xuY29uc3QgcmVnZXhfMSA9IHJlcXVpcmUoXCIuL3JlZ2V4XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFyc2VkTWVzc2FnZVJlZ0V4cFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVnZXhfMS5QYXJzZWRNZXNzYWdlOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@spruceid/siwe-parser/dist/parsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@spruceid/siwe-parser/dist/regex.js":
/*!**********************************************************!*\
  !*** ./node_modules/@spruceid/siwe-parser/dist/regex.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParsedMessage = void 0;\nconst DOMAIN = '(?<domain>([^?#]*)) wants you to sign in with your Ethereum account:';\nconst ADDRESS = '\\\\n(?<address>0x[a-zA-Z0-9]{40})\\\\n\\\\n';\nconst STATEMENT = '((?<statement>[^\\\\n]+)\\\\n)?';\nconst URI = '(([^:?#]+):)?(([^?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))';\nconst URI_LINE = `\\\\nURI: (?<uri>${URI}?)`;\nconst VERSION = '\\\\nVersion: (?<version>1)';\nconst CHAIN_ID = '\\\\nChain ID: (?<chainId>[0-9]+)';\nconst NONCE = '\\\\nNonce: (?<nonce>[a-zA-Z0-9]{8,})';\nconst DATETIME = `([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(([Zz])|([\\+|\\-]([01][0-9]|2[0-3]):[0-5][0-9]))`;\nconst ISSUED_AT = `\\\\nIssued At: (?<issuedAt>${DATETIME})`;\nconst EXPIRATION_TIME = `(\\\\nExpiration Time: (?<expirationTime>${DATETIME}))?`;\nconst NOT_BEFORE = `(\\\\nNot Before: (?<notBefore>${DATETIME}))?`;\nconst REQUEST_ID = \"(\\\\nRequest ID: (?<requestId>[-._~!$&'()*+,;=:@%a-zA-Z0-9]*))?\";\nconst RESOURCES = `(\\\\nResources:(?<resources>(\\\\n- ${URI}?)+))?`;\nconst MESSAGE = `^${DOMAIN}${ADDRESS}${STATEMENT}${URI_LINE}${VERSION}${CHAIN_ID}${NONCE}${ISSUED_AT}${EXPIRATION_TIME}${NOT_BEFORE}${REQUEST_ID}${RESOURCES}$`;\nclass ParsedMessage {\n    constructor(msg) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        const REGEX = new RegExp(MESSAGE, 'g');\n        let match = REGEX.exec(msg);\n        if (!match) {\n            throw new Error('Message did not match the regular expression.');\n        }\n        this.match = match;\n        this.domain = (_a = match === null || match === void 0 ? void 0 : match.groups) === null || _a === void 0 ? void 0 : _a.domain;\n        this.address = (_b = match === null || match === void 0 ? void 0 : match.groups) === null || _b === void 0 ? void 0 : _b.address;\n        this.statement = (_c = match === null || match === void 0 ? void 0 : match.groups) === null || _c === void 0 ? void 0 : _c.statement;\n        this.uri = (_d = match === null || match === void 0 ? void 0 : match.groups) === null || _d === void 0 ? void 0 : _d.uri;\n        this.version = (_e = match === null || match === void 0 ? void 0 : match.groups) === null || _e === void 0 ? void 0 : _e.version;\n        this.nonce = (_f = match === null || match === void 0 ? void 0 : match.groups) === null || _f === void 0 ? void 0 : _f.nonce;\n        this.chainId = parseInt((_g = match === null || match === void 0 ? void 0 : match.groups) === null || _g === void 0 ? void 0 : _g.chainId);\n        this.issuedAt = (_h = match === null || match === void 0 ? void 0 : match.groups) === null || _h === void 0 ? void 0 : _h.issuedAt;\n        this.expirationTime = (_j = match === null || match === void 0 ? void 0 : match.groups) === null || _j === void 0 ? void 0 : _j.expirationTime;\n        this.notBefore = (_k = match === null || match === void 0 ? void 0 : match.groups) === null || _k === void 0 ? void 0 : _k.notBefore;\n        this.requestId = (_l = match === null || match === void 0 ? void 0 : match.groups) === null || _l === void 0 ? void 0 : _l.requestId;\n        this.resources = (_o = (_m = match === null || match === void 0 ? void 0 : match.groups) === null || _m === void 0 ? void 0 : _m.resources) === null || _o === void 0 ? void 0 : _o.split('\\n- ').slice(1);\n    }\n}\nexports.ParsedMessage = ParsedMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNwcnVjZWlkL3Npd2UtcGFyc2VyL2Rpc3QvcmVnZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0EsNkNBQTZDLEdBQUc7QUFDaEQ7QUFDQTtBQUNBLG1DQUFtQyxJQUFJO0FBQ3ZDO0FBQ0E7QUFDQSw4Q0FBOEMsR0FBRztBQUNqRDtBQUNBLCtDQUErQyxTQUFTO0FBQ3hELGtFQUFrRSxTQUFTO0FBQzNFLG1EQUFtRCxTQUFTO0FBQzVELGdFQUFnRTtBQUNoRSxzREFBc0QsSUFBSTtBQUMxRCxvQkFBb0IsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVU7QUFDN0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9Ac3BydWNlaWQvc2l3ZS1wYXJzZXIvZGlzdC9yZWdleC5qcz8xNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QYXJzZWRNZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgRE9NQUlOID0gJyg/PGRvbWFpbj4oW14/I10qKSkgd2FudHMgeW91IHRvIHNpZ24gaW4gd2l0aCB5b3VyIEV0aGVyZXVtIGFjY291bnQ6JztcbmNvbnN0IEFERFJFU1MgPSAnXFxcXG4oPzxhZGRyZXNzPjB4W2EtekEtWjAtOV17NDB9KVxcXFxuXFxcXG4nO1xuY29uc3QgU1RBVEVNRU5UID0gJygoPzxzdGF0ZW1lbnQ+W15cXFxcbl0rKVxcXFxuKT8nO1xuY29uc3QgVVJJID0gJygoW146PyNdKyk6KT8oKFtePyNdKikpPyhbXj8jXSopKFxcXFw/KFteI10qKSk/KCMoLiopKSc7XG5jb25zdCBVUklfTElORSA9IGBcXFxcblVSSTogKD88dXJpPiR7VVJJfT8pYDtcbmNvbnN0IFZFUlNJT04gPSAnXFxcXG5WZXJzaW9uOiAoPzx2ZXJzaW9uPjEpJztcbmNvbnN0IENIQUlOX0lEID0gJ1xcXFxuQ2hhaW4gSUQ6ICg/PGNoYWluSWQ+WzAtOV0rKSc7XG5jb25zdCBOT05DRSA9ICdcXFxcbk5vbmNlOiAoPzxub25jZT5bYS16QS1aMC05XXs4LH0pJztcbmNvbnN0IERBVEVUSU1FID0gYChbMC05XSspLSgwWzEtOV18MVswMTJdKS0oMFsxLTldfFsxMl1bMC05XXwzWzAxXSlbVHRdKFswMV1bMC05XXwyWzAtM10pOihbMC01XVswLTldKTooWzAtNV1bMC05XXw2MCkoXFwuWzAtOV0rKT8oKFtael0pfChbXFwrfFxcLV0oWzAxXVswLTldfDJbMC0zXSk6WzAtNV1bMC05XSkpYDtcbmNvbnN0IElTU1VFRF9BVCA9IGBcXFxcbklzc3VlZCBBdDogKD88aXNzdWVkQXQ+JHtEQVRFVElNRX0pYDtcbmNvbnN0IEVYUElSQVRJT05fVElNRSA9IGAoXFxcXG5FeHBpcmF0aW9uIFRpbWU6ICg/PGV4cGlyYXRpb25UaW1lPiR7REFURVRJTUV9KSk/YDtcbmNvbnN0IE5PVF9CRUZPUkUgPSBgKFxcXFxuTm90IEJlZm9yZTogKD88bm90QmVmb3JlPiR7REFURVRJTUV9KSk/YDtcbmNvbnN0IFJFUVVFU1RfSUQgPSBcIihcXFxcblJlcXVlc3QgSUQ6ICg/PHJlcXVlc3RJZD5bLS5ffiEkJicoKSorLDs9OkAlYS16QS1aMC05XSopKT9cIjtcbmNvbnN0IFJFU09VUkNFUyA9IGAoXFxcXG5SZXNvdXJjZXM6KD88cmVzb3VyY2VzPihcXFxcbi0gJHtVUkl9PykrKSk/YDtcbmNvbnN0IE1FU1NBR0UgPSBgXiR7RE9NQUlOfSR7QUREUkVTU30ke1NUQVRFTUVOVH0ke1VSSV9MSU5FfSR7VkVSU0lPTn0ke0NIQUlOX0lEfSR7Tk9OQ0V9JHtJU1NVRURfQVR9JHtFWFBJUkFUSU9OX1RJTUV9JHtOT1RfQkVGT1JFfSR7UkVRVUVTVF9JRH0ke1JFU09VUkNFU30kYDtcbmNsYXNzIFBhcnNlZE1lc3NhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKG1zZykge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaiwgX2ssIF9sLCBfbSwgX287XG4gICAgICAgIGNvbnN0IFJFR0VYID0gbmV3IFJlZ0V4cChNRVNTQUdFLCAnZycpO1xuICAgICAgICBsZXQgbWF0Y2ggPSBSRUdFWC5leGVjKG1zZyk7XG4gICAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTWVzc2FnZSBkaWQgbm90IG1hdGNoIHRoZSByZWd1bGFyIGV4cHJlc3Npb24uJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5tYXRjaCA9IG1hdGNoO1xuICAgICAgICB0aGlzLmRvbWFpbiA9IChfYSA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5kb21haW47XG4gICAgICAgIHRoaXMuYWRkcmVzcyA9IChfYiA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5hZGRyZXNzO1xuICAgICAgICB0aGlzLnN0YXRlbWVudCA9IChfYyA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5zdGF0ZW1lbnQ7XG4gICAgICAgIHRoaXMudXJpID0gKF9kID0gbWF0Y2ggPT09IG51bGwgfHwgbWF0Y2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1hdGNoLmdyb3VwcykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnVyaTtcbiAgICAgICAgdGhpcy52ZXJzaW9uID0gKF9lID0gbWF0Y2ggPT09IG51bGwgfHwgbWF0Y2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1hdGNoLmdyb3VwcykgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLnZlcnNpb247XG4gICAgICAgIHRoaXMubm9uY2UgPSAoX2YgPSBtYXRjaCA9PT0gbnVsbCB8fCBtYXRjaCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWF0Y2guZ3JvdXBzKSA9PT0gbnVsbCB8fCBfZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Yubm9uY2U7XG4gICAgICAgIHRoaXMuY2hhaW5JZCA9IHBhcnNlSW50KChfZyA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy5jaGFpbklkKTtcbiAgICAgICAgdGhpcy5pc3N1ZWRBdCA9IChfaCA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9oID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfaC5pc3N1ZWRBdDtcbiAgICAgICAgdGhpcy5leHBpcmF0aW9uVGltZSA9IChfaiA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9qID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfai5leHBpcmF0aW9uVGltZTtcbiAgICAgICAgdGhpcy5ub3RCZWZvcmUgPSAoX2sgPSBtYXRjaCA9PT0gbnVsbCB8fCBtYXRjaCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWF0Y2guZ3JvdXBzKSA9PT0gbnVsbCB8fCBfayA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2subm90QmVmb3JlO1xuICAgICAgICB0aGlzLnJlcXVlc3RJZCA9IChfbCA9IG1hdGNoID09PSBudWxsIHx8IG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaC5ncm91cHMpID09PSBudWxsIHx8IF9sID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbC5yZXF1ZXN0SWQ7XG4gICAgICAgIHRoaXMucmVzb3VyY2VzID0gKF9vID0gKF9tID0gbWF0Y2ggPT09IG51bGwgfHwgbWF0Y2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1hdGNoLmdyb3VwcykgPT09IG51bGwgfHwgX20gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9tLnJlc291cmNlcykgPT09IG51bGwgfHwgX28gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vLnNwbGl0KCdcXG4tICcpLnNsaWNlKDEpO1xuICAgIH1cbn1cbmV4cG9ydHMuUGFyc2VkTWVzc2FnZSA9IFBhcnNlZE1lc3NhZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@spruceid/siwe-parser/dist/regex.js\n");

/***/ })

};
;