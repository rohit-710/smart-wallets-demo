"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@cosmjs";
exports.ids = ["vendor-chunks/@cosmjs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/addresses.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/addresses.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// See https://github.com/tendermint/tendermint/blob/f2ada0a604b4c0763bda2f64fac53d506d3beca7/docs/spec/blockchain/encoding.md#public-key-cryptography\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst encoding_2 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\nfunction rawEd25519PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 32) {\n        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n}\nexports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;\nfunction rawSecp256k1PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 33) {\n        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));\n}\nexports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;\n// For secp256k1 this assumes we already have a compressed pubkey.\nfunction pubkeyToRawAddress(pubkey) {\n    if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {\n        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);\n        return rawSecp256k1PubkeyToRawAddress(pubkeyData);\n    }\n    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {\n        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);\n        return rawEd25519PubkeyToRawAddress(pubkeyData);\n    }\n    else if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {\n        // https://github.com/tendermint/tendermint/blob/38b401657e4ad7a7eeb3c30a3cbf512037df3740/crypto/multisig/threshold_pubkey.go#L71-L74\n        const pubkeyData = (0, encoding_2.encodeAminoPubkey)(pubkey);\n        return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n    }\n    else {\n        throw new Error(\"Unsupported public key type\");\n    }\n}\nexports.pubkeyToRawAddress = pubkeyToRawAddress;\nfunction pubkeyToAddress(pubkey, prefix) {\n    return (0, encoding_1.toBech32)(prefix, pubkeyToRawAddress(pubkey));\n}\nexports.pubkeyToAddress = pubkeyToAddress;\n//# sourceMappingURL=addresses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9hZGRyZXNzZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRywwQkFBMEIsR0FBRyxzQ0FBc0MsR0FBRyxvQ0FBb0M7QUFDcEksaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN2QyxrQkFBa0IsbUJBQU8sQ0FBQyxzRUFBVztBQUNyQztBQUNBO0FBQ0EsMERBQTBELGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBLHlFQUF5RSxrQkFBa0I7QUFDM0Y7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2FtaW5vL2J1aWxkL2FkZHJlc3Nlcy5qcz9mOTMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi9mMmFkYTBhNjA0YjRjMDc2M2JkYTJmNjRmYWM1M2Q1MDZkM2JlY2E3L2RvY3Mvc3BlYy9ibG9ja2NoYWluL2VuY29kaW5nLm1kI3B1YmxpYy1rZXktY3J5cHRvZ3JhcGh5XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnB1YmtleVRvQWRkcmVzcyA9IGV4cG9ydHMucHVia2V5VG9SYXdBZGRyZXNzID0gZXhwb3J0cy5yYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MgPSBleHBvcnRzLnJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2NyeXB0b1wiKTtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbmNvbnN0IGVuY29kaW5nXzIgPSByZXF1aXJlKFwiLi9lbmNvZGluZ1wiKTtcbmNvbnN0IHB1YmtleXNfMSA9IHJlcXVpcmUoXCIuL3B1YmtleXNcIik7XG5mdW5jdGlvbiByYXdFZDI1NTE5UHVia2V5VG9SYXdBZGRyZXNzKHB1YmtleURhdGEpIHtcbiAgICBpZiAocHVia2V5RGF0YS5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBFZDI1NTE5IHB1YmtleSBsZW5ndGg6ICR7cHVia2V5RGF0YS5sZW5ndGh9YCk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgY3J5cHRvXzEuc2hhMjU2KShwdWJrZXlEYXRhKS5zbGljZSgwLCAyMCk7XG59XG5leHBvcnRzLnJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MgPSByYXdFZDI1NTE5UHVia2V5VG9SYXdBZGRyZXNzO1xuZnVuY3Rpb24gcmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzKHB1YmtleURhdGEpIHtcbiAgICBpZiAocHVia2V5RGF0YS5sZW5ndGggIT09IDMzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBTZWNwMjU2azEgcHVia2V5IGxlbmd0aCAoY29tcHJlc3NlZCk6ICR7cHVia2V5RGF0YS5sZW5ndGh9YCk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgY3J5cHRvXzEucmlwZW1kMTYwKSgoMCwgY3J5cHRvXzEuc2hhMjU2KShwdWJrZXlEYXRhKSk7XG59XG5leHBvcnRzLnJhd1NlY3AyNTZrMVB1YmtleVRvUmF3QWRkcmVzcyA9IHJhd1NlY3AyNTZrMVB1YmtleVRvUmF3QWRkcmVzcztcbi8vIEZvciBzZWNwMjU2azEgdGhpcyBhc3N1bWVzIHdlIGFscmVhZHkgaGF2ZSBhIGNvbXByZXNzZWQgcHVia2V5LlxuZnVuY3Rpb24gcHVia2V5VG9SYXdBZGRyZXNzKHB1YmtleSkge1xuICAgIGlmICgoMCwgcHVia2V5c18xLmlzU2VjcDI1NmsxUHVia2V5KShwdWJrZXkpKSB7XG4gICAgICAgIGNvbnN0IHB1YmtleURhdGEgPSAoMCwgZW5jb2RpbmdfMS5mcm9tQmFzZTY0KShwdWJrZXkudmFsdWUpO1xuICAgICAgICByZXR1cm4gcmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzKHB1YmtleURhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgcHVia2V5c18xLmlzRWQyNTUxOVB1YmtleSkocHVia2V5KSkge1xuICAgICAgICBjb25zdCBwdWJrZXlEYXRhID0gKDAsIGVuY29kaW5nXzEuZnJvbUJhc2U2NCkocHVia2V5LnZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5RGF0YSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCgwLCBwdWJrZXlzXzEuaXNNdWx0aXNpZ1RocmVzaG9sZFB1YmtleSkocHVia2V5KSkge1xuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvMzhiNDAxNjU3ZTRhZDdhN2VlYjNjMzBhM2NiZjUxMjAzN2RmMzc0MC9jcnlwdG8vbXVsdGlzaWcvdGhyZXNob2xkX3B1YmtleS5nbyNMNzEtTDc0XG4gICAgICAgIGNvbnN0IHB1YmtleURhdGEgPSAoMCwgZW5jb2RpbmdfMi5lbmNvZGVBbWlub1B1YmtleSkocHVia2V5KTtcbiAgICAgICAgcmV0dXJuICgwLCBjcnlwdG9fMS5zaGEyNTYpKHB1YmtleURhdGEpLnNsaWNlKDAsIDIwKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHB1YmxpYyBrZXkgdHlwZVwiKTtcbiAgICB9XG59XG5leHBvcnRzLnB1YmtleVRvUmF3QWRkcmVzcyA9IHB1YmtleVRvUmF3QWRkcmVzcztcbmZ1bmN0aW9uIHB1YmtleVRvQWRkcmVzcyhwdWJrZXksIHByZWZpeCkge1xuICAgIHJldHVybiAoMCwgZW5jb2RpbmdfMS50b0JlY2gzMikocHJlZml4LCBwdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5KSk7XG59XG5leHBvcnRzLnB1YmtleVRvQWRkcmVzcyA9IHB1YmtleVRvQWRkcmVzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZHJlc3Nlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/coins.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/coins.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\n/**\n * Creates a coin.\n *\n * If your values do not exceed the safe integer range of JS numbers (53 bit),\n * you can use the number type here. This is the case for all typical Cosmos SDK\n * chains that use the default 6 decimals.\n *\n * In case you need to supportr larger values, use unsigned integer strings instead.\n */\nfunction coin(amount, denom) {\n    let outAmount;\n    if (typeof amount === \"number\") {\n        try {\n            outAmount = new math_1.Uint53(amount).toString();\n        }\n        catch (_err) {\n            throw new Error(\"Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.\");\n        }\n    }\n    else {\n        if (!amount.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid unsigned integer string format\");\n        }\n        outAmount = amount.replace(/^0*/, \"\") || \"0\";\n    }\n    return {\n        amount: outAmount,\n        denom: denom,\n    };\n}\nexports.coin = coin;\n/**\n * Creates a list of coins with one element.\n */\nfunction coins(amount, denom) {\n    return [coin(amount, denom)];\n}\nexports.coins = coins;\n/**\n * Takes a coins list like \"819966000ucosm,700000000ustake\" and parses it.\n *\n * A Stargate-ready variant of this function is available via:\n *\n * ```\n * import { parseCoins } from \"@cosmjs/proto-signing\";\n * // or\n * import { parseCoins } from \"@cosmjs/stargate\";\n * ```\n */\nfunction parseCoins(input) {\n    return input\n        .replace(/\\s/g, \"\")\n        .split(\",\")\n        .filter(Boolean)\n        .map((part) => {\n        const match = part.match(/^([0-9]+)([a-zA-Z]+)/);\n        if (!match)\n            throw new Error(\"Got an invalid coin string\");\n        return {\n            amount: match[1].replace(/^0+/, \"\") || \"0\",\n            denom: match[2],\n        };\n    });\n}\nexports.parseCoins = parseCoins;\n/**\n * Function to sum up coins with type Coin\n */\nfunction addCoins(lhs, rhs) {\n    if (lhs.denom !== rhs.denom)\n        throw new Error(\"Trying to add two coins with different denoms\");\n    return {\n        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,\n        denom: lhs.denom,\n    };\n}\nexports.addCoins = addCoins;\n//# sourceMappingURL=coins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9jb2lucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxhQUFhLEdBQUcsWUFBWTtBQUNwRSxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9jb2lucy5qcz8wOWMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hZGRDb2lucyA9IGV4cG9ydHMucGFyc2VDb2lucyA9IGV4cG9ydHMuY29pbnMgPSBleHBvcnRzLmNvaW4gPSB2b2lkIDA7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuLyoqXG4gKiBDcmVhdGVzIGEgY29pbi5cbiAqXG4gKiBJZiB5b3VyIHZhbHVlcyBkbyBub3QgZXhjZWVkIHRoZSBzYWZlIGludGVnZXIgcmFuZ2Ugb2YgSlMgbnVtYmVycyAoNTMgYml0KSxcbiAqIHlvdSBjYW4gdXNlIHRoZSBudW1iZXIgdHlwZSBoZXJlLiBUaGlzIGlzIHRoZSBjYXNlIGZvciBhbGwgdHlwaWNhbCBDb3Ntb3MgU0RLXG4gKiBjaGFpbnMgdGhhdCB1c2UgdGhlIGRlZmF1bHQgNiBkZWNpbWFscy5cbiAqXG4gKiBJbiBjYXNlIHlvdSBuZWVkIHRvIHN1cHBvcnRyIGxhcmdlciB2YWx1ZXMsIHVzZSB1bnNpZ25lZCBpbnRlZ2VyIHN0cmluZ3MgaW5zdGVhZC5cbiAqL1xuZnVuY3Rpb24gY29pbihhbW91bnQsIGRlbm9tKSB7XG4gICAgbGV0IG91dEFtb3VudDtcbiAgICBpZiAodHlwZW9mIGFtb3VudCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgb3V0QW1vdW50ID0gbmV3IG1hdGhfMS5VaW50NTMoYW1vdW50KS50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfZXJyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJHaXZlbiBhbW91bnQgaXMgbm90IGEgc2FmZSBpbnRlZ2VyLiBDb25zaWRlciB1c2luZyBhIHN0cmluZyBpbnN0ZWFkIHRvIG92ZXJjb21lIHRoZSBsaW1pdGF0aW9ucyBvZiBKUyBudW1iZXJzLlwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKCFhbW91bnQubWF0Y2goL15bMC05XSskLykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdW5zaWduZWQgaW50ZWdlciBzdHJpbmcgZm9ybWF0XCIpO1xuICAgICAgICB9XG4gICAgICAgIG91dEFtb3VudCA9IGFtb3VudC5yZXBsYWNlKC9eMCovLCBcIlwiKSB8fCBcIjBcIjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYW1vdW50OiBvdXRBbW91bnQsXG4gICAgICAgIGRlbm9tOiBkZW5vbSxcbiAgICB9O1xufVxuZXhwb3J0cy5jb2luID0gY29pbjtcbi8qKlxuICogQ3JlYXRlcyBhIGxpc3Qgb2YgY29pbnMgd2l0aCBvbmUgZWxlbWVudC5cbiAqL1xuZnVuY3Rpb24gY29pbnMoYW1vdW50LCBkZW5vbSkge1xuICAgIHJldHVybiBbY29pbihhbW91bnQsIGRlbm9tKV07XG59XG5leHBvcnRzLmNvaW5zID0gY29pbnM7XG4vKipcbiAqIFRha2VzIGEgY29pbnMgbGlzdCBsaWtlIFwiODE5OTY2MDAwdWNvc20sNzAwMDAwMDAwdXN0YWtlXCIgYW5kIHBhcnNlcyBpdC5cbiAqXG4gKiBBIFN0YXJnYXRlLXJlYWR5IHZhcmlhbnQgb2YgdGhpcyBmdW5jdGlvbiBpcyBhdmFpbGFibGUgdmlhOlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgcGFyc2VDb2lucyB9IGZyb20gXCJAY29zbWpzL3Byb3RvLXNpZ25pbmdcIjtcbiAqIC8vIG9yXG4gKiBpbXBvcnQgeyBwYXJzZUNvaW5zIH0gZnJvbSBcIkBjb3NtanMvc3RhcmdhdGVcIjtcbiAqIGBgYFxuICovXG5mdW5jdGlvbiBwYXJzZUNvaW5zKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0XG4gICAgICAgIC5yZXBsYWNlKC9cXHMvZywgXCJcIilcbiAgICAgICAgLnNwbGl0KFwiLFwiKVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5tYXAoKHBhcnQpID0+IHtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBwYXJ0Lm1hdGNoKC9eKFswLTldKykoW2EtekEtWl0rKS8pO1xuICAgICAgICBpZiAoIW1hdGNoKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR290IGFuIGludmFsaWQgY29pbiBzdHJpbmdcIik7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhbW91bnQ6IG1hdGNoWzFdLnJlcGxhY2UoL14wKy8sIFwiXCIpIHx8IFwiMFwiLFxuICAgICAgICAgICAgZGVub206IG1hdGNoWzJdLFxuICAgICAgICB9O1xuICAgIH0pO1xufVxuZXhwb3J0cy5wYXJzZUNvaW5zID0gcGFyc2VDb2lucztcbi8qKlxuICogRnVuY3Rpb24gdG8gc3VtIHVwIGNvaW5zIHdpdGggdHlwZSBDb2luXG4gKi9cbmZ1bmN0aW9uIGFkZENvaW5zKGxocywgcmhzKSB7XG4gICAgaWYgKGxocy5kZW5vbSAhPT0gcmhzLmRlbm9tKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUcnlpbmcgdG8gYWRkIHR3byBjb2lucyB3aXRoIGRpZmZlcmVudCBkZW5vbXNcIik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYW1vdW50OiBtYXRoXzEuRGVjaW1hbC5mcm9tQXRvbWljcyhsaHMuYW1vdW50LCAwKS5wbHVzKG1hdGhfMS5EZWNpbWFsLmZyb21BdG9taWNzKHJocy5hbW91bnQsIDApKS5hdG9taWNzLFxuICAgICAgICBkZW5vbTogbGhzLmRlbm9tLFxuICAgIH07XG59XG5leHBvcnRzLmFkZENvaW5zID0gYWRkQ29pbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb2lucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/coins.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/encoding.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/encoding.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\n/**\n * Takes a Secp256k1 public key as raw bytes and returns the Amino JSON\n * representation of it (the type/value wrapper object).\n */\nfunction encodeSecp256k1Pubkey(pubkey) {\n    if (pubkey.length !== 33 || (pubkey[0] !== 0x02 && pubkey[0] !== 0x03)) {\n        throw new Error(\"Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03\");\n    }\n    return {\n        type: pubkeys_1.pubkeyType.secp256k1,\n        value: (0, encoding_1.toBase64)(pubkey),\n    };\n}\nexports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;\n/**\n * Takes an Edd25519 public key as raw bytes and returns the Amino JSON\n * representation of it (the type/value wrapper object).\n */\nfunction encodeEd25519Pubkey(pubkey) {\n    if (pubkey.length !== 32) {\n        throw new Error(\"Ed25519 public key must be 32 bytes long\");\n    }\n    return {\n        type: pubkeys_1.pubkeyType.ed25519,\n        value: (0, encoding_1.toBase64)(pubkey),\n    };\n}\nexports.encodeEd25519Pubkey = encodeEd25519Pubkey;\n// As discussed in https://github.com/binance-chain/javascript-sdk/issues/163\n// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography\n// Last bytes is varint-encoded length prefix\nconst pubkeyAminoPrefixSecp256k1 = (0, encoding_1.fromHex)(\"eb5ae987\" + \"21\" /* fixed length */);\nconst pubkeyAminoPrefixEd25519 = (0, encoding_1.fromHex)(\"1624de64\" + \"20\" /* fixed length */);\nconst pubkeyAminoPrefixSr25519 = (0, encoding_1.fromHex)(\"0dfb1005\" + \"20\" /* fixed length */);\n/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */\nconst pubkeyAminoPrefixMultisigThreshold = (0, encoding_1.fromHex)(\"22c1f7e2\" /* variable length not included */);\n/**\n * Decodes a pubkey in the Amino binary format to a type/value object.\n */\nfunction decodeAminoPubkey(data) {\n    if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSecp256k1)) {\n        const rest = data.slice(pubkeyAminoPrefixSecp256k1.length);\n        if (rest.length !== 33) {\n            throw new Error(\"Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.secp256k1,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixEd25519)) {\n        const rest = data.slice(pubkeyAminoPrefixEd25519.length);\n        if (rest.length !== 32) {\n            throw new Error(\"Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.ed25519,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSr25519)) {\n        const rest = data.slice(pubkeyAminoPrefixSr25519.length);\n        if (rest.length !== 32) {\n            throw new Error(\"Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.sr25519,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixMultisigThreshold)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return decodeMultisigPubkey(data);\n    }\n    else {\n        throw new Error(\"Unsupported public key type. Amino data starts with: \" + (0, encoding_1.toHex)(data.slice(0, 5)));\n    }\n}\nexports.decodeAminoPubkey = decodeAminoPubkey;\n/**\n * Decodes a bech32 pubkey to Amino binary, which is then decoded to a type/value object.\n * The bech32 prefix is ignored and discareded.\n *\n * @param bechEncoded the bech32 encoded pubkey\n */\nfunction decodeBech32Pubkey(bechEncoded) {\n    const { data } = (0, encoding_1.fromBech32)(bechEncoded);\n    return decodeAminoPubkey(data);\n}\nexports.decodeBech32Pubkey = decodeBech32Pubkey;\n/**\n * Uvarint decoder for Amino.\n * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/decoder.go#L64-76\n * @returns varint as number, and bytes count occupied by varaint\n */\nfunction decodeUvarint(reader) {\n    if (reader.length < 1) {\n        throw new Error(\"Can't decode varint. EOF\");\n    }\n    if (reader[0] > 127) {\n        throw new Error(\"Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.\");\n    }\n    return [reader[0], 1];\n}\n/**\n * Decodes a multisig pubkey to type object.\n * Pubkey structure [ prefix + const + threshold + loop:(const + pubkeyLength + pubkey            ) ]\n *                  [   4b   + 1b    +  varint   + loop:(1b    +    varint    + pubkeyLength bytes) ]\n * @param data encoded pubkey\n */\nfunction decodeMultisigPubkey(data) {\n    const reader = Array.from(data);\n    // remove multisig amino prefix;\n    const prefixFromReader = reader.splice(0, pubkeyAminoPrefixMultisigThreshold.length);\n    if (!(0, utils_1.arrayContentStartsWith)(prefixFromReader, pubkeyAminoPrefixMultisigThreshold)) {\n        throw new Error(\"Invalid multisig prefix.\");\n    }\n    // remove 0x08 threshold prefix;\n    if (reader.shift() != 0x08) {\n        throw new Error(\"Invalid multisig data. Expecting 0x08 prefix before threshold.\");\n    }\n    // read threshold\n    const [threshold, thresholdBytesLength] = decodeUvarint(reader);\n    reader.splice(0, thresholdBytesLength);\n    // read participants pubkeys\n    const pubkeys = [];\n    while (reader.length > 0) {\n        // remove 0x12 threshold prefix;\n        if (reader.shift() != 0x12) {\n            throw new Error(\"Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.\");\n        }\n        // read pubkey length\n        const [pubkeyLength, pubkeyLengthBytesSize] = decodeUvarint(reader);\n        reader.splice(0, pubkeyLengthBytesSize);\n        // verify that we can read pubkey\n        if (reader.length < pubkeyLength) {\n            throw new Error(\"Invalid multisig data length.\");\n        }\n        // read and decode participant pubkey\n        const encodedPubkey = reader.splice(0, pubkeyLength);\n        const pubkey = decodeAminoPubkey(Uint8Array.from(encodedPubkey));\n        pubkeys.push(pubkey);\n    }\n    return {\n        type: pubkeys_1.pubkeyType.multisigThreshold,\n        value: {\n            threshold: threshold.toString(),\n            pubkeys: pubkeys,\n        },\n    };\n}\n/**\n * Uvarint encoder for Amino. This is the same encoding as `binary.PutUvarint` from the Go\n * standard library.\n *\n * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/encoder.go#L77-L85\n */\nfunction encodeUvarint(value) {\n    const checked = math_1.Uint53.fromString(value.toString()).toNumber();\n    if (checked > 127) {\n        throw new Error(\"Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.\");\n    }\n    return [checked];\n}\n/**\n * Encodes a public key to binary Amino.\n */\nfunction encodeAminoPubkey(pubkey) {\n    if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {\n        const out = Array.from(pubkeyAminoPrefixMultisigThreshold);\n        out.push(0x08); // TODO: What is this?\n        out.push(...encodeUvarint(pubkey.value.threshold));\n        for (const pubkeyData of pubkey.value.pubkeys.map((p) => encodeAminoPubkey(p))) {\n            out.push(0x12); // TODO: What is this?\n            out.push(...encodeUvarint(pubkeyData.length));\n            out.push(...pubkeyData);\n        }\n        return new Uint8Array(out);\n    }\n    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {\n        return new Uint8Array([...pubkeyAminoPrefixEd25519, ...(0, encoding_1.fromBase64)(pubkey.value)]);\n    }\n    else if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {\n        return new Uint8Array([...pubkeyAminoPrefixSecp256k1, ...(0, encoding_1.fromBase64)(pubkey.value)]);\n    }\n    else {\n        throw new Error(\"Unsupported pubkey type\");\n    }\n}\nexports.encodeAminoPubkey = encodeAminoPubkey;\n/**\n * Encodes a public key to binary Amino and then to bech32.\n *\n * @param pubkey the public key to encode\n * @param prefix the bech32 prefix (human readable part)\n */\nfunction encodeBech32Pubkey(pubkey, prefix) {\n    return (0, encoding_1.toBech32)(prefix, encodeAminoPubkey(pubkey));\n}\nexports.encodeBech32Pubkey = encodeBech32Pubkey;\n//# sourceMappingURL=encoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;\nvar addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nObject.defineProperty(exports, \"pubkeyToAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToAddress; } }));\nObject.defineProperty(exports, \"pubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawEd25519PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawEd25519PubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawSecp256k1PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawSecp256k1PubkeyToRawAddress; } }));\nvar coins_1 = __webpack_require__(/*! ./coins */ \"(ssr)/./node_modules/@cosmjs/amino/build/coins.js\");\nObject.defineProperty(exports, \"addCoins\", ({ enumerable: true, get: function () { return coins_1.addCoins; } }));\nObject.defineProperty(exports, \"coin\", ({ enumerable: true, get: function () { return coins_1.coin; } }));\nObject.defineProperty(exports, \"coins\", ({ enumerable: true, get: function () { return coins_1.coins; } }));\nObject.defineProperty(exports, \"parseCoins\", ({ enumerable: true, get: function () { return coins_1.parseCoins; } }));\nvar encoding_1 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nObject.defineProperty(exports, \"decodeAminoPubkey\", ({ enumerable: true, get: function () { return encoding_1.decodeAminoPubkey; } }));\nObject.defineProperty(exports, \"decodeBech32Pubkey\", ({ enumerable: true, get: function () { return encoding_1.decodeBech32Pubkey; } }));\nObject.defineProperty(exports, \"encodeAminoPubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeAminoPubkey; } }));\nObject.defineProperty(exports, \"encodeBech32Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeBech32Pubkey; } }));\nObject.defineProperty(exports, \"encodeEd25519Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeEd25519Pubkey; } }));\nObject.defineProperty(exports, \"encodeSecp256k1Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeSecp256k1Pubkey; } }));\nvar multisig_1 = __webpack_require__(/*! ./multisig */ \"(ssr)/./node_modules/@cosmjs/amino/build/multisig.js\");\nObject.defineProperty(exports, \"createMultisigThresholdPubkey\", ({ enumerable: true, get: function () { return multisig_1.createMultisigThresholdPubkey; } }));\nvar paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/amino/build/paths.js\");\nObject.defineProperty(exports, \"makeCosmoshubPath\", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));\nvar pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\nObject.defineProperty(exports, \"isEd25519Pubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isEd25519Pubkey; } }));\nObject.defineProperty(exports, \"isMultisigThresholdPubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isMultisigThresholdPubkey; } }));\nObject.defineProperty(exports, \"isSecp256k1Pubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isSecp256k1Pubkey; } }));\nObject.defineProperty(exports, \"isSinglePubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isSinglePubkey; } }));\nObject.defineProperty(exports, \"pubkeyType\", ({ enumerable: true, get: function () { return pubkeys_1.pubkeyType; } }));\nvar secp256k1hdwallet_1 = __webpack_require__(/*! ./secp256k1hdwallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js\");\nObject.defineProperty(exports, \"extractKdfConfiguration\", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.extractKdfConfiguration; } }));\nObject.defineProperty(exports, \"Secp256k1HdWallet\", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.Secp256k1HdWallet; } }));\nvar secp256k1wallet_1 = __webpack_require__(/*! ./secp256k1wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js\");\nObject.defineProperty(exports, \"Secp256k1Wallet\", ({ enumerable: true, get: function () { return secp256k1wallet_1.Secp256k1Wallet; } }));\nvar signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nObject.defineProperty(exports, \"decodeSignature\", ({ enumerable: true, get: function () { return signature_1.decodeSignature; } }));\nObject.defineProperty(exports, \"encodeSecp256k1Signature\", ({ enumerable: true, get: function () { return signature_1.encodeSecp256k1Signature; } }));\nvar signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\nObject.defineProperty(exports, \"makeSignDoc\", ({ enumerable: true, get: function () { return signdoc_1.makeSignDoc; } }));\nObject.defineProperty(exports, \"serializeSignDoc\", ({ enumerable: true, get: function () { return signdoc_1.serializeSignDoc; } }));\nvar stdtx_1 = __webpack_require__(/*! ./stdtx */ \"(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js\");\nObject.defineProperty(exports, \"isStdTx\", ({ enumerable: true, get: function () { return stdtx_1.isStdTx; } }));\nObject.defineProperty(exports, \"makeStdTx\", ({ enumerable: true, get: function () { return stdtx_1.makeStdTx; } }));\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\");\nObject.defineProperty(exports, \"executeKdf\", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/multisig.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/multisig.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createMultisigThresholdPubkey = exports.compareArrays = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\n/**\n * Compare arrays lexicographically.\n *\n * Returns value < 0 if `a < b`.\n * Returns value > 0 if `a > b`.\n * Returns 0 if `a === b`.\n */\nfunction compareArrays(a, b) {\n    const aHex = (0, encoding_1.toHex)(a);\n    const bHex = (0, encoding_1.toHex)(b);\n    return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;\n}\nexports.compareArrays = compareArrays;\nfunction createMultisigThresholdPubkey(pubkeys, threshold, nosort = false) {\n    const uintThreshold = new math_1.Uint53(threshold);\n    if (uintThreshold.toNumber() > pubkeys.length) {\n        throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);\n    }\n    const outPubkeys = nosort\n        ? pubkeys\n        : Array.from(pubkeys).sort((lhs, rhs) => {\n            // https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174\n            const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);\n            const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);\n            return compareArrays(addressLhs, addressRhs);\n        });\n    return {\n        type: \"tendermint/PubKeyMultisigThreshold\",\n        value: {\n            threshold: uintThreshold.toString(),\n            pubkeys: outPubkeys,\n        },\n    };\n}\nexports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;\n//# sourceMappingURL=multisig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9tdWx0aXNpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsR0FBRyxxQkFBcUI7QUFDN0QsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBYztBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQywwRUFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDBCQUEwQiw2QkFBNkIsZUFBZTtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2FtaW5vL2J1aWxkL211bHRpc2lnLmpzPzdlNTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZU11bHRpc2lnVGhyZXNob2xkUHVia2V5ID0gZXhwb3J0cy5jb21wYXJlQXJyYXlzID0gdm9pZCAwO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgbWF0aF8xID0gcmVxdWlyZShcIkBjb3NtanMvbWF0aFwiKTtcbmNvbnN0IGFkZHJlc3Nlc18xID0gcmVxdWlyZShcIi4vYWRkcmVzc2VzXCIpO1xuLyoqXG4gKiBDb21wYXJlIGFycmF5cyBsZXhpY29ncmFwaGljYWxseS5cbiAqXG4gKiBSZXR1cm5zIHZhbHVlIDwgMCBpZiBgYSA8IGJgLlxuICogUmV0dXJucyB2YWx1ZSA+IDAgaWYgYGEgPiBiYC5cbiAqIFJldHVybnMgMCBpZiBgYSA9PT0gYmAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVBcnJheXMoYSwgYikge1xuICAgIGNvbnN0IGFIZXggPSAoMCwgZW5jb2RpbmdfMS50b0hleCkoYSk7XG4gICAgY29uc3QgYkhleCA9ICgwLCBlbmNvZGluZ18xLnRvSGV4KShiKTtcbiAgICByZXR1cm4gYUhleCA9PT0gYkhleCA/IDAgOiBhSGV4IDwgYkhleCA/IC0xIDogMTtcbn1cbmV4cG9ydHMuY29tcGFyZUFycmF5cyA9IGNvbXBhcmVBcnJheXM7XG5mdW5jdGlvbiBjcmVhdGVNdWx0aXNpZ1RocmVzaG9sZFB1YmtleShwdWJrZXlzLCB0aHJlc2hvbGQsIG5vc29ydCA9IGZhbHNlKSB7XG4gICAgY29uc3QgdWludFRocmVzaG9sZCA9IG5ldyBtYXRoXzEuVWludDUzKHRocmVzaG9sZCk7XG4gICAgaWYgKHVpbnRUaHJlc2hvbGQudG9OdW1iZXIoKSA+IHB1YmtleXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhyZXNob2xkIGsgPSAke3VpbnRUaHJlc2hvbGQudG9OdW1iZXIoKX0gZXhjZWVkcyBudW1iZXIgb2Yga2V5cyBuID0gJHtwdWJrZXlzLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgY29uc3Qgb3V0UHVia2V5cyA9IG5vc29ydFxuICAgICAgICA/IHB1YmtleXNcbiAgICAgICAgOiBBcnJheS5mcm9tKHB1YmtleXMpLnNvcnQoKGxocywgcmhzKSA9PiB7XG4gICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvYmxvYi92MC40Mi4yL2NsaWVudC9rZXlzL2FkZC5nbyNMMTcyLUwxNzRcbiAgICAgICAgICAgIGNvbnN0IGFkZHJlc3NMaHMgPSAoMCwgYWRkcmVzc2VzXzEucHVia2V5VG9SYXdBZGRyZXNzKShsaHMpO1xuICAgICAgICAgICAgY29uc3QgYWRkcmVzc1JocyA9ICgwLCBhZGRyZXNzZXNfMS5wdWJrZXlUb1Jhd0FkZHJlc3MpKHJocyk7XG4gICAgICAgICAgICByZXR1cm4gY29tcGFyZUFycmF5cyhhZGRyZXNzTGhzLCBhZGRyZXNzUmhzKTtcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJ0ZW5kZXJtaW50L1B1YktleU11bHRpc2lnVGhyZXNob2xkXCIsXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICB0aHJlc2hvbGQ6IHVpbnRUaHJlc2hvbGQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgIHB1YmtleXM6IG91dFB1YmtleXMsXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkgPSBjcmVhdGVNdWx0aXNpZ1RocmVzaG9sZFB1YmtleTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpc2lnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/multisig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/paths.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/paths.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeCosmoshubPath = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\n/**\n * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`\n * with 0-based account index `a`.\n */\nfunction makeCosmoshubPath(a) {\n    return [\n        crypto_1.Slip10RawIndex.hardened(44),\n        crypto_1.Slip10RawIndex.hardened(118),\n        crypto_1.Slip10RawIndex.hardened(0),\n        crypto_1.Slip10RawIndex.normal(0),\n        crypto_1.Slip10RawIndex.normal(a),\n    ];\n}\nexports.makeCosmoshubPath = makeCosmoshubPath;\n//# sourceMappingURL=paths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9wYXRocy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvcGF0aHMuanM/M2IzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFrZUNvc21vc2h1YlBhdGggPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2NyeXB0b1wiKTtcbi8qKlxuICogVGhlIENvc21vcyBIdWIgZGVyaXZhdGlvbiBwYXRoIGluIHRoZSBmb3JtIGBtLzQ0Jy8xMTgnLzAnLzAvYWBcbiAqIHdpdGggMC1iYXNlZCBhY2NvdW50IGluZGV4IGBhYC5cbiAqL1xuZnVuY3Rpb24gbWFrZUNvc21vc2h1YlBhdGgoYSkge1xuICAgIHJldHVybiBbXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4LmhhcmRlbmVkKDQ0KSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXguaGFyZGVuZWQoMTE4KSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXguaGFyZGVuZWQoMCksXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4Lm5vcm1hbCgwKSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXgubm9ybWFsKGEpLFxuICAgIF07XG59XG5leHBvcnRzLm1ha2VDb3Ntb3NodWJQYXRoID0gbWFrZUNvc21vc2h1YlBhdGg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRocy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/pubkeys.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\nfunction isEd25519Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\nexports.isEd25519Pubkey = isEd25519Pubkey;\nfunction isSecp256k1Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n    secp256k1: \"tendermint/PubKeySecp256k1\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n    ed25519: \"tendermint/PubKeyEd25519\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n    sr25519: \"tendermint/PubKeySr25519\",\n    multisigThreshold: \"tendermint/PubKeyMultisigThreshold\",\n};\nfunction isSinglePubkey(pubkey) {\n    const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n    return singPubkeyTypes.includes(pubkey.type);\n}\nexports.isSinglePubkey = isSinglePubkey;\nfunction isMultisigThresholdPubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;\n//# sourceMappingURL=pubkeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9wdWJrZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxHQUFHLHNCQUFzQixHQUFHLGtCQUFrQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QjtBQUNySTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvcHVia2V5cy5qcz9mYTQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc011bHRpc2lnVGhyZXNob2xkUHVia2V5ID0gZXhwb3J0cy5pc1NpbmdsZVB1YmtleSA9IGV4cG9ydHMucHVia2V5VHlwZSA9IGV4cG9ydHMuaXNTZWNwMjU2azFQdWJrZXkgPSBleHBvcnRzLmlzRWQyNTUxOVB1YmtleSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzRWQyNTUxOVB1YmtleShwdWJrZXkpIHtcbiAgICByZXR1cm4gcHVia2V5LnR5cGUgPT09IFwidGVuZGVybWludC9QdWJLZXlFZDI1NTE5XCI7XG59XG5leHBvcnRzLmlzRWQyNTUxOVB1YmtleSA9IGlzRWQyNTUxOVB1YmtleTtcbmZ1bmN0aW9uIGlzU2VjcDI1NmsxUHVia2V5KHB1YmtleSkge1xuICAgIHJldHVybiBwdWJrZXkudHlwZSA9PT0gXCJ0ZW5kZXJtaW50L1B1YktleVNlY3AyNTZrMVwiO1xufVxuZXhwb3J0cy5pc1NlY3AyNTZrMVB1YmtleSA9IGlzU2VjcDI1NmsxUHVia2V5O1xuZXhwb3J0cy5wdWJrZXlUeXBlID0ge1xuICAgIC8qKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi92MC4zMy4wL2NyeXB0by9lZDI1NTE5L2VkMjU1MTkuZ28jTDIyICovXG4gICAgc2VjcDI1NmsxOiBcInRlbmRlcm1pbnQvUHViS2V5U2VjcDI1NmsxXCIsXG4gICAgLyoqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL3YwLjMzLjAvY3J5cHRvL3NlY3AyNTZrMS9zZWNwMjU2azEuZ28jTDIzICovXG4gICAgZWQyNTUxOTogXCJ0ZW5kZXJtaW50L1B1YktleUVkMjU1MTlcIixcbiAgICAvKiogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvdjAuMzMuMC9jcnlwdG8vc3IyNTUxOS9jb2RlYy5nbyNMMTIgKi9cbiAgICBzcjI1NTE5OiBcInRlbmRlcm1pbnQvUHViS2V5U3IyNTUxOVwiLFxuICAgIG11bHRpc2lnVGhyZXNob2xkOiBcInRlbmRlcm1pbnQvUHViS2V5TXVsdGlzaWdUaHJlc2hvbGRcIixcbn07XG5mdW5jdGlvbiBpc1NpbmdsZVB1YmtleShwdWJrZXkpIHtcbiAgICBjb25zdCBzaW5nUHVia2V5VHlwZXMgPSBbZXhwb3J0cy5wdWJrZXlUeXBlLmVkMjU1MTksIGV4cG9ydHMucHVia2V5VHlwZS5zZWNwMjU2azEsIGV4cG9ydHMucHVia2V5VHlwZS5zcjI1NTE5XTtcbiAgICByZXR1cm4gc2luZ1B1YmtleVR5cGVzLmluY2x1ZGVzKHB1YmtleS50eXBlKTtcbn1cbmV4cG9ydHMuaXNTaW5nbGVQdWJrZXkgPSBpc1NpbmdsZVB1YmtleTtcbmZ1bmN0aW9uIGlzTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkocHVia2V5KSB7XG4gICAgcmV0dXJuIHB1YmtleS50eXBlID09PSBcInRlbmRlcm1pbnQvUHViS2V5TXVsdGlzaWdUaHJlc2hvbGRcIjtcbn1cbmV4cG9ydHMuaXNNdWx0aXNpZ1RocmVzaG9sZFB1YmtleSA9IGlzTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdWJrZXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js":
/*!***************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1HdWallet = exports.extractKdfConfiguration = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nconst paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/amino/build/paths.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nconst signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\nconst wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\");\nconst serializationTypeV1 = \"secp256k1wallet-v1\";\n/**\n * A KDF configuration that is not very strong but can be used on the main thread.\n * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.\n */\nconst basicPasswordHashingOptions = {\n    algorithm: \"argon2id\",\n    params: {\n        outputLength: 32,\n        opsLimit: 24,\n        memLimitKib: 12 * 1024,\n    },\n};\nfunction isDerivationJson(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.hdPath !== \"string\")\n        return false;\n    if (typeof thing.prefix !== \"string\")\n        return false;\n    return true;\n}\nfunction extractKdfConfigurationV1(doc) {\n    return doc.kdf;\n}\nfunction extractKdfConfiguration(serialization) {\n    const root = JSON.parse(serialization);\n    if (!(0, utils_1.isNonNullObject)(root))\n        throw new Error(\"Root document is not an object.\");\n    switch (root.type) {\n        case serializationTypeV1:\n            return extractKdfConfigurationV1(root);\n        default:\n            throw new Error(\"Unsupported serialization type\");\n    }\n}\nexports.extractKdfConfiguration = extractKdfConfiguration;\nconst defaultOptions = {\n    bip39Password: \"\",\n    hdPaths: [(0, paths_1.makeCosmoshubPath)(0)],\n    prefix: \"cosmos\",\n};\nclass Secp256k1HdWallet {\n    constructor(mnemonic, options) {\n        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;\n        const prefix = options.prefix ?? defaultOptions.prefix;\n        this.secret = mnemonic;\n        this.seed = options.seed;\n        this.accounts = hdPaths.map((hdPath) => ({\n            hdPath: hdPath,\n            prefix,\n        }));\n    }\n    /**\n     * Restores a wallet from the given BIP39 mnemonic.\n     *\n     * @param mnemonic Any valid English mnemonic.\n     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async fromMnemonic(mnemonic, options = {}) {\n        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);\n        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);\n        return new Secp256k1HdWallet(mnemonicChecked, {\n            ...options,\n            seed: seed,\n        });\n    }\n    /**\n     * Generates a new wallet with a BIP39 mnemonic of the given length.\n     *\n     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).\n     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async generate(length = 12, options = {}) {\n        const entropyLength = 4 * Math.floor((11 * length) / 33);\n        const entropy = crypto_1.Random.getBytes(entropyLength);\n        const mnemonic = crypto_1.Bip39.encode(entropy);\n        return Secp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    static async deserialize(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        switch (root.type) {\n            case serializationTypeV1:\n                return Secp256k1HdWallet.deserializeTypeV1(serialization, password);\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows\n     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be\n     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.\n     */\n    static async deserializeWithEncryptionKey(serialization, encryptionKey) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const untypedRoot = root;\n        switch (untypedRoot.type) {\n            case serializationTypeV1: {\n                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);\n                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));\n                const { mnemonic, accounts } = decryptedDocument;\n                (0, utils_1.assert)(typeof mnemonic === \"string\");\n                if (!Array.isArray(accounts))\n                    throw new Error(\"Property 'accounts' is not an array\");\n                if (!accounts.every((account) => isDerivationJson(account))) {\n                    throw new Error(\"Account is not in the correct format.\");\n                }\n                const firstPrefix = accounts[0].prefix;\n                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {\n                    throw new Error(\"Accounts do not all have the same prefix\");\n                }\n                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));\n                return Secp256k1HdWallet.fromMnemonic(mnemonic, {\n                    hdPaths: hdPaths,\n                    prefix: firstPrefix,\n                });\n            }\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    static async deserializeTypeV1(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);\n        return Secp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);\n    }\n    get mnemonic() {\n        return this.secret.toString();\n    }\n    async getAccounts() {\n        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();\n        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({\n            algo: algo,\n            pubkey: pubkey,\n            address: address,\n        }));\n    }\n    async signAmino(signerAddress, signDoc) {\n        const accounts = await this.getAccountsWithPrivkeys();\n        const account = accounts.find(({ address }) => address === signerAddress);\n        if (account === undefined) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const { privkey, pubkey } = account;\n        const message = (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signDoc));\n        const signature = await crypto_1.Secp256k1.createSignature(message, privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        return {\n            signed: signDoc,\n            signature: (0, signature_1.encodeSecp256k1Signature)(pubkey, signatureBytes),\n        };\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    async serialize(password) {\n        const kdfConfiguration = basicPasswordHashingOptions;\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);\n        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to\n     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF options. If this\n     * is not the case, the wallet cannot be restored with the original password.\n     */\n    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {\n        const dataToEncrypt = {\n            mnemonic: this.mnemonic,\n            accounts: this.accounts.map(({ hdPath, prefix }) => ({\n                hdPath: (0, crypto_1.pathToString)(hdPath),\n                prefix: prefix,\n            })),\n        };\n        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));\n        const encryptionConfiguration = {\n            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,\n        };\n        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);\n        const out = {\n            type: serializationTypeV1,\n            kdf: kdfConfiguration,\n            encryption: encryptionConfiguration,\n            data: (0, encoding_1.toBase64)(encryptedData),\n        };\n        return JSON.stringify(out);\n    }\n    async getKeyPair(hdPath) {\n        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);\n        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);\n        return {\n            privkey: privkey,\n            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),\n        };\n    }\n    async getAccountsWithPrivkeys() {\n        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {\n            const { privkey, pubkey } = await this.getKeyPair(hdPath);\n            const address = (0, encoding_1.toBech32)(prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(pubkey));\n            return {\n                algo: \"secp256k1\",\n                privkey: privkey,\n                pubkey: pubkey,\n                address: address,\n            };\n        }));\n    }\n}\nexports.Secp256k1HdWallet = Secp256k1HdWallet;\n//# sourceMappingURL=secp256k1hdwallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1wallet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1Wallet = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nconst signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\n/**\n * A wallet that holds a single secp256k1 keypair.\n *\n * If you want to work with BIP39 mnemonics and multiple accounts, use Secp256k1HdWallet.\n */\nclass Secp256k1Wallet {\n    constructor(privkey, pubkey, prefix) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n        this.prefix = prefix;\n    }\n    /**\n     * Creates a Secp256k1Wallet from the given private key\n     *\n     * @param privkey The private key.\n     * @param prefix The bech32 address prefix (human readable part). Defaults to \"cosmos\".\n     */\n    static async fromKey(privkey, prefix = \"cosmos\") {\n        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;\n        return new Secp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);\n    }\n    get address() {\n        return (0, encoding_1.toBech32)(this.prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));\n    }\n    async getAccounts() {\n        return [\n            {\n                algo: \"secp256k1\",\n                address: this.address,\n                pubkey: this.pubkey,\n            },\n        ];\n    }\n    async signAmino(signerAddress, signDoc) {\n        if (signerAddress !== this.address) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const message = new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signDoc)).digest();\n        const signature = await crypto_1.Secp256k1.createSignature(message, this.privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        return {\n            signed: signDoc,\n            signature: (0, signature_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes),\n        };\n    }\n}\nexports.Secp256k1Wallet = Secp256k1Wallet;\n//# sourceMappingURL=secp256k1wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zZWNwMjU2azF3YWxsZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFnQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsMEVBQWE7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsMEVBQWE7QUFDekMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGVBQWU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zZWNwMjU2azF3YWxsZXQuanM/Y2U4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VjcDI1NmsxV2FsbGV0ID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBhZGRyZXNzZXNfMSA9IHJlcXVpcmUoXCIuL2FkZHJlc3Nlc1wiKTtcbmNvbnN0IHNpZ25hdHVyZV8xID0gcmVxdWlyZShcIi4vc2lnbmF0dXJlXCIpO1xuY29uc3Qgc2lnbmRvY18xID0gcmVxdWlyZShcIi4vc2lnbmRvY1wiKTtcbi8qKlxuICogQSB3YWxsZXQgdGhhdCBob2xkcyBhIHNpbmdsZSBzZWNwMjU2azEga2V5cGFpci5cbiAqXG4gKiBJZiB5b3Ugd2FudCB0byB3b3JrIHdpdGggQklQMzkgbW5lbW9uaWNzIGFuZCBtdWx0aXBsZSBhY2NvdW50cywgdXNlIFNlY3AyNTZrMUhkV2FsbGV0LlxuICovXG5jbGFzcyBTZWNwMjU2azFXYWxsZXQge1xuICAgIGNvbnN0cnVjdG9yKHByaXZrZXksIHB1YmtleSwgcHJlZml4KSB7XG4gICAgICAgIHRoaXMucHJpdmtleSA9IHByaXZrZXk7XG4gICAgICAgIHRoaXMucHVia2V5ID0gcHVia2V5O1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIFNlY3AyNTZrMVdhbGxldCBmcm9tIHRoZSBnaXZlbiBwcml2YXRlIGtleVxuICAgICAqXG4gICAgICogQHBhcmFtIHByaXZrZXkgVGhlIHByaXZhdGUga2V5LlxuICAgICAqIEBwYXJhbSBwcmVmaXggVGhlIGJlY2gzMiBhZGRyZXNzIHByZWZpeCAoaHVtYW4gcmVhZGFibGUgcGFydCkuIERlZmF1bHRzIHRvIFwiY29zbW9zXCIuXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGZyb21LZXkocHJpdmtleSwgcHJlZml4ID0gXCJjb3Ntb3NcIikge1xuICAgICAgICBjb25zdCB1bmNvbXByZXNzZWQgPSAoYXdhaXQgY3J5cHRvXzEuU2VjcDI1NmsxLm1ha2VLZXlwYWlyKHByaXZrZXkpKS5wdWJrZXk7XG4gICAgICAgIHJldHVybiBuZXcgU2VjcDI1NmsxV2FsbGV0KHByaXZrZXksIGNyeXB0b18xLlNlY3AyNTZrMS5jb21wcmVzc1B1YmtleSh1bmNvbXByZXNzZWQpLCBwcmVmaXgpO1xuICAgIH1cbiAgICBnZXQgYWRkcmVzcygpIHtcbiAgICAgICAgcmV0dXJuICgwLCBlbmNvZGluZ18xLnRvQmVjaDMyKSh0aGlzLnByZWZpeCwgKDAsIGFkZHJlc3Nlc18xLnJhd1NlY3AyNTZrMVB1YmtleVRvUmF3QWRkcmVzcykodGhpcy5wdWJrZXkpKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0QWNjb3VudHMoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYWxnbzogXCJzZWNwMjU2azFcIixcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0aGlzLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgcHVia2V5OiB0aGlzLnB1YmtleSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF07XG4gICAgfVxuICAgIGFzeW5jIHNpZ25BbWlubyhzaWduZXJBZGRyZXNzLCBzaWduRG9jKSB7XG4gICAgICAgIGlmIChzaWduZXJBZGRyZXNzICE9PSB0aGlzLmFkZHJlc3MpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQWRkcmVzcyAke3NpZ25lckFkZHJlc3N9IG5vdCBmb3VuZCBpbiB3YWxsZXRgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtZXNzYWdlID0gbmV3IGNyeXB0b18xLlNoYTI1NigoMCwgc2lnbmRvY18xLnNlcmlhbGl6ZVNpZ25Eb2MpKHNpZ25Eb2MpKS5kaWdlc3QoKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgY3J5cHRvXzEuU2VjcDI1NmsxLmNyZWF0ZVNpZ25hdHVyZShtZXNzYWdlLCB0aGlzLnByaXZrZXkpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmVCeXRlcyA9IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUucigzMiksIC4uLnNpZ25hdHVyZS5zKDMyKV0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2lnbmVkOiBzaWduRG9jLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiAoMCwgc2lnbmF0dXJlXzEuZW5jb2RlU2VjcDI1NmsxU2lnbmF0dXJlKSh0aGlzLnB1YmtleSwgc2lnbmF0dXJlQnl0ZXMpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuU2VjcDI1NmsxV2FsbGV0ID0gU2VjcDI1NmsxV2FsbGV0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VjcDI1Nmsxd2FsbGV0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/signature.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signature.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeSignature = exports.encodeSecp256k1Signature = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst encoding_2 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\n/**\n * Takes a binary pubkey and signature to create a signature object\n *\n * @param pubkey a compressed secp256k1 public key\n * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s\n */\nfunction encodeSecp256k1Signature(pubkey, signature) {\n    if (signature.length !== 64) {\n        throw new Error(\"Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.\");\n    }\n    return {\n        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),\n        signature: (0, encoding_1.toBase64)(signature),\n    };\n}\nexports.encodeSecp256k1Signature = encodeSecp256k1Signature;\nfunction decodeSignature(signature) {\n    switch (signature.pub_key.type) {\n        // Note: please don't add cases here without writing additional unit tests\n        case pubkeys_1.pubkeyType.secp256k1:\n            return {\n                pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),\n                signature: (0, encoding_1.fromBase64)(signature.signature),\n            };\n        default:\n            throw new Error(\"Unsupported pubkey type\");\n    }\n}\nexports.decodeSignature = decodeSignature;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsZ0NBQWdDO0FBQzFEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHdFQUFZO0FBQ3ZDLGtCQUFrQixtQkFBTyxDQUFDLHNFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduYXR1cmUuanM/N2JiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlU2lnbmF0dXJlID0gZXhwb3J0cy5lbmNvZGVTZWNwMjU2azFTaWduYXR1cmUgPSB2b2lkIDA7XG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb24gKi9cbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbmNvbnN0IGVuY29kaW5nXzIgPSByZXF1aXJlKFwiLi9lbmNvZGluZ1wiKTtcbmNvbnN0IHB1YmtleXNfMSA9IHJlcXVpcmUoXCIuL3B1YmtleXNcIik7XG4vKipcbiAqIFRha2VzIGEgYmluYXJ5IHB1YmtleSBhbmQgc2lnbmF0dXJlIHRvIGNyZWF0ZSBhIHNpZ25hdHVyZSBvYmplY3RcbiAqXG4gKiBAcGFyYW0gcHVia2V5IGEgY29tcHJlc3NlZCBzZWNwMjU2azEgcHVibGljIGtleVxuICogQHBhcmFtIHNpZ25hdHVyZSBhIDY0IGJ5dGUgZml4ZWQgbGVuZ3RoIHJlcHJlc2VudGF0aW9uIG9mIHNlY3AyNTZrMSBzaWduYXR1cmUgY29tcG9uZW50cyByIGFuZCBzXG4gKi9cbmZ1bmN0aW9uIGVuY29kZVNlY3AyNTZrMVNpZ25hdHVyZShwdWJrZXksIHNpZ25hdHVyZSkge1xuICAgIGlmIChzaWduYXR1cmUubGVuZ3RoICE9PSA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTaWduYXR1cmUgbXVzdCBiZSA2NCBieXRlcyBsb25nLiBDb3Ntb3MgU0RLIHVzZXMgYSAyeDMyIGJ5dGUgZml4ZWQgbGVuZ3RoIGVuY29kaW5nIGZvciB0aGUgc2VjcDI1NmsxIHNpZ25hdHVyZSBpbnRlZ2VycyByIGFuZCBzLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHViX2tleTogKDAsIGVuY29kaW5nXzIuZW5jb2RlU2VjcDI1NmsxUHVia2V5KShwdWJrZXkpLFxuICAgICAgICBzaWduYXR1cmU6ICgwLCBlbmNvZGluZ18xLnRvQmFzZTY0KShzaWduYXR1cmUpLFxuICAgIH07XG59XG5leHBvcnRzLmVuY29kZVNlY3AyNTZrMVNpZ25hdHVyZSA9IGVuY29kZVNlY3AyNTZrMVNpZ25hdHVyZTtcbmZ1bmN0aW9uIGRlY29kZVNpZ25hdHVyZShzaWduYXR1cmUpIHtcbiAgICBzd2l0Y2ggKHNpZ25hdHVyZS5wdWJfa2V5LnR5cGUpIHtcbiAgICAgICAgLy8gTm90ZTogcGxlYXNlIGRvbid0IGFkZCBjYXNlcyBoZXJlIHdpdGhvdXQgd3JpdGluZyBhZGRpdGlvbmFsIHVuaXQgdGVzdHNcbiAgICAgICAgY2FzZSBwdWJrZXlzXzEucHVia2V5VHlwZS5zZWNwMjU2azE6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHB1YmtleTogKDAsIGVuY29kaW5nXzEuZnJvbUJhc2U2NCkoc2lnbmF0dXJlLnB1Yl9rZXkudmFsdWUpLFxuICAgICAgICAgICAgICAgIHNpZ25hdHVyZTogKDAsIGVuY29kaW5nXzEuZnJvbUJhc2U2NCkoc2lnbmF0dXJlLnNpZ25hdHVyZSksXG4gICAgICAgICAgICB9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgcHVia2V5IHR5cGVcIik7XG4gICAgfVxufVxuZXhwb3J0cy5kZWNvZGVTaWduYXR1cmUgPSBkZWNvZGVTaWduYXR1cmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signdoc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.serializeSignDoc = exports.escapeCharacters = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nfunction sortedObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(sortedObject);\n    }\n    const sortedKeys = Object.keys(obj).sort();\n    const result = {};\n    // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n    sortedKeys.forEach((key) => {\n        result[key] = sortedObject(obj[key]);\n    });\n    return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n    return JSON.stringify(sortedObject(obj));\n}\nexports.sortedJsonStringify = sortedJsonStringify;\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {\n    return {\n        chain_id: chainId,\n        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n        fee: fee,\n        msgs: msgs,\n        memo: memo || \"\",\n    };\n}\nexports.makeSignDoc = makeSignDoc;\n/**\n * Takes a valid JSON document and performs the following escapings in string values:\n *\n * `&` -> `\\u0026`\n * `<` -> `\\u003c`\n * `>` -> `\\u003e`\n *\n * Since those characters do not occur in other places of the JSON document, only\n * string values are affected.\n *\n * If the input is invalid JSON, the behaviour is undefined.\n */\nfunction escapeCharacters(input) {\n    // When we migrate to target es2021 or above, we can use replaceAll instead of global patterns.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\n    const amp = /&/g;\n    const lt = /</g;\n    const gt = />/g;\n    return input.replace(amp, \"\\\\u0026\").replace(lt, \"\\\\u003c\").replace(gt, \"\\\\u003e\");\n}\nexports.escapeCharacters = escapeCharacters;\nfunction serializeSignDoc(signDoc) {\n    const serialized = escapeCharacters(sortedJsonStringify(signDoc));\n    return (0, encoding_1.toUtf8)(serialized);\n}\nexports.serializeSignDoc = serializeSignDoc;\n//# sourceMappingURL=signdoc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduZG9jLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLHdCQUF3QixHQUFHLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN2RztBQUNBLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduZG9jLmpzPzc4NTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNlcmlhbGl6ZVNpZ25Eb2MgPSBleHBvcnRzLmVzY2FwZUNoYXJhY3RlcnMgPSBleHBvcnRzLm1ha2VTaWduRG9jID0gZXhwb3J0cy5zb3J0ZWRKc29uU3RyaW5naWZ5ID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuZnVuY3Rpb24gc29ydGVkT2JqZWN0KG9iaikge1xuICAgIGlmICh0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiIHx8IG9iaiA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgIHJldHVybiBvYmoubWFwKHNvcnRlZE9iamVjdCk7XG4gICAgfVxuICAgIGNvbnN0IHNvcnRlZEtleXMgPSBPYmplY3Qua2V5cyhvYmopLnNvcnQoKTtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICAvLyBOT1RFOiBVc2UgZm9yRWFjaCBpbnN0ZWFkIG9mIHJlZHVjZSBmb3IgcGVyZm9ybWFuY2Ugd2l0aCBsYXJnZSBvYmplY3RzIGVnIFdhc20gY29kZVxuICAgIHNvcnRlZEtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gc29ydGVkT2JqZWN0KG9ialtrZXldKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqIFJldHVybnMgYSBKU09OIHN0cmluZyB3aXRoIG9iamVjdHMgc29ydGVkIGJ5IGtleSAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbmZ1bmN0aW9uIHNvcnRlZEpzb25TdHJpbmdpZnkob2JqKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNvcnRlZE9iamVjdChvYmopKTtcbn1cbmV4cG9ydHMuc29ydGVkSnNvblN0cmluZ2lmeSA9IHNvcnRlZEpzb25TdHJpbmdpZnk7XG5mdW5jdGlvbiBtYWtlU2lnbkRvYyhtc2dzLCBmZWUsIGNoYWluSWQsIG1lbW8sIGFjY291bnROdW1iZXIsIHNlcXVlbmNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2hhaW5faWQ6IGNoYWluSWQsXG4gICAgICAgIGFjY291bnRfbnVtYmVyOiBtYXRoXzEuVWludDUzLmZyb21TdHJpbmcoYWNjb3VudE51bWJlci50b1N0cmluZygpKS50b1N0cmluZygpLFxuICAgICAgICBzZXF1ZW5jZTogbWF0aF8xLlVpbnQ1My5mcm9tU3RyaW5nKHNlcXVlbmNlLnRvU3RyaW5nKCkpLnRvU3RyaW5nKCksXG4gICAgICAgIGZlZTogZmVlLFxuICAgICAgICBtc2dzOiBtc2dzLFxuICAgICAgICBtZW1vOiBtZW1vIHx8IFwiXCIsXG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZVNpZ25Eb2MgPSBtYWtlU2lnbkRvYztcbi8qKlxuICogVGFrZXMgYSB2YWxpZCBKU09OIGRvY3VtZW50IGFuZCBwZXJmb3JtcyB0aGUgZm9sbG93aW5nIGVzY2FwaW5ncyBpbiBzdHJpbmcgdmFsdWVzOlxuICpcbiAqIGAmYCAtPiBgXFx1MDAyNmBcbiAqIGA8YCAtPiBgXFx1MDAzY2BcbiAqIGA+YCAtPiBgXFx1MDAzZWBcbiAqXG4gKiBTaW5jZSB0aG9zZSBjaGFyYWN0ZXJzIGRvIG5vdCBvY2N1ciBpbiBvdGhlciBwbGFjZXMgb2YgdGhlIEpTT04gZG9jdW1lbnQsIG9ubHlcbiAqIHN0cmluZyB2YWx1ZXMgYXJlIGFmZmVjdGVkLlxuICpcbiAqIElmIHRoZSBpbnB1dCBpcyBpbnZhbGlkIEpTT04sIHRoZSBiZWhhdmlvdXIgaXMgdW5kZWZpbmVkLlxuICovXG5mdW5jdGlvbiBlc2NhcGVDaGFyYWN0ZXJzKGlucHV0KSB7XG4gICAgLy8gV2hlbiB3ZSBtaWdyYXRlIHRvIHRhcmdldCBlczIwMjEgb3IgYWJvdmUsIHdlIGNhbiB1c2UgcmVwbGFjZUFsbCBpbnN0ZWFkIG9mIGdsb2JhbCBwYXR0ZXJucy5cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvcmVwbGFjZUFsbFxuICAgIGNvbnN0IGFtcCA9IC8mL2c7XG4gICAgY29uc3QgbHQgPSAvPC9nO1xuICAgIGNvbnN0IGd0ID0gLz4vZztcbiAgICByZXR1cm4gaW5wdXQucmVwbGFjZShhbXAsIFwiXFxcXHUwMDI2XCIpLnJlcGxhY2UobHQsIFwiXFxcXHUwMDNjXCIpLnJlcGxhY2UoZ3QsIFwiXFxcXHUwMDNlXCIpO1xufVxuZXhwb3J0cy5lc2NhcGVDaGFyYWN0ZXJzID0gZXNjYXBlQ2hhcmFjdGVycztcbmZ1bmN0aW9uIHNlcmlhbGl6ZVNpZ25Eb2Moc2lnbkRvYykge1xuICAgIGNvbnN0IHNlcmlhbGl6ZWQgPSBlc2NhcGVDaGFyYWN0ZXJzKHNvcnRlZEpzb25TdHJpbmdpZnkoc2lnbkRvYykpO1xuICAgIHJldHVybiAoMCwgZW5jb2RpbmdfMS50b1V0ZjgpKHNlcmlhbGl6ZWQpO1xufVxuZXhwb3J0cy5zZXJpYWxpemVTaWduRG9jID0gc2VyaWFsaXplU2lnbkRvYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25kb2MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/stdtx.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeStdTx = exports.isStdTx = void 0;\nfunction isStdTx(txValue) {\n    const { memo, msg, fee, signatures } = txValue;\n    return (typeof memo === \"string\" && Array.isArray(msg) && typeof fee === \"object\" && Array.isArray(signatures));\n}\nexports.isStdTx = isStdTx;\nfunction makeStdTx(content, signatures) {\n    return {\n        msg: content.msgs,\n        fee: content.fee,\n        memo: content.memo,\n        signatures: Array.isArray(signatures) ? signatures : [signatures],\n    };\n}\nexports.makeStdTx = makeStdTx;\n//# sourceMappingURL=stdtx.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zdGR0eC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlO0FBQ25DO0FBQ0EsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvc3RkdHguanM/ODQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFrZVN0ZFR4ID0gZXhwb3J0cy5pc1N0ZFR4ID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNTdGRUeCh0eFZhbHVlKSB7XG4gICAgY29uc3QgeyBtZW1vLCBtc2csIGZlZSwgc2lnbmF0dXJlcyB9ID0gdHhWYWx1ZTtcbiAgICByZXR1cm4gKHR5cGVvZiBtZW1vID09PSBcInN0cmluZ1wiICYmIEFycmF5LmlzQXJyYXkobXNnKSAmJiB0eXBlb2YgZmVlID09PSBcIm9iamVjdFwiICYmIEFycmF5LmlzQXJyYXkoc2lnbmF0dXJlcykpO1xufVxuZXhwb3J0cy5pc1N0ZFR4ID0gaXNTdGRUeDtcbmZ1bmN0aW9uIG1ha2VTdGRUeChjb250ZW50LCBzaWduYXR1cmVzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbXNnOiBjb250ZW50Lm1zZ3MsXG4gICAgICAgIGZlZTogY29udGVudC5mZWUsXG4gICAgICAgIG1lbW86IGNvbnRlbnQubWVtbyxcbiAgICAgICAgc2lnbmF0dXJlczogQXJyYXkuaXNBcnJheShzaWduYXR1cmVzKSA/IHNpZ25hdHVyZXMgOiBbc2lnbmF0dXJlc10sXG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZVN0ZFR4ID0gbWFrZVN0ZFR4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RkdHguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/wallet.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/wallet.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A fixed salt is chosen to archive a deterministic password to key derivation.\n * This reduces the scope of a potential rainbow attack to all CosmJS users.\n * Must be 16 bytes due to implementation limitations.\n */\nexports.cosmjsSalt = (0, encoding_1.toAscii)(\"The CosmJS salt.\");\nasync function executeKdf(password, configuration) {\n    switch (configuration.algorithm) {\n        case \"argon2id\": {\n            const options = configuration.params;\n            if (!(0, crypto_1.isArgon2idOptions)(options))\n                throw new Error(\"Invalid format of argon2id params\");\n            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);\n        }\n        default:\n            throw new Error(\"Unsupported KDF algorithm\");\n    }\n}\nexports.executeKdf = executeKdf;\nexports.supportedAlgorithms = {\n    xchacha20poly1305Ietf: \"xchacha20poly1305-ietf\",\n};\nasync function encrypt(plaintext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);\n            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api\n            return new Uint8Array([\n                ...nonce,\n                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),\n            ]);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.encrypt = encrypt;\nasync function decrypt(ciphertext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);\n            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC93YWxsZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGVBQWUsR0FBRywyQkFBMkIsR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDekcsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsaUJBQWlCO0FBQ25GO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsaUJBQWlCO0FBQ25GO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC93YWxsZXQuanM/ZjJmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjcnlwdCA9IGV4cG9ydHMuZW5jcnlwdCA9IGV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcyA9IGV4cG9ydHMuZXhlY3V0ZUtkZiA9IGV4cG9ydHMuY29zbWpzU2FsdCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuLyoqXG4gKiBBIGZpeGVkIHNhbHQgaXMgY2hvc2VuIHRvIGFyY2hpdmUgYSBkZXRlcm1pbmlzdGljIHBhc3N3b3JkIHRvIGtleSBkZXJpdmF0aW9uLlxuICogVGhpcyByZWR1Y2VzIHRoZSBzY29wZSBvZiBhIHBvdGVudGlhbCByYWluYm93IGF0dGFjayB0byBhbGwgQ29zbUpTIHVzZXJzLlxuICogTXVzdCBiZSAxNiBieXRlcyBkdWUgdG8gaW1wbGVtZW50YXRpb24gbGltaXRhdGlvbnMuXG4gKi9cbmV4cG9ydHMuY29zbWpzU2FsdCA9ICgwLCBlbmNvZGluZ18xLnRvQXNjaWkpKFwiVGhlIENvc21KUyBzYWx0LlwiKTtcbmFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVLZGYocGFzc3dvcmQsIGNvbmZpZ3VyYXRpb24pIHtcbiAgICBzd2l0Y2ggKGNvbmZpZ3VyYXRpb24uYWxnb3JpdGhtKSB7XG4gICAgICAgIGNhc2UgXCJhcmdvbjJpZFwiOiB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0gY29uZmlndXJhdGlvbi5wYXJhbXM7XG4gICAgICAgICAgICBpZiAoISgwLCBjcnlwdG9fMS5pc0FyZ29uMmlkT3B0aW9ucykob3B0aW9ucykpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBmb3JtYXQgb2YgYXJnb24yaWQgcGFyYW1zXCIpO1xuICAgICAgICAgICAgcmV0dXJuIGNyeXB0b18xLkFyZ29uMmlkLmV4ZWN1dGUocGFzc3dvcmQsIGV4cG9ydHMuY29zbWpzU2FsdCwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIEtERiBhbGdvcml0aG1cIik7XG4gICAgfVxufVxuZXhwb3J0cy5leGVjdXRlS2RmID0gZXhlY3V0ZUtkZjtcbmV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcyA9IHtcbiAgICB4Y2hhY2hhMjBwb2x5MTMwNUlldGY6IFwieGNoYWNoYTIwcG9seTEzMDUtaWV0ZlwiLFxufTtcbmFzeW5jIGZ1bmN0aW9uIGVuY3J5cHQocGxhaW50ZXh0LCBlbmNyeXB0aW9uS2V5LCBjb25maWcpIHtcbiAgICBzd2l0Y2ggKGNvbmZpZy5hbGdvcml0aG0pIHtcbiAgICAgICAgY2FzZSBleHBvcnRzLnN1cHBvcnRlZEFsZ29yaXRobXMueGNoYWNoYTIwcG9seTEzMDVJZXRmOiB7XG4gICAgICAgICAgICBjb25zdCBub25jZSA9IGNyeXB0b18xLlJhbmRvbS5nZXRCeXRlcyhjcnlwdG9fMS54Y2hhY2hhMjBOb25jZUxlbmd0aCk7XG4gICAgICAgICAgICAvLyBQcmVwZW5kIGZpeGVkLWxlbmd0aCBub25jZSB0byBjaXBoZXJ0ZXh0IGFzIHN1Z2dlc3RlZCBpbiB0aGUgZXhhbXBsZSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9qZWRpc2N0MS9saWJzb2RpdW0uanMjYXBpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW1xuICAgICAgICAgICAgICAgIC4uLm5vbmNlLFxuICAgICAgICAgICAgICAgIC4uLihhd2FpdCBjcnlwdG9fMS5YY2hhY2hhMjBwb2x5MTMwNUlldGYuZW5jcnlwdChwbGFpbnRleHQsIGVuY3J5cHRpb25LZXksIG5vbmNlKSksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNyeXB0aW9uIGFsZ29yaXRobTogJyR7Y29uZmlnLmFsZ29yaXRobX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5lbmNyeXB0ID0gZW5jcnlwdDtcbmFzeW5jIGZ1bmN0aW9uIGRlY3J5cHQoY2lwaGVydGV4dCwgZW5jcnlwdGlvbktleSwgY29uZmlnKSB7XG4gICAgc3dpdGNoIChjb25maWcuYWxnb3JpdGhtKSB7XG4gICAgICAgIGNhc2UgZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zLnhjaGFjaGEyMHBvbHkxMzA1SWV0Zjoge1xuICAgICAgICAgICAgY29uc3Qgbm9uY2UgPSBjaXBoZXJ0ZXh0LnNsaWNlKDAsIGNyeXB0b18xLnhjaGFjaGEyME5vbmNlTGVuZ3RoKTtcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG9fMS5YY2hhY2hhMjBwb2x5MTMwNUlldGYuZGVjcnlwdChjaXBoZXJ0ZXh0LnNsaWNlKGNyeXB0b18xLnhjaGFjaGEyME5vbmNlTGVuZ3RoKSwgZW5jcnlwdGlvbktleSwgbm9uY2UpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY3J5cHRpb24gYWxnb3JpdGhtOiAnJHtjb25maWcuYWxnb3JpdGhtfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLmRlY3J5cHQgPSBkZWNyeXB0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FsbGV0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/bip39.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bip39 = exports.EnglishMnemonic = exports.mnemonicToEntropy = exports.entropyToMnemonic = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst pbkdf2_1 = __webpack_require__(/*! ./pbkdf2 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js\");\nconst sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\nconst wordlist = [\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\",\n];\nfunction bytesToBitstring(bytes) {\n    return Array.from(bytes)\n        .map((byte) => byte.toString(2).padStart(8, \"0\"))\n        .join(\"\");\n}\nfunction deriveChecksumBits(entropy) {\n    const entropyLengthBits = entropy.length * 8; // \"ENT\" (in bits)\n    const checksumLengthBits = entropyLengthBits / 32; // \"CS\" (in bits)\n    const hash = (0, sha_1.sha256)(entropy);\n    return bytesToBitstring(hash).slice(0, checksumLengthBits);\n}\nfunction bitstringToByte(bin) {\n    return parseInt(bin, 2);\n}\nconst allowedEntropyLengths = [16, 20, 24, 28, 32];\nconst allowedWordLengths = [12, 15, 18, 21, 24];\nfunction entropyToMnemonic(entropy) {\n    if (allowedEntropyLengths.indexOf(entropy.length) === -1) {\n        throw new Error(\"invalid input length\");\n    }\n    const entropyBits = bytesToBitstring(entropy);\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const chunks = bits.match(/(.{11})/g);\n    const words = chunks.map((binary) => {\n        const index = bitstringToByte(binary);\n        return wordlist[index];\n    });\n    return words.join(\" \");\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nconst invalidNumberOfWorks = \"Invalid number of words\";\nconst wordNotInWordlist = \"Found word that is not in the wordlist\";\nconst invalidEntropy = \"Invalid entropy\";\nconst invalidChecksum = \"Invalid mnemonic checksum\";\nfunction normalize(str) {\n    return str.normalize(\"NFKD\");\n}\nfunction mnemonicToEntropy(mnemonic) {\n    const words = normalize(mnemonic).split(\" \");\n    if (!allowedWordLengths.includes(words.length)) {\n        throw new Error(invalidNumberOfWorks);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(wordNotInWordlist);\n        }\n        return index.toString(2).padStart(11, \"0\");\n    })\n        .join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(bitstringToByte);\n    if (entropyBytes.length < 16 || entropyBytes.length > 32 || entropyBytes.length % 4 !== 0) {\n        throw new Error(invalidEntropy);\n    }\n    const entropy = Uint8Array.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(invalidChecksum);\n    }\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nclass EnglishMnemonic {\n    constructor(mnemonic) {\n        if (!EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {\n            throw new Error(\"Invalid mnemonic format\");\n        }\n        const words = mnemonic.split(\" \");\n        const allowedWordsLengths = [12, 15, 18, 21, 24];\n        if (allowedWordsLengths.indexOf(words.length) === -1) {\n            throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);\n        }\n        for (const word of words) {\n            if (EnglishMnemonic.wordlist.indexOf(word) === -1) {\n                throw new Error(\"Mnemonic contains invalid word\");\n            }\n        }\n        // Throws with informative error message if mnemonic is not valid\n        mnemonicToEntropy(mnemonic);\n        this.data = mnemonic;\n    }\n    toString() {\n        return this.data;\n    }\n}\nexports.EnglishMnemonic = EnglishMnemonic;\nEnglishMnemonic.wordlist = wordlist;\n// list of space separated lower case words (1 or more)\nEnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;\nclass Bip39 {\n    /**\n     * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.\n     *\n     * | Entropy            | Words |\n     * |--------------------|-------|\n     * | 128 bit (16 bytes) |    12 |\n     * | 160 bit (20 bytes) |    15 |\n     * | 192 bit (24 bytes) |    18 |\n     * | 224 bit (28 bytes) |    21 |\n     * | 256 bit (32 bytes) |    24 |\n     *\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic\n     * @param entropy The entropy to be encoded. This must be cryptographically secure.\n     */\n    static encode(entropy) {\n        return new EnglishMnemonic(entropyToMnemonic(entropy));\n    }\n    static decode(mnemonic) {\n        return mnemonicToEntropy(mnemonic.toString());\n    }\n    static async mnemonicToSeed(mnemonic, password) {\n        const mnemonicBytes = (0, encoding_1.toUtf8)(normalize(mnemonic.toString()));\n        const salt = \"mnemonic\" + (password ? normalize(password) : \"\");\n        const saltBytes = (0, encoding_1.toUtf8)(salt);\n        return (0, pbkdf2_1.pbkdf2Sha512)(mnemonicBytes, saltBytes, 2048, 64);\n    }\n}\nexports.Bip39 = Bip39;\n//# sourceMappingURL=bip39.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/hmac.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hmac = void 0;\nclass Hmac {\n    constructor(hashFunctionConstructor, originalKey) {\n        // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation\n        // with the addition of incremental hashing support. Thus part of the algorithm\n        // is in the constructor and the rest in digest().\n        const blockSize = new hashFunctionConstructor().blockSize;\n        this.hash = (data) => new hashFunctionConstructor().update(data).digest();\n        let key = originalKey;\n        if (key.length > blockSize) {\n            key = this.hash(key);\n        }\n        if (key.length < blockSize) {\n            const zeroPadding = new Uint8Array(blockSize - key.length);\n            key = new Uint8Array([...key, ...zeroPadding]);\n        }\n        // eslint-disable-next-line no-bitwise\n        this.oKeyPad = key.map((keyByte) => keyByte ^ 0x5c);\n        // eslint-disable-next-line no-bitwise\n        this.iKeyPad = key.map((keyByte) => keyByte ^ 0x36);\n        this.messageHasher = new hashFunctionConstructor();\n        this.blockSize = blockSize;\n        this.update(this.iKeyPad);\n    }\n    update(data) {\n        this.messageHasher.update(data);\n        return this;\n    }\n    digest() {\n        const innerHash = this.messageHasher.digest();\n        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));\n    }\n}\nexports.Hmac = Hmac;\n//# sourceMappingURL=hmac.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvaG1hYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2NyeXB0by9idWlsZC9obWFjLmpzPzRmNjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhtYWMgPSB2b2lkIDA7XG5jbGFzcyBIbWFjIHtcbiAgICBjb25zdHJ1Y3RvcihoYXNoRnVuY3Rpb25Db25zdHJ1Y3Rvciwgb3JpZ2luYWxLZXkpIHtcbiAgICAgICAgLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBvbiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9ITUFDI0ltcGxlbWVudGF0aW9uXG4gICAgICAgIC8vIHdpdGggdGhlIGFkZGl0aW9uIG9mIGluY3JlbWVudGFsIGhhc2hpbmcgc3VwcG9ydC4gVGh1cyBwYXJ0IG9mIHRoZSBhbGdvcml0aG1cbiAgICAgICAgLy8gaXMgaW4gdGhlIGNvbnN0cnVjdG9yIGFuZCB0aGUgcmVzdCBpbiBkaWdlc3QoKS5cbiAgICAgICAgY29uc3QgYmxvY2tTaXplID0gbmV3IGhhc2hGdW5jdGlvbkNvbnN0cnVjdG9yKCkuYmxvY2tTaXplO1xuICAgICAgICB0aGlzLmhhc2ggPSAoZGF0YSkgPT4gbmV3IGhhc2hGdW5jdGlvbkNvbnN0cnVjdG9yKCkudXBkYXRlKGRhdGEpLmRpZ2VzdCgpO1xuICAgICAgICBsZXQga2V5ID0gb3JpZ2luYWxLZXk7XG4gICAgICAgIGlmIChrZXkubGVuZ3RoID4gYmxvY2tTaXplKSB7XG4gICAgICAgICAgICBrZXkgPSB0aGlzLmhhc2goa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoa2V5Lmxlbmd0aCA8IGJsb2NrU2l6ZSkge1xuICAgICAgICAgICAgY29uc3QgemVyb1BhZGRpbmcgPSBuZXcgVWludDhBcnJheShibG9ja1NpemUgLSBrZXkubGVuZ3RoKTtcbiAgICAgICAgICAgIGtleSA9IG5ldyBVaW50OEFycmF5KFsuLi5rZXksIC4uLnplcm9QYWRkaW5nXSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWJpdHdpc2VcbiAgICAgICAgdGhpcy5vS2V5UGFkID0ga2V5Lm1hcCgoa2V5Qnl0ZSkgPT4ga2V5Qnl0ZSBeIDB4NWMpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYml0d2lzZVxuICAgICAgICB0aGlzLmlLZXlQYWQgPSBrZXkubWFwKChrZXlCeXRlKSA9PiBrZXlCeXRlIF4gMHgzNik7XG4gICAgICAgIHRoaXMubWVzc2FnZUhhc2hlciA9IG5ldyBoYXNoRnVuY3Rpb25Db25zdHJ1Y3RvcigpO1xuICAgICAgICB0aGlzLmJsb2NrU2l6ZSA9IGJsb2NrU2l6ZTtcbiAgICAgICAgdGhpcy51cGRhdGUodGhpcy5pS2V5UGFkKTtcbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlSGFzaGVyLnVwZGF0ZShkYXRhKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgY29uc3QgaW5uZXJIYXNoID0gdGhpcy5tZXNzYWdlSGFzaGVyLmRpZ2VzdCgpO1xuICAgICAgICByZXR1cm4gdGhpcy5oYXNoKG5ldyBVaW50OEFycmF5KFsuLi50aGlzLm9LZXlQYWQsIC4uLmlubmVySGFzaF0pKTtcbiAgICB9XG59XG5leHBvcnRzLkhtYWMgPSBIbWFjO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG1hYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;\nvar bip39_1 = __webpack_require__(/*! ./bip39 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js\");\nObject.defineProperty(exports, \"Bip39\", ({ enumerable: true, get: function () { return bip39_1.Bip39; } }));\nObject.defineProperty(exports, \"EnglishMnemonic\", ({ enumerable: true, get: function () { return bip39_1.EnglishMnemonic; } }));\nvar hmac_1 = __webpack_require__(/*! ./hmac */ \"(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\");\nObject.defineProperty(exports, \"Hmac\", ({ enumerable: true, get: function () { return hmac_1.Hmac; } }));\nvar keccak_1 = __webpack_require__(/*! ./keccak */ \"(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js\");\nObject.defineProperty(exports, \"Keccak256\", ({ enumerable: true, get: function () { return keccak_1.Keccak256; } }));\nObject.defineProperty(exports, \"keccak256\", ({ enumerable: true, get: function () { return keccak_1.keccak256; } }));\nvar libsodium_1 = __webpack_require__(/*! ./libsodium */ \"(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js\");\nObject.defineProperty(exports, \"Argon2id\", ({ enumerable: true, get: function () { return libsodium_1.Argon2id; } }));\nObject.defineProperty(exports, \"Ed25519\", ({ enumerable: true, get: function () { return libsodium_1.Ed25519; } }));\nObject.defineProperty(exports, \"Ed25519Keypair\", ({ enumerable: true, get: function () { return libsodium_1.Ed25519Keypair; } }));\nObject.defineProperty(exports, \"isArgon2idOptions\", ({ enumerable: true, get: function () { return libsodium_1.isArgon2idOptions; } }));\nObject.defineProperty(exports, \"xchacha20NonceLength\", ({ enumerable: true, get: function () { return libsodium_1.xchacha20NonceLength; } }));\nObject.defineProperty(exports, \"Xchacha20poly1305Ietf\", ({ enumerable: true, get: function () { return libsodium_1.Xchacha20poly1305Ietf; } }));\nvar random_1 = __webpack_require__(/*! ./random */ \"(ssr)/./node_modules/@cosmjs/crypto/build/random.js\");\nObject.defineProperty(exports, \"Random\", ({ enumerable: true, get: function () { return random_1.Random; } }));\nvar ripemd_1 = __webpack_require__(/*! ./ripemd */ \"(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js\");\nObject.defineProperty(exports, \"Ripemd160\", ({ enumerable: true, get: function () { return ripemd_1.Ripemd160; } }));\nObject.defineProperty(exports, \"ripemd160\", ({ enumerable: true, get: function () { return ripemd_1.ripemd160; } }));\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js\");\nObject.defineProperty(exports, \"Secp256k1\", ({ enumerable: true, get: function () { return secp256k1_1.Secp256k1; } }));\nvar secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\");\nObject.defineProperty(exports, \"ExtendedSecp256k1Signature\", ({ enumerable: true, get: function () { return secp256k1signature_1.ExtendedSecp256k1Signature; } }));\nObject.defineProperty(exports, \"Secp256k1Signature\", ({ enumerable: true, get: function () { return secp256k1signature_1.Secp256k1Signature; } }));\nvar sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\nObject.defineProperty(exports, \"Sha256\", ({ enumerable: true, get: function () { return sha_1.Sha256; } }));\nObject.defineProperty(exports, \"sha256\", ({ enumerable: true, get: function () { return sha_1.sha256; } }));\nObject.defineProperty(exports, \"Sha512\", ({ enumerable: true, get: function () { return sha_1.Sha512; } }));\nObject.defineProperty(exports, \"sha512\", ({ enumerable: true, get: function () { return sha_1.sha512; } }));\nvar slip10_1 = __webpack_require__(/*! ./slip10 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js\");\nObject.defineProperty(exports, \"pathToString\", ({ enumerable: true, get: function () { return slip10_1.pathToString; } }));\nObject.defineProperty(exports, \"Slip10\", ({ enumerable: true, get: function () { return slip10_1.Slip10; } }));\nObject.defineProperty(exports, \"Slip10Curve\", ({ enumerable: true, get: function () { return slip10_1.Slip10Curve; } }));\nObject.defineProperty(exports, \"slip10CurveFromString\", ({ enumerable: true, get: function () { return slip10_1.slip10CurveFromString; } }));\nObject.defineProperty(exports, \"Slip10RawIndex\", ({ enumerable: true, get: function () { return slip10_1.Slip10RawIndex; } }));\nObject.defineProperty(exports, \"stringToPath\", ({ enumerable: true, get: function () { return slip10_1.stringToPath; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/keccak.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.keccak256 = exports.Keccak256 = void 0;\nconst sha3_1 = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/sha3.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Keccak256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha3_1.keccak_256.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Keccak256 = Keccak256;\n/** Convenience function equivalent to `new Keccak256(data).digest()` */\nfunction keccak256(data) {\n    return new Keccak256(data).digest();\n}\nexports.keccak256 = keccak256;\n//# sourceMappingURL=keccak.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQva2VjY2FrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQyxlQUFlLG1CQUFPLENBQUMsc0VBQW9CO0FBQzNDLGdCQUFnQixtQkFBTyxDQUFDLG1FQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvY3J5cHRvL2J1aWxkL2tlY2Nhay5qcz8xMTgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5rZWNjYWsyNTYgPSBleHBvcnRzLktlY2NhazI1NiA9IHZvaWQgMDtcbmNvbnN0IHNoYTNfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTNcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jbGFzcyBLZWNjYWsyNTYge1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0RGF0YSkge1xuICAgICAgICB0aGlzLmJsb2NrU2l6ZSA9IDUxMiAvIDg7XG4gICAgICAgIHRoaXMuaW1wbCA9IHNoYTNfMS5rZWNjYWtfMjU2LmNyZWF0ZSgpO1xuICAgICAgICBpZiAoZmlyc3REYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZShmaXJzdERhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIHRoaXMuaW1wbC51cGRhdGUoKDAsIHV0aWxzXzEudG9SZWFsVWludDhBcnJheSkoZGF0YSkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbXBsLmRpZ2VzdCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuS2VjY2FrMjU2ID0gS2VjY2FrMjU2O1xuLyoqIENvbnZlbmllbmNlIGZ1bmN0aW9uIGVxdWl2YWxlbnQgdG8gYG5ldyBLZWNjYWsyNTYoZGF0YSkuZGlnZXN0KClgICovXG5mdW5jdGlvbiBrZWNjYWsyNTYoZGF0YSkge1xuICAgIHJldHVybiBuZXcgS2VjY2FrMjU2KGRhdGEpLmRpZ2VzdCgpO1xufVxuZXhwb3J0cy5rZWNjYWsyNTYgPSBrZWNjYWsyNTY7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZWNjYWsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/libsodium.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Keep all classes requiring libsodium-js in one file as having multiple\n// requiring of the libsodium-wrappers module currently crashes browsers\n//\n// libsodium.js API: https://gist.github.com/webmaster128/b2dbe6d54d36dd168c9fabf441b9b09c\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst libsodium_wrappers_1 = __importDefault(__webpack_require__(/*! libsodium-wrappers */ \"(ssr)/./node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js\"));\nfunction isArgon2idOptions(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.outputLength !== \"number\")\n        return false;\n    if (typeof thing.opsLimit !== \"number\")\n        return false;\n    if (typeof thing.memLimitKib !== \"number\")\n        return false;\n    return true;\n}\nexports.isArgon2idOptions = isArgon2idOptions;\nclass Argon2id {\n    static async execute(password, salt, options) {\n        await libsodium_wrappers_1.default.ready;\n        return libsodium_wrappers_1.default.crypto_pwhash(options.outputLength, password, salt, // libsodium only supports 16 byte salts and will throw when you don't respect that\n        options.opsLimit, options.memLimitKib * 1024, libsodium_wrappers_1.default.crypto_pwhash_ALG_ARGON2ID13);\n    }\n}\nexports.Argon2id = Argon2id;\nclass Ed25519Keypair {\n    constructor(privkey, pubkey) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n    }\n    // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`\n    static fromLibsodiumPrivkey(libsodiumPrivkey) {\n        if (libsodiumPrivkey.length !== 64) {\n            throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);\n        }\n        return new Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));\n    }\n    toLibsodiumPrivkey() {\n        return new Uint8Array([...this.privkey, ...this.pubkey]);\n    }\n}\nexports.Ed25519Keypair = Ed25519Keypair;\nclass Ed25519 {\n    /**\n     * Generates a keypair deterministically from a given 32 bytes seed.\n     *\n     * This seed equals the Ed25519 private key.\n     * For implementation details see crypto_sign_seed_keypair in\n     * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html\n     * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n     */\n    static async makeKeypair(seed) {\n        await libsodium_wrappers_1.default.ready;\n        const keypair = libsodium_wrappers_1.default.crypto_sign_seed_keypair(seed);\n        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);\n    }\n    static async createSignature(message, keyPair) {\n        await libsodium_wrappers_1.default.ready;\n        return libsodium_wrappers_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());\n    }\n    static async verifySignature(signature, message, pubkey) {\n        await libsodium_wrappers_1.default.ready;\n        return libsodium_wrappers_1.default.crypto_sign_verify_detached(signature, message, pubkey);\n    }\n}\nexports.Ed25519 = Ed25519;\n/**\n * Nonce length in bytes for all flavours of XChaCha20.\n *\n * @see https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xchacha20#notes\n */\nexports.xchacha20NonceLength = 24;\nclass Xchacha20poly1305Ietf {\n    static async encrypt(message, key, nonce) {\n        await libsodium_wrappers_1.default.ready;\n        const additionalData = null;\n        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(message, additionalData, null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n        nonce, key);\n    }\n    static async decrypt(ciphertext, key, nonce) {\n        await libsodium_wrappers_1.default.ready;\n        const additionalData = null;\n        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n        ciphertext, additionalData, nonce, key);\n    }\n}\nexports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;\n//# sourceMappingURL=libsodium.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvbGlic29kaXVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyw0QkFBNEIsR0FBRyxlQUFlLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCLEdBQUcseUJBQXlCO0FBQ3RKLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFlO0FBQ3ZDLDZDQUE2QyxtQkFBTyxDQUFDLHNHQUFvQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsd0JBQXdCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvY3J5cHRvL2J1aWxkL2xpYnNvZGl1bS5qcz9hOTI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gS2VlcCBhbGwgY2xhc3NlcyByZXF1aXJpbmcgbGlic29kaXVtLWpzIGluIG9uZSBmaWxlIGFzIGhhdmluZyBtdWx0aXBsZVxuLy8gcmVxdWlyaW5nIG9mIHRoZSBsaWJzb2RpdW0td3JhcHBlcnMgbW9kdWxlIGN1cnJlbnRseSBjcmFzaGVzIGJyb3dzZXJzXG4vL1xuLy8gbGlic29kaXVtLmpzIEFQSTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vd2VibWFzdGVyMTI4L2IyZGJlNmQ1NGQzNmRkMTY4YzlmYWJmNDQxYjliMDljXG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlhjaGFjaGEyMHBvbHkxMzA1SWV0ZiA9IGV4cG9ydHMueGNoYWNoYTIwTm9uY2VMZW5ndGggPSBleHBvcnRzLkVkMjU1MTkgPSBleHBvcnRzLkVkMjU1MTlLZXlwYWlyID0gZXhwb3J0cy5BcmdvbjJpZCA9IGV4cG9ydHMuaXNBcmdvbjJpZE9wdGlvbnMgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBjb3NtanMvdXRpbHNcIik7XG5jb25zdCBsaWJzb2RpdW1fd3JhcHBlcnNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibGlic29kaXVtLXdyYXBwZXJzXCIpKTtcbmZ1bmN0aW9uIGlzQXJnb24yaWRPcHRpb25zKHRoaW5nKSB7XG4gICAgaWYgKCEoMCwgdXRpbHNfMS5pc05vbk51bGxPYmplY3QpKHRoaW5nKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgdGhpbmcub3V0cHV0TGVuZ3RoICE9PSBcIm51bWJlclwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiB0aGluZy5vcHNMaW1pdCAhPT0gXCJudW1iZXJcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgdGhpbmcubWVtTGltaXRLaWIgIT09IFwibnVtYmVyXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydHMuaXNBcmdvbjJpZE9wdGlvbnMgPSBpc0FyZ29uMmlkT3B0aW9ucztcbmNsYXNzIEFyZ29uMmlkIHtcbiAgICBzdGF0aWMgYXN5bmMgZXhlY3V0ZShwYXNzd29yZCwgc2FsdCwgb3B0aW9ucykge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzXzEuZGVmYXVsdC5jcnlwdG9fcHdoYXNoKG9wdGlvbnMub3V0cHV0TGVuZ3RoLCBwYXNzd29yZCwgc2FsdCwgLy8gbGlic29kaXVtIG9ubHkgc3VwcG9ydHMgMTYgYnl0ZSBzYWx0cyBhbmQgd2lsbCB0aHJvdyB3aGVuIHlvdSBkb24ndCByZXNwZWN0IHRoYXRcbiAgICAgICAgb3B0aW9ucy5vcHNMaW1pdCwgb3B0aW9ucy5tZW1MaW1pdEtpYiAqIDEwMjQsIGxpYnNvZGl1bV93cmFwcGVyc18xLmRlZmF1bHQuY3J5cHRvX3B3aGFzaF9BTEdfQVJHT04ySUQxMyk7XG4gICAgfVxufVxuZXhwb3J0cy5BcmdvbjJpZCA9IEFyZ29uMmlkO1xuY2xhc3MgRWQyNTUxOUtleXBhaXIge1xuICAgIGNvbnN0cnVjdG9yKHByaXZrZXksIHB1YmtleSkge1xuICAgICAgICB0aGlzLnByaXZrZXkgPSBwcml2a2V5O1xuICAgICAgICB0aGlzLnB1YmtleSA9IHB1YmtleTtcbiAgICB9XG4gICAgLy8gYSBsaWJzb2RpdW0gcHJpdmtleSBoYXMgdGhlIGZvcm1hdCBgPGVkMjU1MTkgcHJpdmtleT4gKyA8ZWQyNTUxOSBwdWJrZXk+YFxuICAgIHN0YXRpYyBmcm9tTGlic29kaXVtUHJpdmtleShsaWJzb2RpdW1Qcml2a2V5KSB7XG4gICAgICAgIGlmIChsaWJzb2RpdW1Qcml2a2V5Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBrZXkgbGVuZ3RoICR7bGlic29kaXVtUHJpdmtleS5sZW5ndGh9LiBNdXN0IGJlIDY0LmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRWQyNTUxOUtleXBhaXIobGlic29kaXVtUHJpdmtleS5zbGljZSgwLCAzMiksIGxpYnNvZGl1bVByaXZrZXkuc2xpY2UoMzIsIDY0KSk7XG4gICAgfVxuICAgIHRvTGlic29kaXVtUHJpdmtleSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsuLi50aGlzLnByaXZrZXksIC4uLnRoaXMucHVia2V5XSk7XG4gICAgfVxufVxuZXhwb3J0cy5FZDI1NTE5S2V5cGFpciA9IEVkMjU1MTlLZXlwYWlyO1xuY2xhc3MgRWQyNTUxOSB7XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEga2V5cGFpciBkZXRlcm1pbmlzdGljYWxseSBmcm9tIGEgZ2l2ZW4gMzIgYnl0ZXMgc2VlZC5cbiAgICAgKlxuICAgICAqIFRoaXMgc2VlZCBlcXVhbHMgdGhlIEVkMjU1MTkgcHJpdmF0ZSBrZXkuXG4gICAgICogRm9yIGltcGxlbWVudGF0aW9uIGRldGFpbHMgc2VlIGNyeXB0b19zaWduX3NlZWRfa2V5cGFpciBpblxuICAgICAqIGh0dHBzOi8vZG93bmxvYWQubGlic29kaXVtLm9yZy9kb2MvcHVibGljLWtleV9jcnlwdG9ncmFwaHkvcHVibGljLWtleV9zaWduYXR1cmVzLmh0bWxcbiAgICAgKiBhbmQgZGlhZ3JhbSBvbiBodHRwczovL2Jsb2cubW96aWxsYS5vcmcvd2FybmVyLzIwMTEvMTEvMjkvZWQyNTUxOS1rZXlzL1xuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBtYWtlS2V5cGFpcihzZWVkKSB7XG4gICAgICAgIGF3YWl0IGxpYnNvZGl1bV93cmFwcGVyc18xLmRlZmF1bHQucmVhZHk7XG4gICAgICAgIGNvbnN0IGtleXBhaXIgPSBsaWJzb2RpdW1fd3JhcHBlcnNfMS5kZWZhdWx0LmNyeXB0b19zaWduX3NlZWRfa2V5cGFpcihzZWVkKTtcbiAgICAgICAgcmV0dXJuIEVkMjU1MTlLZXlwYWlyLmZyb21MaWJzb2RpdW1Qcml2a2V5KGtleXBhaXIucHJpdmF0ZUtleSk7XG4gICAgfVxuICAgIHN0YXRpYyBhc3luYyBjcmVhdGVTaWduYXR1cmUobWVzc2FnZSwga2V5UGFpcikge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzXzEuZGVmYXVsdC5jcnlwdG9fc2lnbl9kZXRhY2hlZChtZXNzYWdlLCBrZXlQYWlyLnRvTGlic29kaXVtUHJpdmtleSgpKTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIHZlcmlmeVNpZ25hdHVyZShzaWduYXR1cmUsIG1lc3NhZ2UsIHB1YmtleSkge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzXzEuZGVmYXVsdC5jcnlwdG9fc2lnbl92ZXJpZnlfZGV0YWNoZWQoc2lnbmF0dXJlLCBtZXNzYWdlLCBwdWJrZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuRWQyNTUxOSA9IEVkMjU1MTk7XG4vKipcbiAqIE5vbmNlIGxlbmd0aCBpbiBieXRlcyBmb3IgYWxsIGZsYXZvdXJzIG9mIFhDaGFDaGEyMC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vbGlic29kaXVtLmdpdGJvb2suaW8vZG9jL2FkdmFuY2VkL3N0cmVhbV9jaXBoZXJzL3hjaGFjaGEyMCNub3Rlc1xuICovXG5leHBvcnRzLnhjaGFjaGEyME5vbmNlTGVuZ3RoID0gMjQ7XG5jbGFzcyBYY2hhY2hhMjBwb2x5MTMwNUlldGYge1xuICAgIHN0YXRpYyBhc3luYyBlbmNyeXB0KG1lc3NhZ2UsIGtleSwgbm9uY2UpIHtcbiAgICAgICAgYXdhaXQgbGlic29kaXVtX3dyYXBwZXJzXzEuZGVmYXVsdC5yZWFkeTtcbiAgICAgICAgY29uc3QgYWRkaXRpb25hbERhdGEgPSBudWxsO1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzXzEuZGVmYXVsdC5jcnlwdG9fYWVhZF94Y2hhY2hhMjBwb2x5MTMwNV9pZXRmX2VuY3J5cHQobWVzc2FnZSwgYWRkaXRpb25hbERhdGEsIG51bGwsIC8vIHNlY3JldCBub25jZTogdW51c2VkIGFuZCBzaG91bGQgYmUgbnVsbCAoaHR0cHM6Ly9kb3dubG9hZC5saWJzb2RpdW0ub3JnL2RvYy9zZWNyZXQta2V5X2NyeXB0b2dyYXBoeS9hZWFkL2NoYWNoYTIwLXBvbHkxMzA1L3hjaGFjaGEyMC1wb2x5MTMwNV9jb25zdHJ1Y3Rpb24pXG4gICAgICAgIG5vbmNlLCBrZXkpO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXksIG5vbmNlKSB7XG4gICAgICAgIGF3YWl0IGxpYnNvZGl1bV93cmFwcGVyc18xLmRlZmF1bHQucmVhZHk7XG4gICAgICAgIGNvbnN0IGFkZGl0aW9uYWxEYXRhID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGxpYnNvZGl1bV93cmFwcGVyc18xLmRlZmF1bHQuY3J5cHRvX2FlYWRfeGNoYWNoYTIwcG9seTEzMDVfaWV0Zl9kZWNyeXB0KG51bGwsIC8vIHNlY3JldCBub25jZTogdW51c2VkIGFuZCBzaG91bGQgYmUgbnVsbCAoaHR0cHM6Ly9kb3dubG9hZC5saWJzb2RpdW0ub3JnL2RvYy9zZWNyZXQta2V5X2NyeXB0b2dyYXBoeS9hZWFkL2NoYWNoYTIwLXBvbHkxMzA1L3hjaGFjaGEyMC1wb2x5MTMwNV9jb25zdHJ1Y3Rpb24pXG4gICAgICAgIGNpcGhlcnRleHQsIGFkZGl0aW9uYWxEYXRhLCBub25jZSwga2V5KTtcbiAgICB9XG59XG5leHBvcnRzLlhjaGFjaGEyMHBvbHkxMzA1SWV0ZiA9IFhjaGFjaGEyMHBvbHkxMzA1SWV0Zjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpYnNvZGl1bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/pbkdf2.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512NodeCrypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getNodeCrypto = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst pbkdf2_1 = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(ssr)/./node_modules/@noble/hashes/pbkdf2.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/sha512.js\");\n/**\n * Returns the Node.js crypto module when available and `undefined`\n * otherwise.\n *\n * Detects an unimplemented fallback module from Webpack 5 and returns\n * `undefined` in that case.\n */\nasync function getNodeCrypto() {\n    try {\n        const nodeCrypto = await Promise.resolve().then(() => __importStar(__webpack_require__(/*! crypto */ \"crypto\")));\n        // We get `Object{default: Object{}}` as a fallback when using\n        // `crypto: false` in Webpack 5, which we interprete as unavailable.\n        if (typeof nodeCrypto === \"object\" && Object.keys(nodeCrypto).length <= 1) {\n            return undefined;\n        }\n        return nodeCrypto;\n    }\n    catch {\n        return undefined;\n    }\n}\nexports.getNodeCrypto = getNodeCrypto;\nasync function getSubtle() {\n    // From Node.js 15 onwards, webcrypto is available in globalThis.\n    // In version 15 and 16 this was stored under the webcrypto key.\n    // With Node.js 17 it was moved to the same locations where browsers\n    // make it available.\n    // Loading `require(\"crypto\")` here seems unnecessary since it only\n    // causes issues with bundlers and does not increase compatibility.\n    // Browsers and Node.js 17+\n    let subtle = globalThis?.crypto?.subtle;\n    // Node.js 15+\n    if (!subtle)\n        subtle = globalThis?.crypto?.webcrypto?.subtle;\n    return subtle;\n}\nexports.getSubtle = getSubtle;\nasync function pbkdf2Sha512Subtle(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nsubtle, secret, salt, iterations, keylen) {\n    (0, utils_1.assert)(subtle, \"Argument subtle is falsy\");\n    (0, utils_1.assert)(typeof subtle === \"object\", \"Argument subtle is not of type object\");\n    (0, utils_1.assert)(typeof subtle.importKey === \"function\", \"subtle.importKey is not a function\");\n    (0, utils_1.assert)(typeof subtle.deriveBits === \"function\", \"subtle.deriveBits is not a function\");\n    return subtle.importKey(\"raw\", secret, { name: \"PBKDF2\" }, false, [\"deriveBits\"]).then((key) => subtle\n        .deriveBits({\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: iterations,\n        hash: { name: \"SHA-512\" },\n    }, key, keylen * 8)\n        .then((buffer) => new Uint8Array(buffer)));\n}\nexports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;\n/**\n * Implements pbkdf2-sha512 using the Node.js crypro module (`import \"crypto\"`).\n * This does not use subtle from [Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Crypto).\n */\nasync function pbkdf2Sha512NodeCrypto(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nnodeCrypto, secret, salt, iterations, keylen) {\n    (0, utils_1.assert)(nodeCrypto, \"Argument nodeCrypto is falsy\");\n    (0, utils_1.assert)(typeof nodeCrypto === \"object\", \"Argument nodeCrypto is not of type object\");\n    (0, utils_1.assert)(typeof nodeCrypto.pbkdf2 === \"function\", \"nodeCrypto.pbkdf2 is not a function\");\n    return new Promise((resolve, reject) => {\n        nodeCrypto.pbkdf2(secret, salt, iterations, keylen, \"sha512\", (error, result) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(Uint8Array.from(result));\n            }\n        });\n    });\n}\nexports.pbkdf2Sha512NodeCrypto = pbkdf2Sha512NodeCrypto;\nasync function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, { c: iterations, dkLen: keylen });\n}\nexports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;\n/**\n * A pbkdf2 implementation for BIP39. This is not exported at package level and thus a private API.\n */\nasync function pbkdf2Sha512(secret, salt, iterations, keylen) {\n    const subtle = await getSubtle();\n    if (subtle) {\n        return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);\n    }\n    else {\n        const nodeCrypto = await getNodeCrypto();\n        if (nodeCrypto) {\n            return pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen);\n        }\n        else {\n            return pbkdf2Sha512Noble(secret, salt, iterations, keylen);\n        }\n    }\n}\nexports.pbkdf2Sha512 = pbkdf2Sha512;\n//# sourceMappingURL=pbkdf2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/random.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/random.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Random = void 0;\nclass Random {\n    /**\n     * Returns `count` cryptographically secure random bytes\n     */\n    static getBytes(count) {\n        try {\n            const globalObject = typeof window === \"object\" ? window : self;\n            const cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n            const out = new Uint8Array(count);\n            cryptoApi.getRandomValues(out);\n            return out;\n        }\n        catch {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const crypto = __webpack_require__(/*! crypto */ \"crypto\");\n                return new Uint8Array([...crypto.randomBytes(count)]);\n            }\n            catch {\n                throw new Error(\"No secure random number generator found\");\n            }\n        }\n    }\n}\nexports.Random = Random;\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvY3J5cHRvL2J1aWxkL3JhbmRvbS5qcz8xMzk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SYW5kb20gPSB2b2lkIDA7XG5jbGFzcyBSYW5kb20ge1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYGNvdW50YCBjcnlwdG9ncmFwaGljYWxseSBzZWN1cmUgcmFuZG9tIGJ5dGVzXG4gICAgICovXG4gICAgc3RhdGljIGdldEJ5dGVzKGNvdW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBnbG9iYWxPYmplY3QgPSB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiID8gd2luZG93IDogc2VsZjtcbiAgICAgICAgICAgIGNvbnN0IGNyeXB0b0FwaSA9IHR5cGVvZiBnbG9iYWxPYmplY3QuY3J5cHRvICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsT2JqZWN0LmNyeXB0byA6IGdsb2JhbE9iamVjdC5tc0NyeXB0bztcbiAgICAgICAgICAgIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KGNvdW50KTtcbiAgICAgICAgICAgIGNyeXB0b0FwaS5nZXRSYW5kb21WYWx1ZXMob3V0KTtcbiAgICAgICAgICAgIHJldHVybiBvdXQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xuICAgICAgICAgICAgICAgIGNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsuLi5jcnlwdG8ucmFuZG9tQnl0ZXMoY291bnQpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gc2VjdXJlIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9yIGZvdW5kXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5SYW5kb20gPSBSYW5kb207XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYW5kb20uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/ripemd.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ripemd160 = exports.Ripemd160 = void 0;\nconst ripemd160_1 = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(ssr)/./node_modules/@noble/hashes/ripemd160.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Ripemd160 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = ripemd160_1.ripemd160.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Ripemd160 = Ripemd160;\n/** Convenience function equivalent to `new Ripemd160(data).digest()` */\nfunction ripemd160(data) {\n    return new Ripemd160(data).digest();\n}\nexports.ripemd160 = ripemd160;\n//# sourceMappingURL=ripemd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmlwZW1kLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQyxnRkFBeUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmlwZW1kLmpzPzJjYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJpcGVtZDE2MCA9IGV4cG9ydHMuUmlwZW1kMTYwID0gdm9pZCAwO1xuY29uc3QgcmlwZW1kMTYwXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9yaXBlbWQxNjBcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jbGFzcyBSaXBlbWQxNjAge1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0RGF0YSkge1xuICAgICAgICB0aGlzLmJsb2NrU2l6ZSA9IDUxMiAvIDg7XG4gICAgICAgIHRoaXMuaW1wbCA9IHJpcGVtZDE2MF8xLnJpcGVtZDE2MC5jcmVhdGUoKTtcbiAgICAgICAgaWYgKGZpcnN0RGF0YSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGUoZmlyc3REYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICB0aGlzLmltcGwudXBkYXRlKCgwLCB1dGlsc18xLnRvUmVhbFVpbnQ4QXJyYXkpKGRhdGEpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5kaWdlc3QoKTtcbiAgICB9XG59XG5leHBvcnRzLlJpcGVtZDE2MCA9IFJpcGVtZDE2MDtcbi8qKiBDb252ZW5pZW5jZSBmdW5jdGlvbiBlcXVpdmFsZW50IHRvIGBuZXcgUmlwZW1kMTYwKGRhdGEpLmRpZ2VzdCgpYCAqL1xuZnVuY3Rpb24gcmlwZW1kMTYwKGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFJpcGVtZDE2MChkYXRhKS5kaWdlc3QoKTtcbn1cbmV4cG9ydHMucmlwZW1kMTYwID0gcmlwZW1kMTYwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmlwZW1kLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1 = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\");\nconst secp256k1 = new elliptic_1.default.ec(\"secp256k1\");\nconst secp256k1N = new bn_js_1.default(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", \"hex\");\nclass Secp256k1 {\n    /**\n     * Takes a 32 byte private key and returns a privkey/pubkey pair.\n     *\n     * The resulting pubkey is uncompressed. For the use in Cosmos it should\n     * be compressed first using `Secp256k1.compressPubkey`.\n     */\n    static async makeKeypair(privkey) {\n        if (privkey.length !== 32) {\n            // is this check missing in secp256k1.validatePrivateKey?\n            // https://github.com/bitjson/bitcoin-ts/issues/4\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        const keypair = secp256k1.keyFromPrivate(privkey);\n        if (keypair.validate().result !== true) {\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        // range test that is not part of the elliptic implementation\n        const privkeyAsBigInteger = new bn_js_1.default(privkey);\n        if (privkeyAsBigInteger.gte(secp256k1N)) {\n            // not strictly smaller than N\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        const out = {\n            privkey: (0, encoding_1.fromHex)(keypair.getPrivate(\"hex\")),\n            // encodes uncompressed as\n            // - 1-byte prefix \"04\"\n            // - 32-byte x coordinate\n            // - 32-byte y coordinate\n            pubkey: Uint8Array.from(keypair.getPublic(\"array\")),\n        };\n        return out;\n    }\n    /**\n     * Creates a signature that is\n     * - deterministic (RFC 6979)\n     * - lowS signature\n     * - DER encoded\n     */\n    static async createSignature(messageHash, privkey) {\n        if (messageHash.length === 0) {\n            throw new Error(\"Message hash must not be empty\");\n        }\n        if (messageHash.length > 32) {\n            throw new Error(\"Message hash length must not exceed 32 bytes\");\n        }\n        const keypair = secp256k1.keyFromPrivate(privkey);\n        // the `canonical` option ensures creation of lowS signature representations\n        const { r, s, recoveryParam } = keypair.sign(messageHash, { canonical: true });\n        if (typeof recoveryParam !== \"number\")\n            throw new Error(\"Recovery param missing\");\n        return new secp256k1signature_1.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s.toArray()), recoveryParam);\n    }\n    static async verifySignature(signature, messageHash, pubkey) {\n        if (messageHash.length === 0) {\n            throw new Error(\"Message hash must not be empty\");\n        }\n        if (messageHash.length > 32) {\n            throw new Error(\"Message hash length must not exceed 32 bytes\");\n        }\n        const keypair = secp256k1.keyFromPublic(pubkey);\n        // From https://github.com/indutny/elliptic:\n        //\n        //     Sign the message's hash (input must be an array, or a hex-string)\n        //\n        //     Signature MUST be either:\n        //     1) DER-encoded signature as hex-string; or\n        //     2) DER-encoded signature as buffer; or\n        //     3) object with two hex-string properties (r and s); or\n        //     4) object with two buffer properties (r and s)\n        //\n        // Uint8Array is not a Buffer, but elliptic seems to be happy with the interface\n        // common to both types. Uint8Array is not an array of ints but the interface is\n        // similar\n        try {\n            return keypair.verify(messageHash, signature.toDer());\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    static recoverPubkey(signature, messageHash) {\n        const signatureForElliptic = { r: (0, encoding_1.toHex)(signature.r()), s: (0, encoding_1.toHex)(signature.s()) };\n        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);\n        const keypair = secp256k1.keyFromPublic(point);\n        return (0, encoding_1.fromHex)(keypair.getPublic(false, \"hex\"));\n    }\n    /**\n     * Takes a compressed or uncompressed pubkey and return a compressed one.\n     *\n     * This function is idempotent.\n     */\n    static compressPubkey(pubkey) {\n        switch (pubkey.length) {\n            case 33:\n                return pubkey;\n            case 65:\n                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, \"array\"));\n            default:\n                throw new Error(\"Invalid pubkey length\");\n        }\n    }\n    /**\n     * Takes a compressed or uncompressed pubkey and returns an uncompressed one.\n     *\n     * This function is idempotent.\n     */\n    static uncompressPubkey(pubkey) {\n        switch (pubkey.length) {\n            case 33:\n                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(false, \"array\"));\n            case 65:\n                return pubkey;\n            default:\n                throw new Error(\"Invalid pubkey length\");\n        }\n    }\n    static trimRecoveryByte(signature) {\n        switch (signature.length) {\n            case 64:\n                return signature;\n            case 65:\n                return signature.slice(0, 64);\n            default:\n                throw new Error(\"Invalid signature length\");\n        }\n    }\n}\nexports.Secp256k1 = Secp256k1;\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1signature.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;\nfunction trimLeadingNullBytes(inData) {\n    let numberOfLeadingNullBytes = 0;\n    for (const byte of inData) {\n        if (byte === 0x00) {\n            numberOfLeadingNullBytes++;\n        }\n        else {\n            break;\n        }\n    }\n    return inData.slice(numberOfLeadingNullBytes);\n}\nconst derTagInteger = 0x02;\nclass Secp256k1Signature {\n    constructor(r, s) {\n        if (r.length > 32 || r.length === 0 || r[0] === 0x00) {\n            throw new Error(\"Unsigned integer r must be encoded as unpadded big endian.\");\n        }\n        if (s.length > 32 || s.length === 0 || s[0] === 0x00) {\n            throw new Error(\"Unsigned integer s must be encoded as unpadded big endian.\");\n        }\n        this.data = {\n            r: r,\n            s: s,\n        };\n    }\n    /**\n     * Takes the pair of integers (r, s) as 2x32 byte of binary data.\n     *\n     * Note: This is the format Cosmos SDK uses natively.\n     *\n     * @param data a 64 byte value containing integers r and s.\n     */\n    static fromFixedLength(data) {\n        if (data.length !== 64) {\n            throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);\n        }\n        return new Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));\n    }\n    static fromDer(data) {\n        let pos = 0;\n        if (data[pos++] !== 0x30) {\n            throw new Error(\"Prefix 0x30 expected\");\n        }\n        const bodyLength = data[pos++];\n        if (data.length - pos !== bodyLength) {\n            throw new Error(\"Data length mismatch detected\");\n        }\n        // r\n        const rTag = data[pos++];\n        if (rTag !== derTagInteger) {\n            throw new Error(\"INTEGER tag expected\");\n        }\n        const rLength = data[pos++];\n        if (rLength >= 0x80) {\n            throw new Error(\"Decoding length values above 127 not supported\");\n        }\n        const rData = data.slice(pos, pos + rLength);\n        pos += rLength;\n        // s\n        const sTag = data[pos++];\n        if (sTag !== derTagInteger) {\n            throw new Error(\"INTEGER tag expected\");\n        }\n        const sLength = data[pos++];\n        if (sLength >= 0x80) {\n            throw new Error(\"Decoding length values above 127 not supported\");\n        }\n        const sData = data.slice(pos, pos + sLength);\n        pos += sLength;\n        return new Secp256k1Signature(\n        // r/s data can contain leading 0 bytes to express integers being non-negative in DER\n        trimLeadingNullBytes(rData), trimLeadingNullBytes(sData));\n    }\n    r(length) {\n        if (length === undefined) {\n            return this.data.r;\n        }\n        else {\n            const paddingLength = length - this.data.r.length;\n            if (paddingLength < 0) {\n                throw new Error(\"Length too small to hold parameter r\");\n            }\n            const padding = new Uint8Array(paddingLength);\n            return new Uint8Array([...padding, ...this.data.r]);\n        }\n    }\n    s(length) {\n        if (length === undefined) {\n            return this.data.s;\n        }\n        else {\n            const paddingLength = length - this.data.s.length;\n            if (paddingLength < 0) {\n                throw new Error(\"Length too small to hold parameter s\");\n            }\n            const padding = new Uint8Array(paddingLength);\n            return new Uint8Array([...padding, ...this.data.s]);\n        }\n    }\n    toFixedLength() {\n        return new Uint8Array([...this.r(32), ...this.s(32)]);\n    }\n    toDer() {\n        // DER supports negative integers but our data is unsigned. Thus we need to prepend\n        // a leading 0 byte when the higest bit is set to differentiate nagative values\n        const rEncoded = this.data.r[0] >= 0x80 ? new Uint8Array([0, ...this.data.r]) : this.data.r;\n        const sEncoded = this.data.s[0] >= 0x80 ? new Uint8Array([0, ...this.data.s]) : this.data.s;\n        const rLength = rEncoded.length;\n        const sLength = sEncoded.length;\n        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);\n        return new Uint8Array([0x30, data.length, ...data]);\n    }\n}\nexports.Secp256k1Signature = Secp256k1Signature;\n/**\n * A Secp256k1Signature plus the recovery parameter\n */\nclass ExtendedSecp256k1Signature extends Secp256k1Signature {\n    constructor(r, s, recovery) {\n        super(r, s);\n        if (!Number.isInteger(recovery)) {\n            throw new Error(\"The recovery parameter must be an integer.\");\n        }\n        if (recovery < 0 || recovery > 4) {\n            throw new Error(\"The recovery parameter must be one of 0, 1, 2, 3.\");\n        }\n        this.recovery = recovery;\n    }\n    /**\n     * Decode extended signature from the simple fixed length encoding\n     * described in toFixedLength().\n     */\n    static fromFixedLength(data) {\n        if (data.length !== 65) {\n            throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);\n        }\n        return new ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);\n    }\n    /**\n     * A simple custom encoding that encodes the extended signature as\n     * r (32 bytes) | s (32 bytes) | recovery param (1 byte)\n     * where | denotes concatenation of bonary data.\n     */\n    toFixedLength() {\n        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);\n    }\n}\nexports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;\n//# sourceMappingURL=secp256k1signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/sha.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/sha.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/sha512.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Sha256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha256_1.sha256.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Sha256 = Sha256;\n/** Convenience function equivalent to `new Sha256(data).digest()` */\nfunction sha256(data) {\n    return new Sha256(data).digest();\n}\nexports.sha256 = sha256;\nclass Sha512 {\n    constructor(firstData) {\n        this.blockSize = 1024 / 8;\n        this.impl = sha512_1.sha512.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Sha512 = Sha512;\n/** Convenience function equivalent to `new Sha512(data).digest()` */\nfunction sha512(data) {\n    return new Sha512(data).digest();\n}\nexports.sha512 = sha512;\n//# sourceMappingURL=sha.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvc2hhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGNBQWM7QUFDakUsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFzQjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2NyeXB0by9idWlsZC9zaGEuanM/YTdkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2hhNTEyID0gZXhwb3J0cy5TaGE1MTIgPSBleHBvcnRzLnNoYTI1NiA9IGV4cG9ydHMuU2hhMjU2ID0gdm9pZCAwO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5jb25zdCBzaGE1MTJfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTUxMlwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNsYXNzIFNoYTI1NiB7XG4gICAgY29uc3RydWN0b3IoZmlyc3REYXRhKSB7XG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gNTEyIC8gODtcbiAgICAgICAgdGhpcy5pbXBsID0gc2hhMjU2XzEuc2hhMjU2LmNyZWF0ZSgpO1xuICAgICAgICBpZiAoZmlyc3REYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZShmaXJzdERhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIHRoaXMuaW1wbC51cGRhdGUoKDAsIHV0aWxzXzEudG9SZWFsVWludDhBcnJheSkoZGF0YSkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbXBsLmRpZ2VzdCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuU2hhMjU2ID0gU2hhMjU2O1xuLyoqIENvbnZlbmllbmNlIGZ1bmN0aW9uIGVxdWl2YWxlbnQgdG8gYG5ldyBTaGEyNTYoZGF0YSkuZGlnZXN0KClgICovXG5mdW5jdGlvbiBzaGEyNTYoZGF0YSkge1xuICAgIHJldHVybiBuZXcgU2hhMjU2KGRhdGEpLmRpZ2VzdCgpO1xufVxuZXhwb3J0cy5zaGEyNTYgPSBzaGEyNTY7XG5jbGFzcyBTaGE1MTIge1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0RGF0YSkge1xuICAgICAgICB0aGlzLmJsb2NrU2l6ZSA9IDEwMjQgLyA4O1xuICAgICAgICB0aGlzLmltcGwgPSBzaGE1MTJfMS5zaGE1MTIuY3JlYXRlKCk7XG4gICAgICAgIGlmIChmaXJzdERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKGZpcnN0RGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgdGhpcy5pbXBsLnVwZGF0ZSgoMCwgdXRpbHNfMS50b1JlYWxVaW50OEFycmF5KShkYXRhKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltcGwuZGlnZXN0KCk7XG4gICAgfVxufVxuZXhwb3J0cy5TaGE1MTIgPSBTaGE1MTI7XG4vKiogQ29udmVuaWVuY2UgZnVuY3Rpb24gZXF1aXZhbGVudCB0byBgbmV3IFNoYTUxMihkYXRhKS5kaWdlc3QoKWAgKi9cbmZ1bmN0aW9uIHNoYTUxMihkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBTaGE1MTIoZGF0YSkuZGlnZXN0KCk7XG59XG5leHBvcnRzLnNoYTUxMiA9IHNoYTUxMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/slip10.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst hmac_1 = __webpack_require__(/*! ./hmac */ \"(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\");\nconst sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\n/**\n * Raw values must match the curve string in SLIP-0010 master key generation\n *\n * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md#master-key-generation\n */\nvar Slip10Curve;\n(function (Slip10Curve) {\n    Slip10Curve[\"Secp256k1\"] = \"Bitcoin seed\";\n    Slip10Curve[\"Ed25519\"] = \"ed25519 seed\";\n})(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));\n/**\n * Reverse mapping of Slip10Curve\n */\nfunction slip10CurveFromString(curveString) {\n    switch (curveString) {\n        case Slip10Curve.Ed25519:\n            return Slip10Curve.Ed25519;\n        case Slip10Curve.Secp256k1:\n            return Slip10Curve.Secp256k1;\n        default:\n            throw new Error(`Unknown curve string: '${curveString}'`);\n    }\n}\nexports.slip10CurveFromString = slip10CurveFromString;\nclass Slip10RawIndex extends math_1.Uint32 {\n    static hardened(hardenedIndex) {\n        return new Slip10RawIndex(hardenedIndex + 2 ** 31);\n    }\n    static normal(normalIndex) {\n        return new Slip10RawIndex(normalIndex);\n    }\n    isHardened() {\n        return this.data >= 2 ** 31;\n    }\n}\nexports.Slip10RawIndex = Slip10RawIndex;\nconst secp256k1 = new elliptic_1.default.ec(\"secp256k1\");\n// Universal private key derivation accoring to\n// https://github.com/satoshilabs/slips/blob/master/slip-0010.md\nclass Slip10 {\n    static derivePath(curve, seed, path) {\n        let result = this.master(curve, seed);\n        for (const rawIndex of path) {\n            result = this.child(curve, result.privkey, result.chainCode, rawIndex);\n        }\n        return result;\n    }\n    static master(curve, seed) {\n        const i = new hmac_1.Hmac(sha_1.Sha512, (0, encoding_1.toAscii)(curve)).update(seed).digest();\n        const il = i.slice(0, 32);\n        const ir = i.slice(32, 64);\n        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {\n            return this.master(curve, i);\n        }\n        return {\n            chainCode: ir,\n            privkey: il,\n        };\n    }\n    static child(curve, parentPrivkey, parentChainCode, rawIndex) {\n        let i;\n        if (rawIndex.isHardened()) {\n            const payload = new Uint8Array([0x00, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);\n            i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(payload).digest();\n        }\n        else {\n            if (curve === Slip10Curve.Ed25519) {\n                throw new Error(\"Normal keys are not allowed with ed25519\");\n            }\n            else {\n                // Step 1 of https://github.com/satoshilabs/slips/blob/master/slip-0010.md#private-parent-key--private-child-key\n                // Calculate I = HMAC-SHA512(Key = c_par, Data = ser_P(point(k_par)) || ser_32(i)).\n                // where the functions point() and ser_p() are defined in BIP-0032\n                const data = new Uint8Array([\n                    ...Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),\n                    ...rawIndex.toBytesBigEndian(),\n                ]);\n                i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(data).digest();\n            }\n        }\n        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);\n    }\n    /**\n     * Implementation of ser_P(point(k_par)) from BIP-0032\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n     */\n    static serializedPoint(curve, p) {\n        switch (curve) {\n            case Slip10Curve.Secp256k1:\n                return (0, encoding_1.fromHex)(secp256k1.g.mul(p).encodeCompressed(\"hex\"));\n            default:\n                throw new Error(\"curve not supported\");\n        }\n    }\n    static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {\n        // step 2 (of the Private parent key → private child key algorithm)\n        const il = i.slice(0, 32);\n        const ir = i.slice(32, 64);\n        // step 3\n        const returnChainCode = ir;\n        // step 4\n        if (curve === Slip10Curve.Ed25519) {\n            return {\n                chainCode: returnChainCode,\n                privkey: il,\n            };\n        }\n        // step 5\n        const n = this.n(curve);\n        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n);\n        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray(\"be\", 32));\n        // step 6\n        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {\n            const newI = new hmac_1.Hmac(sha_1.Sha512, parentChainCode)\n                .update(new Uint8Array([0x01, ...ir, ...rawIndex.toBytesBigEndian()]))\n                .digest();\n            return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);\n        }\n        // step 7\n        return {\n            chainCode: returnChainCode,\n            privkey: returnChildKey,\n        };\n    }\n    static isZero(privkey) {\n        return privkey.every((byte) => byte === 0);\n    }\n    static isGteN(curve, privkey) {\n        const keyAsNumber = new bn_js_1.default(privkey);\n        return keyAsNumber.gte(this.n(curve));\n    }\n    static n(curve) {\n        switch (curve) {\n            case Slip10Curve.Secp256k1:\n                return new bn_js_1.default(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16);\n            default:\n                throw new Error(\"curve not supported\");\n        }\n    }\n}\nexports.Slip10 = Slip10;\nfunction pathToString(path) {\n    return path.reduce((current, component) => {\n        const componentString = component.isHardened()\n            ? `${component.toNumber() - 2 ** 31}'`\n            : component.toString();\n        return current + \"/\" + componentString;\n    }, \"m\");\n}\nexports.pathToString = pathToString;\nfunction stringToPath(input) {\n    if (!input.startsWith(\"m\"))\n        throw new Error(\"Path string must start with 'm'\");\n    let rest = input.slice(1);\n    const out = new Array();\n    while (rest) {\n        const match = rest.match(/^\\/([0-9]+)('?)/);\n        if (!match)\n            throw new Error(\"Syntax error while reading path component\");\n        const [fullMatch, numberString, apostrophe] = match;\n        const value = math_1.Uint53.fromString(numberString).toNumber();\n        if (value >= 2 ** 31)\n            throw new Error(\"Component value too high. Must not exceed 2**31-1.\");\n        if (apostrophe)\n            out.push(Slip10RawIndex.hardened(value));\n        else\n            out.push(Slip10RawIndex.normal(value));\n        rest = rest.slice(fullMatch.length);\n    }\n    return out;\n}\nexports.stringToPath = stringToPath;\n//# sourceMappingURL=slip10.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toRealUint8Array = void 0;\n// See https://github.com/paulmillr/noble-hashes/issues/25 for why this is needed\nfunction toRealUint8Array(data) {\n    if (data instanceof Uint8Array)\n        return data;\n    else\n        return Uint8Array.from(data);\n}\nexports.toRealUint8Array = toRealUint8Array;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvY3J5cHRvL2J1aWxkL3V0aWxzLmpzP2QyN2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvUmVhbFVpbnQ4QXJyYXkgPSB2b2lkIDA7XG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1oYXNoZXMvaXNzdWVzLzI1IGZvciB3aHkgdGhpcyBpcyBuZWVkZWRcbmZ1bmN0aW9uIHRvUmVhbFVpbnQ4QXJyYXkoZGF0YSkge1xuICAgIGlmIChkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheSlcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgZWxzZVxuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKGRhdGEpO1xufVxuZXhwb3J0cy50b1JlYWxVaW50OEFycmF5ID0gdG9SZWFsVWludDhBcnJheTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/ascii.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromAscii = exports.toAscii = void 0;\nfunction toAscii(input) {\n    const toNums = (str) => str.split(\"\").map((x) => {\n        const charCode = x.charCodeAt(0);\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (charCode < 0x20 || charCode > 0x7e) {\n            throw new Error(\"Cannot encode character that is out of printable ASCII range: \" + charCode);\n        }\n        return charCode;\n    });\n    return Uint8Array.from(toNums(input));\n}\nexports.toAscii = toAscii;\nfunction fromAscii(data) {\n    const fromNums = (listOfNumbers) => listOfNumbers.map((x) => {\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (x < 0x20 || x > 0x7e) {\n            throw new Error(\"Cannot decode character that is out of printable ASCII range: \" + x);\n        }\n        return String.fromCharCode(x);\n    });\n    return fromNums(Array.from(data)).join(\"\");\n}\nexports.fromAscii = fromAscii;\n//# sourceMappingURL=ascii.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9hc2NpaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvZW5jb2RpbmcvYnVpbGQvYXNjaWkuanM/YTJhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbUFzY2lpID0gZXhwb3J0cy50b0FzY2lpID0gdm9pZCAwO1xuZnVuY3Rpb24gdG9Bc2NpaShpbnB1dCkge1xuICAgIGNvbnN0IHRvTnVtcyA9IChzdHIpID0+IHN0ci5zcGxpdChcIlwiKS5tYXAoKHgpID0+IHtcbiAgICAgICAgY29uc3QgY2hhckNvZGUgPSB4LmNoYXJDb2RlQXQoMCk7XG4gICAgICAgIC8vIDB4MDDigJMweDFGIGNvbnRyb2wgY2hhcmFjdGVyc1xuICAgICAgICAvLyAweDIw4oCTMHg3RSBwcmludGFibGUgY2hhcmFjdGVyc1xuICAgICAgICAvLyAweDdGIGRlbGV0ZSBjaGFyYWN0ZXJcbiAgICAgICAgLy8gMHg4MOKAkzB4RkYgb3V0IG9mIDcgYml0IGFzY2lpIHJhbmdlXG4gICAgICAgIGlmIChjaGFyQ29kZSA8IDB4MjAgfHwgY2hhckNvZGUgPiAweDdlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZW5jb2RlIGNoYXJhY3RlciB0aGF0IGlzIG91dCBvZiBwcmludGFibGUgQVNDSUkgcmFuZ2U6IFwiICsgY2hhckNvZGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjaGFyQ29kZTtcbiAgICB9KTtcbiAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKHRvTnVtcyhpbnB1dCkpO1xufVxuZXhwb3J0cy50b0FzY2lpID0gdG9Bc2NpaTtcbmZ1bmN0aW9uIGZyb21Bc2NpaShkYXRhKSB7XG4gICAgY29uc3QgZnJvbU51bXMgPSAobGlzdE9mTnVtYmVycykgPT4gbGlzdE9mTnVtYmVycy5tYXAoKHgpID0+IHtcbiAgICAgICAgLy8gMHgwMOKAkzB4MUYgY29udHJvbCBjaGFyYWN0ZXJzXG4gICAgICAgIC8vIDB4MjDigJMweDdFIHByaW50YWJsZSBjaGFyYWN0ZXJzXG4gICAgICAgIC8vIDB4N0YgZGVsZXRlIGNoYXJhY3RlclxuICAgICAgICAvLyAweDgw4oCTMHhGRiBvdXQgb2YgNyBiaXQgYXNjaWkgcmFuZ2VcbiAgICAgICAgaWYgKHggPCAweDIwIHx8IHggPiAweDdlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZGVjb2RlIGNoYXJhY3RlciB0aGF0IGlzIG91dCBvZiBwcmludGFibGUgQVNDSUkgcmFuZ2U6IFwiICsgeCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoeCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZyb21OdW1zKEFycmF5LmZyb20oZGF0YSkpLmpvaW4oXCJcIik7XG59XG5leHBvcnRzLmZyb21Bc2NpaSA9IGZyb21Bc2NpaTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzY2lpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/base64.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromBase64 = exports.toBase64 = void 0;\nconst base64js = __importStar(__webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\"));\nfunction toBase64(data) {\n    return base64js.fromByteArray(data);\n}\nexports.toBase64 = toBase64;\nfunction fromBase64(base64String) {\n    if (!base64String.match(/^[a-zA-Z0-9+/]*={0,2}$/)) {\n        throw new Error(\"Invalid base64 string format\");\n    }\n    return base64js.toByteArray(base64String);\n}\nexports.fromBase64 = fromBase64;\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iYXNlNjQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGdCQUFnQjtBQUNyQyw4QkFBOEIsbUJBQU8sQ0FBQywwREFBVztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSw4Q0FBOEMsSUFBSTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL2Jhc2U2NC5qcz81OTUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21CYXNlNjQgPSBleHBvcnRzLnRvQmFzZTY0ID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0anMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcImJhc2U2NC1qc1wiKSk7XG5mdW5jdGlvbiB0b0Jhc2U2NChkYXRhKSB7XG4gICAgcmV0dXJuIGJhc2U2NGpzLmZyb21CeXRlQXJyYXkoZGF0YSk7XG59XG5leHBvcnRzLnRvQmFzZTY0ID0gdG9CYXNlNjQ7XG5mdW5jdGlvbiBmcm9tQmFzZTY0KGJhc2U2NFN0cmluZykge1xuICAgIGlmICghYmFzZTY0U3RyaW5nLm1hdGNoKC9eW2EtekEtWjAtOSsvXSo9ezAsMn0kLykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiYXNlNjQgc3RyaW5nIGZvcm1hdFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGJhc2U2NGpzLnRvQnl0ZUFycmF5KGJhc2U2NFN0cmluZyk7XG59XG5leHBvcnRzLmZyb21CYXNlNjQgPSBmcm9tQmFzZTY0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/bech32.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalizeBech32 = exports.fromBech32 = exports.toBech32 = void 0;\nconst bech32 = __importStar(__webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/bech32/index.js\"));\nfunction toBech32(prefix, data, limit) {\n    const address = bech32.encode(prefix, bech32.toWords(data), limit);\n    return address;\n}\nexports.toBech32 = toBech32;\nfunction fromBech32(address, limit = Infinity) {\n    const decodedAddress = bech32.decode(address, limit);\n    return {\n        prefix: decodedAddress.prefix,\n        data: new Uint8Array(bech32.fromWords(decodedAddress.words)),\n    };\n}\nexports.fromBech32 = fromBech32;\n/**\n * Takes a bech32 address and returns a normalized (i.e. lower case) representation of it.\n *\n * The input is validated along the way, which makes this significantly safer than\n * using `address.toLowerCase()`.\n */\nfunction normalizeBech32(address) {\n    const { prefix, data } = fromBech32(address);\n    return toBech32(prefix, data);\n}\nexports.normalizeBech32 = normalizeBech32;\n//# sourceMappingURL=bech32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iZWNoMzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQixHQUFHLGdCQUFnQjtBQUMvRCw0QkFBNEIsbUJBQU8sQ0FBQyxvREFBUTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvZW5jb2RpbmcvYnVpbGQvYmVjaDMyLmpzPzdiYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubm9ybWFsaXplQmVjaDMyID0gZXhwb3J0cy5mcm9tQmVjaDMyID0gZXhwb3J0cy50b0JlY2gzMiA9IHZvaWQgMDtcbmNvbnN0IGJlY2gzMiA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiYmVjaDMyXCIpKTtcbmZ1bmN0aW9uIHRvQmVjaDMyKHByZWZpeCwgZGF0YSwgbGltaXQpIHtcbiAgICBjb25zdCBhZGRyZXNzID0gYmVjaDMyLmVuY29kZShwcmVmaXgsIGJlY2gzMi50b1dvcmRzKGRhdGEpLCBsaW1pdCk7XG4gICAgcmV0dXJuIGFkZHJlc3M7XG59XG5leHBvcnRzLnRvQmVjaDMyID0gdG9CZWNoMzI7XG5mdW5jdGlvbiBmcm9tQmVjaDMyKGFkZHJlc3MsIGxpbWl0ID0gSW5maW5pdHkpIHtcbiAgICBjb25zdCBkZWNvZGVkQWRkcmVzcyA9IGJlY2gzMi5kZWNvZGUoYWRkcmVzcywgbGltaXQpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByZWZpeDogZGVjb2RlZEFkZHJlc3MucHJlZml4LFxuICAgICAgICBkYXRhOiBuZXcgVWludDhBcnJheShiZWNoMzIuZnJvbVdvcmRzKGRlY29kZWRBZGRyZXNzLndvcmRzKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuZnJvbUJlY2gzMiA9IGZyb21CZWNoMzI7XG4vKipcbiAqIFRha2VzIGEgYmVjaDMyIGFkZHJlc3MgYW5kIHJldHVybnMgYSBub3JtYWxpemVkIChpLmUuIGxvd2VyIGNhc2UpIHJlcHJlc2VudGF0aW9uIG9mIGl0LlxuICpcbiAqIFRoZSBpbnB1dCBpcyB2YWxpZGF0ZWQgYWxvbmcgdGhlIHdheSwgd2hpY2ggbWFrZXMgdGhpcyBzaWduaWZpY2FudGx5IHNhZmVyIHRoYW5cbiAqIHVzaW5nIGBhZGRyZXNzLnRvTG93ZXJDYXNlKClgLlxuICovXG5mdW5jdGlvbiBub3JtYWxpemVCZWNoMzIoYWRkcmVzcykge1xuICAgIGNvbnN0IHsgcHJlZml4LCBkYXRhIH0gPSBmcm9tQmVjaDMyKGFkZHJlc3MpO1xuICAgIHJldHVybiB0b0JlY2gzMihwcmVmaXgsIGRhdGEpO1xufVxuZXhwb3J0cy5ub3JtYWxpemVCZWNoMzIgPSBub3JtYWxpemVCZWNoMzI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZWNoMzIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/hex.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/hex.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromHex = exports.toHex = void 0;\nfunction toHex(data) {\n    let out = \"\";\n    for (const byte of data) {\n        out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n    return out;\n}\nexports.toHex = toHex;\nfunction fromHex(hexstring) {\n    if (hexstring.length % 2 !== 0) {\n        throw new Error(\"hex string length must be a multiple of 2\");\n    }\n    const out = new Uint8Array(hexstring.length / 2);\n    for (let i = 0; i < out.length; i++) {\n        const j = 2 * i;\n        const hexByteAsString = hexstring.slice(j, j + 2);\n        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n            throw new Error(\"hex string contains invalid characters\");\n        }\n        out[i] = parseInt(hexByteAsString, 16);\n    }\n    return out;\n}\nexports.fromHex = fromHex;\n//# sourceMappingURL=hex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9oZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGFBQWE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBLDZDQUE2QyxFQUFFO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL2hleC5qcz9jNmQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tSGV4ID0gZXhwb3J0cy50b0hleCA9IHZvaWQgMDtcbmZ1bmN0aW9uIHRvSGV4KGRhdGEpIHtcbiAgICBsZXQgb3V0ID0gXCJcIjtcbiAgICBmb3IgKGNvbnN0IGJ5dGUgb2YgZGF0YSkge1xuICAgICAgICBvdXQgKz0gKFwiMFwiICsgYnl0ZS50b1N0cmluZygxNikpLnNsaWNlKC0yKTtcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cbmV4cG9ydHMudG9IZXggPSB0b0hleDtcbmZ1bmN0aW9uIGZyb21IZXgoaGV4c3RyaW5nKSB7XG4gICAgaWYgKGhleHN0cmluZy5sZW5ndGggJSAyICE9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImhleCBzdHJpbmcgbGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAyXCIpO1xuICAgIH1cbiAgICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShoZXhzdHJpbmcubGVuZ3RoIC8gMik7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgaiA9IDIgKiBpO1xuICAgICAgICBjb25zdCBoZXhCeXRlQXNTdHJpbmcgPSBoZXhzdHJpbmcuc2xpY2UoaiwgaiArIDIpO1xuICAgICAgICBpZiAoIWhleEJ5dGVBc1N0cmluZy5tYXRjaCgvWzAtOWEtZl17Mn0vaSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImhleCBzdHJpbmcgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzXCIpO1xuICAgICAgICB9XG4gICAgICAgIG91dFtpXSA9IHBhcnNlSW50KGhleEJ5dGVBc1N0cmluZywgMTYpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufVxuZXhwb3J0cy5mcm9tSGV4ID0gZnJvbUhleDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/hex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;\nvar ascii_1 = __webpack_require__(/*! ./ascii */ \"(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js\");\nObject.defineProperty(exports, \"fromAscii\", ({ enumerable: true, get: function () { return ascii_1.fromAscii; } }));\nObject.defineProperty(exports, \"toAscii\", ({ enumerable: true, get: function () { return ascii_1.toAscii; } }));\nvar base64_1 = __webpack_require__(/*! ./base64 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/base64.js\");\nObject.defineProperty(exports, \"fromBase64\", ({ enumerable: true, get: function () { return base64_1.fromBase64; } }));\nObject.defineProperty(exports, \"toBase64\", ({ enumerable: true, get: function () { return base64_1.toBase64; } }));\nvar bech32_1 = __webpack_require__(/*! ./bech32 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js\");\nObject.defineProperty(exports, \"fromBech32\", ({ enumerable: true, get: function () { return bech32_1.fromBech32; } }));\nObject.defineProperty(exports, \"normalizeBech32\", ({ enumerable: true, get: function () { return bech32_1.normalizeBech32; } }));\nObject.defineProperty(exports, \"toBech32\", ({ enumerable: true, get: function () { return bech32_1.toBech32; } }));\nvar hex_1 = __webpack_require__(/*! ./hex */ \"(ssr)/./node_modules/@cosmjs/encoding/build/hex.js\");\nObject.defineProperty(exports, \"fromHex\", ({ enumerable: true, get: function () { return hex_1.fromHex; } }));\nObject.defineProperty(exports, \"toHex\", ({ enumerable: true, get: function () { return hex_1.toHex; } }));\nvar rfc3339_1 = __webpack_require__(/*! ./rfc3339 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js\");\nObject.defineProperty(exports, \"fromRfc3339\", ({ enumerable: true, get: function () { return rfc3339_1.fromRfc3339; } }));\nObject.defineProperty(exports, \"toRfc3339\", ({ enumerable: true, get: function () { return rfc3339_1.toRfc3339; } }));\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js\");\nObject.defineProperty(exports, \"fromUtf8\", ({ enumerable: true, get: function () { return utf8_1.fromUtf8; } }));\nObject.defineProperty(exports, \"toUtf8\", ({ enumerable: true, get: function () { return utf8_1.toUtf8; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsaUJBQWlCLEdBQUcsbUJBQW1CLEdBQUcsYUFBYSxHQUFHLGVBQWUsR0FBRyxnQkFBZ0IsR0FBRyx1QkFBdUIsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxlQUFlLEdBQUcsaUJBQWlCO0FBQzdQLGNBQWMsbUJBQU8sQ0FBQyxxRUFBUztBQUMvQiw2Q0FBNEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDakgsMkNBQTBDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzdHLGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsNENBQTJDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQ2hILGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbURBQWtELEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzlILDRDQUEyQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUNoSCxZQUFZLG1CQUFPLENBQUMsaUVBQU87QUFDM0IsMkNBQTBDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQzNHLHlDQUF3QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN2RyxnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBVztBQUNuQywrQ0FBOEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdkgsNkNBQTRDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ25ILGFBQWEsbUJBQU8sQ0FBQyxtRUFBUTtBQUM3Qiw0Q0FBMkMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDOUcsMENBQXlDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQzFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvZW5jb2RpbmcvYnVpbGQvaW5kZXguanM/NDAxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9VdGY4ID0gZXhwb3J0cy5mcm9tVXRmOCA9IGV4cG9ydHMudG9SZmMzMzM5ID0gZXhwb3J0cy5mcm9tUmZjMzMzOSA9IGV4cG9ydHMudG9IZXggPSBleHBvcnRzLmZyb21IZXggPSBleHBvcnRzLnRvQmVjaDMyID0gZXhwb3J0cy5ub3JtYWxpemVCZWNoMzIgPSBleHBvcnRzLmZyb21CZWNoMzIgPSBleHBvcnRzLnRvQmFzZTY0ID0gZXhwb3J0cy5mcm9tQmFzZTY0ID0gZXhwb3J0cy50b0FzY2lpID0gZXhwb3J0cy5mcm9tQXNjaWkgPSB2b2lkIDA7XG52YXIgYXNjaWlfMSA9IHJlcXVpcmUoXCIuL2FzY2lpXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbUFzY2lpXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhc2NpaV8xLmZyb21Bc2NpaTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvQXNjaWlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFzY2lpXzEudG9Bc2NpaTsgfSB9KTtcbnZhciBiYXNlNjRfMSA9IHJlcXVpcmUoXCIuL2Jhc2U2NFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21CYXNlNjRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJhc2U2NF8xLmZyb21CYXNlNjQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0Jhc2U2NFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYmFzZTY0XzEudG9CYXNlNjQ7IH0gfSk7XG52YXIgYmVjaDMyXzEgPSByZXF1aXJlKFwiLi9iZWNoMzJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tQmVjaDMyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBiZWNoMzJfMS5mcm9tQmVjaDMyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibm9ybWFsaXplQmVjaDMyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBiZWNoMzJfMS5ub3JtYWxpemVCZWNoMzI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0JlY2gzMlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYmVjaDMyXzEudG9CZWNoMzI7IH0gfSk7XG52YXIgaGV4XzEgPSByZXF1aXJlKFwiLi9oZXhcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tSGV4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoZXhfMS5mcm9tSGV4OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9IZXhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhleF8xLnRvSGV4OyB9IH0pO1xudmFyIHJmYzMzMzlfMSA9IHJlcXVpcmUoXCIuL3JmYzMzMzlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tUmZjMzMzOVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmZjMzMzOV8xLmZyb21SZmMzMzM5OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9SZmMzMzM5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZmMzMzM5XzEudG9SZmMzMzM5OyB9IH0pO1xudmFyIHV0ZjhfMSA9IHJlcXVpcmUoXCIuL3V0ZjhcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tVXRmOFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRmOF8xLmZyb21VdGY4OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9VdGY4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGY4XzEudG9VdGY4OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/rfc3339.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toRfc3339 = exports.fromRfc3339 = void 0;\nconst rfc3339Matcher = /^(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,9})?((?:[+-]\\d{2}:\\d{2})|Z)$/;\nfunction padded(integer, length = 2) {\n    return integer.toString().padStart(length, \"0\");\n}\nfunction fromRfc3339(str) {\n    const matches = rfc3339Matcher.exec(str);\n    if (!matches) {\n        throw new Error(\"Date string is not in RFC3339 format\");\n    }\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    const hour = +matches[4];\n    const minute = +matches[5];\n    const second = +matches[6];\n    // fractional seconds match either undefined or a string like \".1\", \".123456789\"\n    const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1000) : 0;\n    let tzOffsetSign;\n    let tzOffsetHours;\n    let tzOffsetMinutes;\n    // if timezone is undefined, it must be Z or nothing (otherwise the group would have captured).\n    if (matches[8] === \"Z\") {\n        tzOffsetSign = 1;\n        tzOffsetHours = 0;\n        tzOffsetMinutes = 0;\n    }\n    else {\n        tzOffsetSign = matches[8].substring(0, 1) === \"-\" ? -1 : 1;\n        tzOffsetHours = +matches[8].substring(1, 3);\n        tzOffsetMinutes = +matches[8].substring(4, 6);\n    }\n    const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60; // seconds\n    const timestamp = Date.UTC(year, month - 1, day, hour, minute, second, milliSeconds) - tzOffset * 1000;\n    return new Date(timestamp);\n}\nexports.fromRfc3339 = fromRfc3339;\nfunction toRfc3339(date) {\n    const year = date.getUTCFullYear();\n    const month = padded(date.getUTCMonth() + 1);\n    const day = padded(date.getUTCDate());\n    const hour = padded(date.getUTCHours());\n    const minute = padded(date.getUTCMinutes());\n    const second = padded(date.getUTCSeconds());\n    const ms = padded(date.getUTCMilliseconds(), 3);\n    return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;\n}\nexports.toRfc3339 = toRfc3339;\n//# sourceMappingURL=rfc3339.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9yZmMzMzM5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG1CQUFtQjtBQUN2Qyw2QkFBNkIsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sSUFBSSxhQUFhLEVBQUUsSUFBSSxFQUFFO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsS0FBSyxHQUFHLE1BQU0sR0FBRyxJQUFJLEdBQUcsS0FBSyxHQUFHLE9BQU8sR0FBRyxPQUFPLEdBQUcsR0FBRztBQUNyRTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL3JmYzMzMzkuanM/MDI1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9SZmMzMzM5ID0gZXhwb3J0cy5mcm9tUmZjMzMzOSA9IHZvaWQgMDtcbmNvbnN0IHJmYzMzMzlNYXRjaGVyID0gL14oXFxkezR9KS0oXFxkezJ9KS0oXFxkezJ9KVtUIF0oXFxkezJ9KTooXFxkezJ9KTooXFxkezJ9KShcXC5cXGR7MSw5fSk/KCg/OlsrLV1cXGR7Mn06XFxkezJ9KXxaKSQvO1xuZnVuY3Rpb24gcGFkZGVkKGludGVnZXIsIGxlbmd0aCA9IDIpIHtcbiAgICByZXR1cm4gaW50ZWdlci50b1N0cmluZygpLnBhZFN0YXJ0KGxlbmd0aCwgXCIwXCIpO1xufVxuZnVuY3Rpb24gZnJvbVJmYzMzMzkoc3RyKSB7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHJmYzMzMzlNYXRjaGVyLmV4ZWMoc3RyKTtcbiAgICBpZiAoIW1hdGNoZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGF0ZSBzdHJpbmcgaXMgbm90IGluIFJGQzMzMzkgZm9ybWF0XCIpO1xuICAgIH1cbiAgICBjb25zdCB5ZWFyID0gK21hdGNoZXNbMV07XG4gICAgY29uc3QgbW9udGggPSArbWF0Y2hlc1syXTtcbiAgICBjb25zdCBkYXkgPSArbWF0Y2hlc1szXTtcbiAgICBjb25zdCBob3VyID0gK21hdGNoZXNbNF07XG4gICAgY29uc3QgbWludXRlID0gK21hdGNoZXNbNV07XG4gICAgY29uc3Qgc2Vjb25kID0gK21hdGNoZXNbNl07XG4gICAgLy8gZnJhY3Rpb25hbCBzZWNvbmRzIG1hdGNoIGVpdGhlciB1bmRlZmluZWQgb3IgYSBzdHJpbmcgbGlrZSBcIi4xXCIsIFwiLjEyMzQ1Njc4OVwiXG4gICAgY29uc3QgbWlsbGlTZWNvbmRzID0gbWF0Y2hlc1s3XSA/IE1hdGguZmxvb3IoK21hdGNoZXNbN10gKiAxMDAwKSA6IDA7XG4gICAgbGV0IHR6T2Zmc2V0U2lnbjtcbiAgICBsZXQgdHpPZmZzZXRIb3VycztcbiAgICBsZXQgdHpPZmZzZXRNaW51dGVzO1xuICAgIC8vIGlmIHRpbWV6b25lIGlzIHVuZGVmaW5lZCwgaXQgbXVzdCBiZSBaIG9yIG5vdGhpbmcgKG90aGVyd2lzZSB0aGUgZ3JvdXAgd291bGQgaGF2ZSBjYXB0dXJlZCkuXG4gICAgaWYgKG1hdGNoZXNbOF0gPT09IFwiWlwiKSB7XG4gICAgICAgIHR6T2Zmc2V0U2lnbiA9IDE7XG4gICAgICAgIHR6T2Zmc2V0SG91cnMgPSAwO1xuICAgICAgICB0ek9mZnNldE1pbnV0ZXMgPSAwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdHpPZmZzZXRTaWduID0gbWF0Y2hlc1s4XS5zdWJzdHJpbmcoMCwgMSkgPT09IFwiLVwiID8gLTEgOiAxO1xuICAgICAgICB0ek9mZnNldEhvdXJzID0gK21hdGNoZXNbOF0uc3Vic3RyaW5nKDEsIDMpO1xuICAgICAgICB0ek9mZnNldE1pbnV0ZXMgPSArbWF0Y2hlc1s4XS5zdWJzdHJpbmcoNCwgNik7XG4gICAgfVxuICAgIGNvbnN0IHR6T2Zmc2V0ID0gdHpPZmZzZXRTaWduICogKHR6T2Zmc2V0SG91cnMgKiA2MCArIHR6T2Zmc2V0TWludXRlcykgKiA2MDsgLy8gc2Vjb25kc1xuICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUuVVRDKHllYXIsIG1vbnRoIC0gMSwgZGF5LCBob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlTZWNvbmRzKSAtIHR6T2Zmc2V0ICogMTAwMDtcbiAgICByZXR1cm4gbmV3IERhdGUodGltZXN0YW1wKTtcbn1cbmV4cG9ydHMuZnJvbVJmYzMzMzkgPSBmcm9tUmZjMzMzOTtcbmZ1bmN0aW9uIHRvUmZjMzMzOShkYXRlKSB7XG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgICBjb25zdCBtb250aCA9IHBhZGRlZChkYXRlLmdldFVUQ01vbnRoKCkgKyAxKTtcbiAgICBjb25zdCBkYXkgPSBwYWRkZWQoZGF0ZS5nZXRVVENEYXRlKCkpO1xuICAgIGNvbnN0IGhvdXIgPSBwYWRkZWQoZGF0ZS5nZXRVVENIb3VycygpKTtcbiAgICBjb25zdCBtaW51dGUgPSBwYWRkZWQoZGF0ZS5nZXRVVENNaW51dGVzKCkpO1xuICAgIGNvbnN0IHNlY29uZCA9IHBhZGRlZChkYXRlLmdldFVUQ1NlY29uZHMoKSk7XG4gICAgY29uc3QgbXMgPSBwYWRkZWQoZGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKSwgMyk7XG4gICAgcmV0dXJuIGAke3llYXJ9LSR7bW9udGh9LSR7ZGF5fVQke2hvdXJ9OiR7bWludXRlfToke3NlY29uZH0uJHttc31aYDtcbn1cbmV4cG9ydHMudG9SZmMzMzM5ID0gdG9SZmMzMzM5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmZjMzMzOS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/utf8.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromUtf8 = exports.toUtf8 = void 0;\nfunction toUtf8(str) {\n    return new TextEncoder().encode(str);\n}\nexports.toUtf8 = toUtf8;\n/**\n * Takes UTF-8 data and decodes it to a string.\n *\n * In lossy mode, the replacement character � is used to substitude invalid\n * encodings. By default lossy mode is off and invalid data will lead to exceptions.\n */\nfunction fromUtf8(data, lossy = false) {\n    const fatal = !lossy;\n    return new TextDecoder(\"utf-8\", { fatal }).decode(data);\n}\nexports.fromUtf8 = fromUtf8;\n//# sourceMappingURL=utf8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC91dGY4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGNBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsT0FBTztBQUM3QztBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL3V0ZjguanM/Y2E0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbVV0ZjggPSBleHBvcnRzLnRvVXRmOCA9IHZvaWQgMDtcbmZ1bmN0aW9uIHRvVXRmOChzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnRzLnRvVXRmOCA9IHRvVXRmODtcbi8qKlxuICogVGFrZXMgVVRGLTggZGF0YSBhbmQgZGVjb2RlcyBpdCB0byBhIHN0cmluZy5cbiAqXG4gKiBJbiBsb3NzeSBtb2RlLCB0aGUgcmVwbGFjZW1lbnQgY2hhcmFjdGVyIO+/vSBpcyB1c2VkIHRvIHN1YnN0aXR1ZGUgaW52YWxpZFxuICogZW5jb2RpbmdzLiBCeSBkZWZhdWx0IGxvc3N5IG1vZGUgaXMgb2ZmIGFuZCBpbnZhbGlkIGRhdGEgd2lsbCBsZWFkIHRvIGV4Y2VwdGlvbnMuXG4gKi9cbmZ1bmN0aW9uIGZyb21VdGY4KGRhdGEsIGxvc3N5ID0gZmFsc2UpIHtcbiAgICBjb25zdCBmYXRhbCA9ICFsb3NzeTtcbiAgICByZXR1cm4gbmV3IFRleHREZWNvZGVyKFwidXRmLThcIiwgeyBmYXRhbCB9KS5kZWNvZGUoZGF0YSk7XG59XG5leHBvcnRzLmZyb21VdGY4ID0gZnJvbVV0Zjg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGY4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/decimal.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/decimal.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Decimal = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\n// Too large values lead to massive memory usage. Limit to something sensible.\n// The largest value we need is 18 (Ether).\nconst maxFractionalDigits = 100;\n/**\n * A type for arbitrary precision, non-negative decimals.\n *\n * Instances of this class are immutable.\n */\nclass Decimal {\n    constructor(atomics, fractionalDigits) {\n        if (!atomics.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format. Only non-negative integers in decimal representation supported.\");\n        }\n        this.data = {\n            atomics: new bn_js_1.default(atomics),\n            fractionalDigits: fractionalDigits,\n        };\n    }\n    static fromUserInput(input, fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        const badCharacter = input.match(/[^0-9.]/);\n        if (badCharacter) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            throw new Error(`Invalid character at position ${badCharacter.index + 1}`);\n        }\n        let whole;\n        let fractional;\n        if (input === \"\") {\n            whole = \"0\";\n            fractional = \"\";\n        }\n        else if (input.search(/\\./) === -1) {\n            // integer format, no separator\n            whole = input;\n            fractional = \"\";\n        }\n        else {\n            const parts = input.split(\".\");\n            switch (parts.length) {\n                case 0:\n                case 1:\n                    throw new Error(\"Fewer than two elements in split result. This must not happen here.\");\n                case 2:\n                    if (!parts[1])\n                        throw new Error(\"Fractional part missing\");\n                    whole = parts[0];\n                    fractional = parts[1].replace(/0+$/, \"\");\n                    break;\n                default:\n                    throw new Error(\"More than one separator found\");\n            }\n        }\n        if (fractional.length > fractionalDigits) {\n            throw new Error(\"Got more fractional digits than supported\");\n        }\n        const quantity = `${whole}${fractional.padEnd(fractionalDigits, \"0\")}`;\n        return new Decimal(quantity, fractionalDigits);\n    }\n    static fromAtomics(atomics, fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(atomics, fractionalDigits);\n    }\n    /**\n     * Creates a Decimal with value 0.0 and the given number of fractial digits.\n     *\n     * Fractional digits are not relevant for the value but needed to be able\n     * to perform arithmetic operations with other decimals.\n     */\n    static zero(fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(\"0\", fractionalDigits);\n    }\n    /**\n     * Creates a Decimal with value 1.0 and the given number of fractial digits.\n     *\n     * Fractional digits are not relevant for the value but needed to be able\n     * to perform arithmetic operations with other decimals.\n     */\n    static one(fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(\"1\" + \"0\".repeat(fractionalDigits), fractionalDigits);\n    }\n    static verifyFractionalDigits(fractionalDigits) {\n        if (!Number.isInteger(fractionalDigits))\n            throw new Error(\"Fractional digits is not an integer\");\n        if (fractionalDigits < 0)\n            throw new Error(\"Fractional digits must not be negative\");\n        if (fractionalDigits > maxFractionalDigits) {\n            throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);\n        }\n    }\n    static compare(a, b) {\n        if (a.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        return a.data.atomics.cmp(new bn_js_1.default(b.atomics));\n    }\n    get atomics() {\n        return this.data.atomics.toString();\n    }\n    get fractionalDigits() {\n        return this.data.fractionalDigits;\n    }\n    /** Creates a new instance with the same value */\n    clone() {\n        return new Decimal(this.atomics, this.fractionalDigits);\n    }\n    /** Returns the greatest decimal <= this which has no fractional part (rounding down) */\n    floor() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return this.clone();\n        }\n        else {\n            return Decimal.fromAtomics(whole.mul(factor).toString(), this.fractionalDigits);\n        }\n    }\n    /** Returns the smallest decimal >= this which has no fractional part (rounding up) */\n    ceil() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return this.clone();\n        }\n        else {\n            return Decimal.fromAtomics(whole.addn(1).mul(factor).toString(), this.fractionalDigits);\n        }\n    }\n    toString() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return whole.toString();\n        }\n        else {\n            const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, \"0\");\n            const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, \"\");\n            return `${whole.toString()}.${trimmedFractionalPart}`;\n        }\n    }\n    /**\n     * Returns an approximation as a float type. Only use this if no\n     * exact calculation is required.\n     */\n    toFloatApproximation() {\n        const out = Number(this.toString());\n        if (Number.isNaN(out))\n            throw new Error(\"Conversion to number failed\");\n        return out;\n    }\n    /**\n     * a.plus(b) returns a+b.\n     *\n     * Both values need to have the same fractional digits.\n     */\n    plus(b) {\n        if (this.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        const sum = this.data.atomics.add(new bn_js_1.default(b.atomics));\n        return new Decimal(sum.toString(), this.fractionalDigits);\n    }\n    /**\n     * a.minus(b) returns a-b.\n     *\n     * Both values need to have the same fractional digits.\n     * The resulting difference needs to be non-negative.\n     */\n    minus(b) {\n        if (this.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        const difference = this.data.atomics.sub(new bn_js_1.default(b.atomics));\n        if (difference.ltn(0))\n            throw new Error(\"Difference must not be negative\");\n        return new Decimal(difference.toString(), this.fractionalDigits);\n    }\n    /**\n     * a.multiply(b) returns a*b.\n     *\n     * We only allow multiplication by unsigned integers to avoid rounding errors.\n     */\n    multiply(b) {\n        const product = this.data.atomics.mul(new bn_js_1.default(b.toString()));\n        return new Decimal(product.toString(), this.fractionalDigits);\n    }\n    equals(b) {\n        return Decimal.compare(this, b) === 0;\n    }\n    isLessThan(b) {\n        return Decimal.compare(this, b) < 0;\n    }\n    isLessThanOrEqual(b) {\n        return Decimal.compare(this, b) <= 0;\n    }\n    isGreaterThan(b) {\n        return Decimal.compare(this, b) > 0;\n    }\n    isGreaterThanOrEqual(b) {\n        return Decimal.compare(this, b) >= 0;\n    }\n}\nexports.Decimal = Decimal;\n//# sourceMappingURL=decimal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/decimal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;\nvar decimal_1 = __webpack_require__(/*! ./decimal */ \"(ssr)/./node_modules/@cosmjs/math/build/decimal.js\");\nObject.defineProperty(exports, \"Decimal\", ({ enumerable: true, get: function () { return decimal_1.Decimal; } }));\nvar integers_1 = __webpack_require__(/*! ./integers */ \"(ssr)/./node_modules/@cosmjs/math/build/integers.js\");\nObject.defineProperty(exports, \"Int53\", ({ enumerable: true, get: function () { return integers_1.Int53; } }));\nObject.defineProperty(exports, \"Uint32\", ({ enumerable: true, get: function () { return integers_1.Uint32; } }));\nObject.defineProperty(exports, \"Uint53\", ({ enumerable: true, get: function () { return integers_1.Uint53; } }));\nObject.defineProperty(exports, \"Uint64\", ({ enumerable: true, get: function () { return integers_1.Uint64; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9tYXRoL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxlQUFlO0FBQ2xGLGdCQUFnQixtQkFBTyxDQUFDLHFFQUFXO0FBQ25DLDJDQUEwQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUMvRyxpQkFBaUIsbUJBQU8sQ0FBQyx1RUFBWTtBQUNyQyx5Q0FBd0MsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDNUcsMENBQXlDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQzlHLDBDQUF5QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM5RywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC13YWxsZXQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9tYXRoL2J1aWxkL2luZGV4LmpzPzQ2MzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVpbnQ2NCA9IGV4cG9ydHMuVWludDUzID0gZXhwb3J0cy5VaW50MzIgPSBleHBvcnRzLkludDUzID0gZXhwb3J0cy5EZWNpbWFsID0gdm9pZCAwO1xudmFyIGRlY2ltYWxfMSA9IHJlcXVpcmUoXCIuL2RlY2ltYWxcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEZWNpbWFsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkZWNpbWFsXzEuRGVjaW1hbDsgfSB9KTtcbnZhciBpbnRlZ2Vyc18xID0gcmVxdWlyZShcIi4vaW50ZWdlcnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbnQ1M1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZWdlcnNfMS5JbnQ1MzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVpbnQzMlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZWdlcnNfMS5VaW50MzI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVaW50NTNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVnZXJzXzEuVWludDUzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVWludDY0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlZ2Vyc18xLlVpbnQ2NDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/integers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/integers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;\n/* eslint-disable no-bitwise */\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst uint64MaxValue = new bn_js_1.default(\"18446744073709551615\", 10, \"be\");\nclass Uint32 {\n    constructor(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        if (input < 0 || input > 4294967295) {\n            throw new Error(\"Input not in uint32 range: \" + input.toString());\n        }\n        this.data = input;\n    }\n    /** @deprecated use Uint32.fromBytes */\n    static fromBigEndianBytes(bytes) {\n        return Uint32.fromBytes(bytes);\n    }\n    /**\n     * Creates a Uint32 from a fixed length byte array.\n     *\n     * @param bytes a list of exactly 4 bytes\n     * @param endianess defaults to big endian\n     */\n    static fromBytes(bytes, endianess = \"be\") {\n        if (bytes.length !== 4) {\n            throw new Error(\"Invalid input length. Expected 4 bytes.\");\n        }\n        for (let i = 0; i < bytes.length; ++i) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n                throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n            }\n        }\n        const beBytes = endianess === \"be\" ? bytes : Array.from(bytes).reverse();\n        // Use mulitiplication instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);\n    }\n    static fromString(str) {\n        if (!str.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Uint32(Number.parseInt(str, 10));\n    }\n    toBytesBigEndian() {\n        // Use division instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint8Array([\n            Math.floor(this.data / 2 ** 24) & 0xff,\n            Math.floor(this.data / 2 ** 16) & 0xff,\n            Math.floor(this.data / 2 ** 8) & 0xff,\n            Math.floor(this.data / 2 ** 0) & 0xff,\n        ]);\n    }\n    toBytesLittleEndian() {\n        // Use division instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint8Array([\n            Math.floor(this.data / 2 ** 0) & 0xff,\n            Math.floor(this.data / 2 ** 8) & 0xff,\n            Math.floor(this.data / 2 ** 16) & 0xff,\n            Math.floor(this.data / 2 ** 24) & 0xff,\n        ]);\n    }\n    toNumber() {\n        return this.data;\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Uint32 = Uint32;\nclass Int53 {\n    constructor(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\"Input not in int53 range: \" + input.toString());\n        }\n        this.data = input;\n    }\n    static fromString(str) {\n        if (!str.match(/^-?[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Int53(Number.parseInt(str, 10));\n    }\n    toNumber() {\n        return this.data;\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Int53 = Int53;\nclass Uint53 {\n    constructor(input) {\n        const signed = new Int53(input);\n        if (signed.toNumber() < 0) {\n            throw new Error(\"Input is negative\");\n        }\n        this.data = signed;\n    }\n    static fromString(str) {\n        const signed = Int53.fromString(str);\n        return new Uint53(signed.toNumber());\n    }\n    toNumber() {\n        return this.data.toNumber();\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Uint53 = Uint53;\nclass Uint64 {\n    constructor(data) {\n        if (data.isNeg()) {\n            throw new Error(\"Input is negative\");\n        }\n        if (data.gt(uint64MaxValue)) {\n            throw new Error(\"Input exceeds uint64 range\");\n        }\n        this.data = data;\n    }\n    /** @deprecated use Uint64.fromBytes */\n    static fromBytesBigEndian(bytes) {\n        return Uint64.fromBytes(bytes);\n    }\n    /**\n     * Creates a Uint64 from a fixed length byte array.\n     *\n     * @param bytes a list of exactly 8 bytes\n     * @param endianess defaults to big endian\n     */\n    static fromBytes(bytes, endianess = \"be\") {\n        if (bytes.length !== 8) {\n            throw new Error(\"Invalid input length. Expected 8 bytes.\");\n        }\n        for (let i = 0; i < bytes.length; ++i) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n                throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n            }\n        }\n        const beBytes = endianess === \"be\" ? Array.from(bytes) : Array.from(bytes).reverse();\n        return new Uint64(new bn_js_1.default(beBytes));\n    }\n    static fromString(str) {\n        if (!str.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Uint64(new bn_js_1.default(str, 10, \"be\"));\n    }\n    static fromNumber(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        let bigint;\n        try {\n            bigint = new bn_js_1.default(input);\n        }\n        catch {\n            throw new Error(\"Input is not a safe integer\");\n        }\n        return new Uint64(bigint);\n    }\n    toBytesBigEndian() {\n        return Uint8Array.from(this.data.toArray(\"be\", 8));\n    }\n    toBytesLittleEndian() {\n        return Uint8Array.from(this.data.toArray(\"le\", 8));\n    }\n    toString() {\n        return this.data.toString(10);\n    }\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    toNumber() {\n        return this.data.toNumber();\n    }\n}\nexports.Uint64 = Uint64;\n// Assign classes to unused variables in order to verify static interface conformance at compile time.\n// Workaround for https://github.com/microsoft/TypeScript/issues/33892\nconst _int53Class = Int53;\nconst _uint53Class = Uint53;\nconst _uint32Class = Uint32;\nconst _uint64Class = Uint64;\n//# sourceMappingURL=integers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/integers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/arrays.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/arrays.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayContentStartsWith = exports.arrayContentEquals = void 0;\n/**\n * Compares the content of two arrays-like objects for equality.\n *\n * Equality is defined as having equal length and element values, where element equality means `===` returning `true`.\n *\n * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.\n * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.\n */\nfunction arrayContentEquals(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.arrayContentEquals = arrayContentEquals;\n/**\n * Checks if `a` starts with the contents of `b`.\n *\n * This requires equality of the element values, where element equality means `===` returning `true`.\n *\n * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.\n * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.\n */\nfunction arrayContentStartsWith(a, b) {\n    if (a.length < b.length)\n        return false;\n    for (let i = 0; i < b.length; ++i) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.arrayContentStartsWith = arrayContentStartsWith;\n//# sourceMappingURL=arrays.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9hcnJheXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCLEdBQUcsMEJBQTBCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdXRpbHMvYnVpbGQvYXJyYXlzLmpzP2FlODgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFycmF5Q29udGVudFN0YXJ0c1dpdGggPSBleHBvcnRzLmFycmF5Q29udGVudEVxdWFscyA9IHZvaWQgMDtcbi8qKlxuICogQ29tcGFyZXMgdGhlIGNvbnRlbnQgb2YgdHdvIGFycmF5cy1saWtlIG9iamVjdHMgZm9yIGVxdWFsaXR5LlxuICpcbiAqIEVxdWFsaXR5IGlzIGRlZmluZWQgYXMgaGF2aW5nIGVxdWFsIGxlbmd0aCBhbmQgZWxlbWVudCB2YWx1ZXMsIHdoZXJlIGVsZW1lbnQgZXF1YWxpdHkgbWVhbnMgYD09PWAgcmV0dXJuaW5nIGB0cnVlYC5cbiAqXG4gKiBUaGlzIGFsbG93cyB5b3UgdG8gY29tcGFyZSB0aGUgY29udGVudCBvZiBhIEJ1ZmZlciwgVWludDhBcnJheSBvciBudW1iZXJbXSwgaWdub3JpbmcgdGhlIHNwZWNpZmljIHR5cGUuXG4gKiBBcyBhIGNvbnNlcXVlbmNlLCB0aGlzIHJldHVybnMgZGlmZmVyZW50IHJlc3VsdHMgdGhhbiBKYXNtaW5lJ3MgYHRvRXF1YWxgLCB3aGljaCBlbnN1cmVzIGVsZW1lbnRzIGhhdmUgdGhlIHNhbWUgdHlwZS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlDb250ZW50RXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydHMuYXJyYXlDb250ZW50RXF1YWxzID0gYXJyYXlDb250ZW50RXF1YWxzO1xuLyoqXG4gKiBDaGVja3MgaWYgYGFgIHN0YXJ0cyB3aXRoIHRoZSBjb250ZW50cyBvZiBgYmAuXG4gKlxuICogVGhpcyByZXF1aXJlcyBlcXVhbGl0eSBvZiB0aGUgZWxlbWVudCB2YWx1ZXMsIHdoZXJlIGVsZW1lbnQgZXF1YWxpdHkgbWVhbnMgYD09PWAgcmV0dXJuaW5nIGB0cnVlYC5cbiAqXG4gKiBUaGlzIGFsbG93cyB5b3UgdG8gY29tcGFyZSB0aGUgY29udGVudCBvZiBhIEJ1ZmZlciwgVWludDhBcnJheSBvciBudW1iZXJbXSwgaWdub3JpbmcgdGhlIHNwZWNpZmljIHR5cGUuXG4gKiBBcyBhIGNvbnNlcXVlbmNlLCB0aGlzIHJldHVybnMgZGlmZmVyZW50IHJlc3VsdHMgdGhhbiBKYXNtaW5lJ3MgYHRvRXF1YWxgLCB3aGljaCBlbnN1cmVzIGVsZW1lbnRzIGhhdmUgdGhlIHNhbWUgdHlwZS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlDb250ZW50U3RhcnRzV2l0aChhLCBiKSB7XG4gICAgaWYgKGEubGVuZ3RoIDwgYi5sZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGIubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5hcnJheUNvbnRlbnRTdGFydHNXaXRoID0gYXJyYXlDb250ZW50U3RhcnRzV2l0aDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFycmF5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/arrays.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/assert.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/assert.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg || \"condition is not truthy\");\n    }\n}\nexports.assert = assert;\nfunction assertDefined(value, msg) {\n    if (value === undefined) {\n        throw new Error(msg ?? \"value is undefined\");\n    }\n}\nexports.assertDefined = assertDefined;\nfunction assertDefinedAndNotNull(value, msg) {\n    if (value === undefined || value === null) {\n        throw new Error(msg ?? \"value is undefined or null\");\n    }\n}\nexports.assertDefinedAndNotNull = assertDefinedAndNotNull;\n//# sourceMappingURL=assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9hc3NlcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLEdBQUcscUJBQXFCLEdBQUcsY0FBYztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdXRpbHMvYnVpbGQvYXNzZXJ0LmpzPzUwNmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFzc2VydERlZmluZWRBbmROb3ROdWxsID0gZXhwb3J0cy5hc3NlcnREZWZpbmVkID0gZXhwb3J0cy5hc3NlcnQgPSB2b2lkIDA7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlc1xuZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbXNnKSB7XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyB8fCBcImNvbmRpdGlvbiBpcyBub3QgdHJ1dGh5XCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuYXNzZXJ0ID0gYXNzZXJ0O1xuZnVuY3Rpb24gYXNzZXJ0RGVmaW5lZCh2YWx1ZSwgbXNnKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyA/PyBcInZhbHVlIGlzIHVuZGVmaW5lZFwiKTtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydERlZmluZWQgPSBhc3NlcnREZWZpbmVkO1xuZnVuY3Rpb24gYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGwodmFsdWUsIG1zZykge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cgPz8gXCJ2YWx1ZSBpcyB1bmRlZmluZWQgb3IgbnVsbFwiKTtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydERlZmluZWRBbmROb3ROdWxsID0gYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isUint8Array = exports.isNonNullObject = exports.isDefined = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;\nvar arrays_1 = __webpack_require__(/*! ./arrays */ \"(ssr)/./node_modules/@cosmjs/utils/build/arrays.js\");\nObject.defineProperty(exports, \"arrayContentEquals\", ({ enumerable: true, get: function () { return arrays_1.arrayContentEquals; } }));\nObject.defineProperty(exports, \"arrayContentStartsWith\", ({ enumerable: true, get: function () { return arrays_1.arrayContentStartsWith; } }));\nvar assert_1 = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@cosmjs/utils/build/assert.js\");\nObject.defineProperty(exports, \"assert\", ({ enumerable: true, get: function () { return assert_1.assert; } }));\nObject.defineProperty(exports, \"assertDefined\", ({ enumerable: true, get: function () { return assert_1.assertDefined; } }));\nObject.defineProperty(exports, \"assertDefinedAndNotNull\", ({ enumerable: true, get: function () { return assert_1.assertDefinedAndNotNull; } }));\nvar sleep_1 = __webpack_require__(/*! ./sleep */ \"(ssr)/./node_modules/@cosmjs/utils/build/sleep.js\");\nObject.defineProperty(exports, \"sleep\", ({ enumerable: true, get: function () { return sleep_1.sleep; } }));\nvar typechecks_1 = __webpack_require__(/*! ./typechecks */ \"(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js\");\nObject.defineProperty(exports, \"isDefined\", ({ enumerable: true, get: function () { return typechecks_1.isDefined; } }));\nObject.defineProperty(exports, \"isNonNullObject\", ({ enumerable: true, get: function () { return typechecks_1.isNonNullObject; } }));\nObject.defineProperty(exports, \"isUint8Array\", ({ enumerable: true, get: function () { return typechecks_1.isUint8Array; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUIsR0FBRyxpQkFBaUIsR0FBRyxhQUFhLEdBQUcsK0JBQStCLEdBQUcscUJBQXFCLEdBQUcsY0FBYyxHQUFHLDhCQUE4QixHQUFHLDBCQUEwQjtBQUMzTixlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakMsc0RBQXFELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3BJLDBEQUF5RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUM1SSxlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzVHLGlEQUFnRCxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUMxSCwyREFBMEQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDOUksY0FBYyxtQkFBTyxDQUFDLGtFQUFTO0FBQy9CLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RyxtQkFBbUIsbUJBQU8sQ0FBQyw0RUFBYztBQUN6Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDdEgsbURBQWtELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ2xJLGdEQUErQyxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM1SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3V0aWxzL2J1aWxkL2luZGV4LmpzPzI3NWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzVWludDhBcnJheSA9IGV4cG9ydHMuaXNOb25OdWxsT2JqZWN0ID0gZXhwb3J0cy5pc0RlZmluZWQgPSBleHBvcnRzLnNsZWVwID0gZXhwb3J0cy5hc3NlcnREZWZpbmVkQW5kTm90TnVsbCA9IGV4cG9ydHMuYXNzZXJ0RGVmaW5lZCA9IGV4cG9ydHMuYXNzZXJ0ID0gZXhwb3J0cy5hcnJheUNvbnRlbnRTdGFydHNXaXRoID0gZXhwb3J0cy5hcnJheUNvbnRlbnRFcXVhbHMgPSB2b2lkIDA7XG52YXIgYXJyYXlzXzEgPSByZXF1aXJlKFwiLi9hcnJheXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhcnJheUNvbnRlbnRFcXVhbHNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFycmF5c18xLmFycmF5Q29udGVudEVxdWFsczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFycmF5Q29udGVudFN0YXJ0c1dpdGhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFycmF5c18xLmFycmF5Q29udGVudFN0YXJ0c1dpdGg7IH0gfSk7XG52YXIgYXNzZXJ0XzEgPSByZXF1aXJlKFwiLi9hc3NlcnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhc3NlcnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFzc2VydF8xLmFzc2VydDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFzc2VydERlZmluZWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFzc2VydF8xLmFzc2VydERlZmluZWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhc3NlcnREZWZpbmVkQW5kTm90TnVsbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXNzZXJ0XzEuYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGw7IH0gfSk7XG52YXIgc2xlZXBfMSA9IHJlcXVpcmUoXCIuL3NsZWVwXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2xlZXBcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNsZWVwXzEuc2xlZXA7IH0gfSk7XG52YXIgdHlwZWNoZWNrc18xID0gcmVxdWlyZShcIi4vdHlwZWNoZWNrc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzRGVmaW5lZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZWNoZWNrc18xLmlzRGVmaW5lZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzTm9uTnVsbE9iamVjdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZWNoZWNrc18xLmlzTm9uTnVsbE9iamVjdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzVWludDhBcnJheVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZWNoZWNrc18xLmlzVWludDhBcnJheTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/sleep.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/sleep.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sleep = void 0;\nasync function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\n//# sourceMappingURL=sleep.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9zbGVlcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hcnQtd2FsbGV0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdXRpbHMvYnVpbGQvc2xlZXAuanM/ZDI3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2xlZXAgPSB2b2lkIDA7XG5hc3luYyBmdW5jdGlvbiBzbGVlcChtcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xufVxuZXhwb3J0cy5zbGVlcCA9IHNsZWVwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2xlZXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/sleep.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/typechecks.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDefined = exports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type).\n *\n * Note: this returns true for arrays, which are objects in JavaScript\n * even though array and object are different types in JSON.\n *\n * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNonNullObject(data) {\n    return typeof data === \"object\" && data !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\nfunction isUint8Array(data) {\n    if (!isNonNullObject(data))\n        return false;\n    // Avoid instanceof check which is unreliable in some JS environments\n    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n    if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\")\n        return false;\n    if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n        // Buffer.isBuffer is available at runtime\n        if (Buffer.isBuffer(data))\n            return false;\n    }\n    return true;\n}\nexports.isUint8Array = isUint8Array;\n/**\n * Checks if input is not undefined in a TypeScript-friendly way.\n *\n * This is convenient to use in e.g. `Array.filter` as it will convert\n * the type of a `Array<Foo | undefined>` to `Array<Foo>`.\n */\nfunction isDefined(value) {\n    return value !== undefined;\n}\nexports.isDefined = isDefined;\n//# sourceMappingURL=typechecks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC90eXBlY2hlY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG9CQUFvQixHQUFHLHVCQUF1QjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LXdhbGxldC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3V0aWxzL2J1aWxkL3R5cGVjaGVja3MuanM/YTYxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNEZWZpbmVkID0gZXhwb3J0cy5pc1VpbnQ4QXJyYXkgPSBleHBvcnRzLmlzTm9uTnVsbE9iamVjdCA9IHZvaWQgMDtcbi8qKlxuICogQ2hlY2tzIGlmIGRhdGEgaXMgYSBub24tbnVsbCBvYmplY3QgKGkuZS4gbWF0Y2hlcyB0aGUgVHlwZVNjcmlwdCBvYmplY3QgdHlwZSkuXG4gKlxuICogTm90ZTogdGhpcyByZXR1cm5zIHRydWUgZm9yIGFycmF5cywgd2hpY2ggYXJlIG9iamVjdHMgaW4gSmF2YVNjcmlwdFxuICogZXZlbiB0aG91Z2ggYXJyYXkgYW5kIG9iamVjdCBhcmUgZGlmZmVyZW50IHR5cGVzIGluIEpTT04uXG4gKlxuICogQHNlZSBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvZG9jcy9oYW5kYm9vay9iYXNpYy10eXBlcy5odG1sI29iamVjdFxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xuZnVuY3Rpb24gaXNOb25OdWxsT2JqZWN0KGRhdGEpIHtcbiAgICByZXR1cm4gdHlwZW9mIGRhdGEgPT09IFwib2JqZWN0XCIgJiYgZGF0YSAhPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOb25OdWxsT2JqZWN0ID0gaXNOb25OdWxsT2JqZWN0O1xuLyoqXG4gKiBDaGVja3MgaWYgZGF0YSBpcyBhbiBVaW50OEFycmF5LiBOb3RlOiBCdWZmZXIgaXMgdHJlYXRlZCBhcyBub3QgYSBVaW50OEFycmF5XG4gKi9cbmZ1bmN0aW9uIGlzVWludDhBcnJheShkYXRhKSB7XG4gICAgaWYgKCFpc05vbk51bGxPYmplY3QoZGF0YSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBBdm9pZCBpbnN0YW5jZW9mIGNoZWNrIHdoaWNoIGlzIHVucmVsaWFibGUgaW4gc29tZSBKUyBlbnZpcm9ubWVudHNcbiAgICAvLyBodHRwczovL21lZGl1bS5jb20vQHNpbW9ud2FydGEvbGltaXRhdGlvbnMtb2YtdGhlLWluc3RhbmNlb2Ytb3BlcmF0b3ItZjRiY2RiZTdhNDAwXG4gICAgLy8gVXNlIGNoZWNrIHRoYXQgd2FzIGRpc2N1c3NlZCBpbiBodHRwczovL2dpdGh1Yi5jb20vY3J5cHRvLWJyb3dzZXJpZnkvcGJrZGYyL3B1bGwvODFcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGRhdGEpICE9PSBcIltvYmplY3QgVWludDhBcnJheV1cIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgQnVmZmVyICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBCdWZmZXIuaXNCdWZmZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgLy8gQnVmZmVyLmlzQnVmZmVyIGlzIGF2YWlsYWJsZSBhdCBydW50aW1lXG4gICAgICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoZGF0YSkpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5pc1VpbnQ4QXJyYXkgPSBpc1VpbnQ4QXJyYXk7XG4vKipcbiAqIENoZWNrcyBpZiBpbnB1dCBpcyBub3QgdW5kZWZpbmVkIGluIGEgVHlwZVNjcmlwdC1mcmllbmRseSB3YXkuXG4gKlxuICogVGhpcyBpcyBjb252ZW5pZW50IHRvIHVzZSBpbiBlLmcuIGBBcnJheS5maWx0ZXJgIGFzIGl0IHdpbGwgY29udmVydFxuICogdGhlIHR5cGUgb2YgYSBgQXJyYXk8Rm9vIHwgdW5kZWZpbmVkPmAgdG8gYEFycmF5PEZvbz5gLlxuICovXG5mdW5jdGlvbiBpc0RlZmluZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuaXNEZWZpbmVkID0gaXNEZWZpbmVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZWNoZWNrcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js\n");

/***/ })

};
;